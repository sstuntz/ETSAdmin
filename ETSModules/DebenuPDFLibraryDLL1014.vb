' Debenu Quick PDF Library
' DLL Edition
' Version 10.14

' Copyright © 1999 - 2014 Debenu Pty Ltd

' DebenuPDFLibraryDLL1014.cpp
' VB.NET import header
' This file was generated by an automated process on 3 April 2014
' http://www.debenu.com/

Imports System
Imports System.Text
Imports System.Reflection
Imports System.Collections.Generic
Imports System.Runtime.InteropServices

Namespace DebenuPDFLibraryDLL1014

    Class DLL
        Public dllHandle As IntPtr = IntPtr.Zero
        Private shutDownList As New List(Of Integer)

        Friend Delegate Function DelegateIIDDD(ByVal P1 As Integer, ByVal P2 As Double, ByVal P3 As Double, ByVal P4 As Double) As Integer
        Friend Delegate Function DelegateIIDDDD(ByVal P1 As Integer, ByVal P2 As Double, ByVal P3 As Double, ByVal P4 As Double, ByVal P5 As Double) As Integer
        Friend Delegate Function DelegateIII(ByVal P1 As Integer, ByVal P2 As Integer) As Integer
        Friend Delegate Function DelegateIIDDDDDD(ByVal P1 As Integer, ByVal P2 As Double, ByVal P3 As Double, ByVal P4 As Double, ByVal P5 As Double, ByVal P6 As Double, ByVal P7 As Double) As Integer
        Friend Delegate Function DelegateIIWW(ByVal P1 As Integer, <MarshalAs(UnmanagedType.LPWStr)> ByVal P2 As String, <MarshalAs(UnmanagedType.LPWStr)> ByVal P3 As String) As Integer
        Friend Delegate Function DelegateIIWI(ByVal P1 As Integer, <MarshalAs(UnmanagedType.LPWStr)> ByVal P2 As String, ByVal P3 As Integer) As Integer
        Friend Delegate Function DelegateIIIWW(ByVal P1 As Integer, ByVal P2 As Integer, <MarshalAs(UnmanagedType.LPWStr)> ByVal P3 As String, <MarshalAs(UnmanagedType.LPWStr)> ByVal P4 As String) As Integer
        Friend Delegate Function DelegateIIIW(ByVal P1 As Integer, ByVal P2 As Integer, <MarshalAs(UnmanagedType.LPWStr)> ByVal P3 As String) As Integer
        Friend Delegate Function DelegateIIDDDDWII(ByVal P1 As Integer, ByVal P2 As Double, ByVal P3 As Double, ByVal P4 As Double, ByVal P5 As Double, <MarshalAs(UnmanagedType.LPWStr)> ByVal P6 As String, ByVal P7 As Integer, ByVal P8 As Integer) As Integer
        Friend Delegate Function DelegateIIWIII(ByVal P1 As Integer, <MarshalAs(UnmanagedType.LPWStr)> ByVal P2 As String, ByVal P3 As Integer, ByVal P4 As Integer, ByVal P5 As Integer) As Integer
        Friend Delegate Function DelegateIIBI(ByVal P1 As Integer, ByVal P2 As IntPtr, ByVal P3 As Integer) As Integer
        Friend Delegate Function DelegateIIW(ByVal P1 As Integer, <MarshalAs(UnmanagedType.LPWStr)> ByVal P2 As String) As Integer
        Friend Delegate Function DelegateIIDD(ByVal P1 As Integer, ByVal P2 As Double, ByVal P3 As Double) As Integer
        Friend Delegate Function DelegateIIDDDDII(ByVal P1 As Integer, ByVal P2 As Double, ByVal P3 As Double, ByVal P4 As Double, ByVal P5 As Double, ByVal P6 As Integer, ByVal P7 As Integer) As Integer
        Friend Delegate Function DelegateIIDDDDIWWII(ByVal P1 As Integer, ByVal P2 As Double, ByVal P3 As Double, ByVal P4 As Double, ByVal P5 As Double, ByVal P6 As Integer, <MarshalAs(UnmanagedType.LPWStr)> ByVal P7 As String, <MarshalAs(UnmanagedType.LPWStr)> ByVal P8 As String, ByVal P9 As Integer, ByVal P10 As Integer) As Integer
        Friend Delegate Function DelegateIIDDDDWIDII(ByVal P1 As Integer, ByVal P2 As Double, ByVal P3 As Double, ByVal P4 As Double, ByVal P5 As Double, <MarshalAs(UnmanagedType.LPWStr)> ByVal P6 As String, ByVal P7 As Integer, ByVal P8 As Double, ByVal P9 As Integer, ByVal P10 As Integer) As Integer
        Friend Delegate Function DelegateIIDDDDWWDII(ByVal P1 As Integer, ByVal P2 As Double, ByVal P3 As Double, ByVal P4 As Double, ByVal P5 As Double, <MarshalAs(UnmanagedType.LPWStr)> ByVal P6 As String, <MarshalAs(UnmanagedType.LPWStr)> ByVal P7 As String, ByVal P8 As Double, ByVal P9 As Integer, ByVal P10 As Integer) As Integer
        Friend Delegate Function DelegateIIDDDDWIIIIIDDDD(ByVal P1 As Integer, ByVal P2 As Double, ByVal P3 As Double, ByVal P4 As Double, ByVal P5 As Double, <MarshalAs(UnmanagedType.LPWStr)> ByVal P6 As String, ByVal P7 As Integer, ByVal P8 As Integer, ByVal P9 As Integer, ByVal P10 As Integer, ByVal P11 As Integer, ByVal P12 As Double, ByVal P13 As Double, ByVal P14 As Double, ByVal P15 As Double) As Integer
        Friend Delegate Function DelegateIIDDDDWI(ByVal P1 As Integer, ByVal P2 As Double, ByVal P3 As Double, ByVal P4 As Double, ByVal P5 As Double, <MarshalAs(UnmanagedType.LPWStr)> ByVal P6 As String, ByVal P7 As Integer) As Integer
        Friend Delegate Function DelegateIIDDDDIDI(ByVal P1 As Integer, ByVal P2 As Double, ByVal P3 As Double, ByVal P4 As Double, ByVal P5 As Double, ByVal P6 As Integer, ByVal P7 As Double, ByVal P8 As Integer) As Integer
        Friend Delegate Function DelegateIIDDIDDDDWWDDDI(ByVal P1 As Integer, ByVal P2 As Double, ByVal P3 As Double, ByVal P4 As Integer, ByVal P5 As Double, ByVal P6 As Double, ByVal P7 As Double, ByVal P8 As Double, <MarshalAs(UnmanagedType.LPWStr)> ByVal P9 As String, <MarshalAs(UnmanagedType.LPWStr)> ByVal P10 As String, ByVal P11 As Double, ByVal P12 As Double, ByVal P13 As Double, ByVal P14 As Integer) As Integer
        Friend Delegate Function DelegateIIIIIW(ByVal P1 As Integer, ByVal P2 As Integer, ByVal P3 As Integer, ByVal P4 As Integer, <MarshalAs(UnmanagedType.LPWStr)> ByVal P5 As String) As Integer
        Friend Delegate Function DelegateIIDDDDWWI(ByVal P1 As Integer, ByVal P2 As Double, ByVal P3 As Double, ByVal P4 As Double, ByVal P5 As Double, <MarshalAs(UnmanagedType.LPWStr)> ByVal P6 As String, <MarshalAs(UnmanagedType.LPWStr)> ByVal P7 As String, ByVal P8 As Integer) As Integer
        Friend Delegate Function DelegateIIWDDDDI(ByVal P1 As Integer, <MarshalAs(UnmanagedType.LPWStr)> ByVal P2 As String, ByVal P3 As Double, ByVal P4 As Double, ByVal P5 As Double, ByVal P6 As Double, ByVal P7 As Integer) As Integer
        Friend Delegate Function DelegateIIDDDDIWWDDDI(ByVal P1 As Integer, ByVal P2 As Double, ByVal P3 As Double, ByVal P4 As Double, ByVal P5 As Double, ByVal P6 As Integer, <MarshalAs(UnmanagedType.LPWStr)> ByVal P7 As String, <MarshalAs(UnmanagedType.LPWStr)> ByVal P8 As String, ByVal P9 As Double, ByVal P10 As Double, ByVal P11 As Double, ByVal P12 As Integer) As Integer
        Friend Delegate Function DelegateIIDDDDWWWDDDI(ByVal P1 As Integer, ByVal P2 As Double, ByVal P3 As Double, ByVal P4 As Double, ByVal P5 As Double, <MarshalAs(UnmanagedType.LPWStr)> ByVal P6 As String, <MarshalAs(UnmanagedType.LPWStr)> ByVal P7 As String, <MarshalAs(UnmanagedType.LPWStr)> ByVal P8 As String, ByVal P9 As Double, ByVal P10 As Double, ByVal P11 As Double, ByVal P12 As Integer) As Integer
        Friend Delegate Function DelegateIIWIW(ByVal P1 As Integer, <MarshalAs(UnmanagedType.LPWStr)> ByVal P2 As String, ByVal P3 As Integer, <MarshalAs(UnmanagedType.LPWStr)> ByVal P4 As String) As Integer
        Friend Delegate Function DelegateIIIDDDD(ByVal P1 As Integer, ByVal P2 As Integer, ByVal P3 As Double, ByVal P4 As Double, ByVal P5 As Double, ByVal P6 As Double) As Integer
        Friend Delegate Function DelegateIIBBI(ByVal P1 As Integer, ByVal P2 As IntPtr, ByVal P3 As IntPtr, ByVal P4 As Integer) As Integer
        Friend Delegate Function DelegateIIWWI(ByVal P1 As Integer, <MarshalAs(UnmanagedType.LPWStr)> ByVal P2 As String, <MarshalAs(UnmanagedType.LPWStr)> ByVal P3 As String, ByVal P4 As Integer) As Integer
        Friend Delegate Function DelegateII(ByVal P1 As Integer) As Integer
        Friend Delegate Function DelegateIID(ByVal P1 As Integer, ByVal P2 As Double) As Integer
        Friend Delegate Function DelegateIIII(ByVal P1 As Integer, ByVal P2 As Integer, ByVal P3 As Integer) As Integer
        Friend Delegate Function DelegateIIWWII(ByVal P1 As Integer, <MarshalAs(UnmanagedType.LPWStr)> ByVal P2 As String, <MarshalAs(UnmanagedType.LPWStr)> ByVal P3 As String, ByVal P4 As Integer, ByVal P5 As Integer) As Integer
        Friend Delegate Function DelegateIIIII(ByVal P1 As Integer, ByVal P2 As Integer, ByVal P3 As Integer, ByVal P4 As Integer) As Integer
        Friend Delegate Function DelegateIIIWI(ByVal P1 As Integer, ByVal P2 As Integer, <MarshalAs(UnmanagedType.LPWStr)> ByVal P3 As String, ByVal P4 As Integer) As Integer
        Friend Delegate Function DelegateBII(ByVal P1 As Integer, ByVal P2 As Integer) As IntPtr
        Friend Delegate Function DelegateI() As Integer
        Friend Delegate Function DelegateIIIIIDDDD(ByVal P1 As Integer, ByVal P2 As Integer, ByVal P3 As Integer, ByVal P4 As Integer, ByVal P5 As Double, ByVal P6 As Double, ByVal P7 As Double, ByVal P8 As Double) As Integer
        Friend Delegate Function DelegateIIIIIDDDDD(ByVal P1 As Integer, ByVal P2 As Integer, ByVal P3 As Integer, ByVal P4 As Integer, ByVal P5 As Double, ByVal P6 As Double, ByVal P7 As Double, ByVal P8 As Double, ByVal P9 As Double) As Integer
        Friend Delegate Function DelegateWIIII(ByVal P1 As Integer, ByVal P2 As Integer, ByVal P3 As Integer, ByVal P4 As Integer) As IntPtr
        Friend Delegate Function DelegateWIII(ByVal P1 As Integer, ByVal P2 As Integer, ByVal P3 As Integer) As IntPtr
        Friend Delegate Function DelegateBIIII(ByVal P1 As Integer, ByVal P2 As Integer, ByVal P3 As Integer, ByVal P4 As Integer) As IntPtr
        Friend Delegate Function DelegateDIIIII(ByVal P1 As Integer, ByVal P2 As Integer, ByVal P3 As Integer, ByVal P4 As Integer, ByVal P5 As Integer) As Double
        Friend Delegate Function DelegateIIIIII(ByVal P1 As Integer, ByVal P2 As Integer, ByVal P3 As Integer, ByVal P4 As Integer, ByVal P5 As Integer) As Integer
        Friend Delegate Function DelegateWIIW(ByVal P1 As Integer, ByVal P2 As Integer, <MarshalAs(UnmanagedType.LPWStr)> ByVal P3 As String) As IntPtr
        Friend Delegate Function DelegateBIII(ByVal P1 As Integer, ByVal P2 As Integer, ByVal P3 As Integer) As IntPtr
        Friend Delegate Function DelegateDIII(ByVal P1 As Integer, ByVal P2 As Integer, ByVal P3 As Integer) As Double
        Friend Delegate Function DelegateDIIII(ByVal P1 As Integer, ByVal P2 As Integer, ByVal P3 As Integer, ByVal P4 As Integer) As Double
        Friend Delegate Function DelegateIIIIDC(ByVal P1 As Integer, ByVal P2 As Integer, ByVal P3 As Integer, ByVal P4 As Double, ByVal P5 As IntPtr) As Integer
        Friend Delegate Function DelegateIIIIIDW(ByVal P1 As Integer, ByVal P2 As Integer, ByVal P3 As Integer, ByVal P4 As Integer, ByVal P5 As Double, <MarshalAs(UnmanagedType.LPWStr)> ByVal P6 As String) As Integer
        Friend Delegate Function DelegateBIIIID(ByVal P1 As Integer, ByVal P2 As Integer, ByVal P3 As Integer, ByVal P4 As Integer, ByVal P5 As Double) As IntPtr
        Friend Delegate Function DelegateIIIIDD(ByVal P1 As Integer, ByVal P2 As Integer, ByVal P3 As Integer, ByVal P4 As Double, ByVal P5 As Double) As Integer
        Friend Delegate Function DelegateIIIDD(ByVal P1 As Integer, ByVal P2 As Integer, ByVal P3 As Double, ByVal P4 As Double) As Integer
        Friend Delegate Function DelegateIIWWW(ByVal P1 As Integer, <MarshalAs(UnmanagedType.LPWStr)> ByVal P2 As String, <MarshalAs(UnmanagedType.LPWStr)> ByVal P3 As String, <MarshalAs(UnmanagedType.LPWStr)> ByVal P4 As String) As Integer
        Friend Delegate Function DelegateIIDDDDDII(ByVal P1 As Integer, ByVal P2 As Double, ByVal P3 As Double, ByVal P4 As Double, ByVal P5 As Double, ByVal P6 As Double, ByVal P7 As Integer, ByVal P8 As Integer) As Integer
        Friend Delegate Function DelegateIIDDDDI(ByVal P1 As Integer, ByVal P2 As Double, ByVal P3 As Double, ByVal P4 As Double, ByVal P5 As Double, ByVal P6 As Integer) As Integer
        Friend Delegate Function DelegateIIIDDDDDD(ByVal P1 As Integer, ByVal P2 As Integer, ByVal P3 As Double, ByVal P4 As Double, ByVal P5 As Double, ByVal P6 As Double, ByVal P7 As Double, ByVal P8 As Double) As Integer
        Friend Delegate Function DelegateIIDDDI(ByVal P1 As Integer, ByVal P2 As Double, ByVal P3 As Double, ByVal P4 As Double, ByVal P5 As Integer) As Integer
        Friend Delegate Function DelegateIIDDDWIII(ByVal P1 As Integer, ByVal P2 As Double, ByVal P3 As Double, ByVal P4 As Double, <MarshalAs(UnmanagedType.LPWStr)> ByVal P5 As String, ByVal P6 As Integer, ByVal P7 As Integer, ByVal P8 As Integer) As Integer
        Friend Delegate Function DelegateIIDDDDDDII(ByVal P1 As Integer, ByVal P2 As Double, ByVal P3 As Double, ByVal P4 As Double, ByVal P5 As Double, ByVal P6 As Double, ByVal P7 As Double, ByVal P8 As Integer, ByVal P9 As Integer) As Integer
        Friend Delegate Function DelegateIIDDDW(ByVal P1 As Integer, ByVal P2 As Double, ByVal P3 As Double, ByVal P4 As Double, <MarshalAs(UnmanagedType.LPWStr)> ByVal P5 As String) As Integer
        Friend Delegate Function DelegateWIDDDDW(ByVal P1 As Integer, ByVal P2 As Double, ByVal P3 As Double, ByVal P4 As Double, ByVal P5 As Double, <MarshalAs(UnmanagedType.LPWStr)> ByVal P6 As String) As IntPtr
        Friend Delegate Function DelegateWIDDWDDDDDD(ByVal P1 As Integer, ByVal P2 As Double, ByVal P3 As Double, <MarshalAs(UnmanagedType.LPWStr)> ByVal P4 As String, ByVal P5 As Double, ByVal P6 As Double, ByVal P7 As Double, ByVal P8 As Double, ByVal P9 As Double, ByVal P10 As Double) As IntPtr
        Friend Delegate Function DelegateIIDWDDDDDD(ByVal P1 As Integer, ByVal P2 As Double, <MarshalAs(UnmanagedType.LPWStr)> ByVal P3 As String, ByVal P4 As Double, ByVal P5 As Double, ByVal P6 As Double, ByVal P7 As Double, ByVal P8 As Double, ByVal P9 As Double) As Integer
        Friend Delegate Function DelegateIIDDDDDDWI(ByVal P1 As Integer, ByVal P2 As Double, ByVal P3 As Double, ByVal P4 As Double, ByVal P5 As Double, ByVal P6 As Double, ByVal P7 As Double, <MarshalAs(UnmanagedType.LPWStr)> ByVal P8 As String, ByVal P9 As Integer) As Integer
        Friend Delegate Function DelegateIIDDWW(ByVal P1 As Integer, ByVal P2 As Double, ByVal P3 As Double, <MarshalAs(UnmanagedType.LPWStr)> ByVal P4 As String, <MarshalAs(UnmanagedType.LPWStr)> ByVal P5 As String) As Integer
        Friend Delegate Function DelegateIIDDWI(ByVal P1 As Integer, ByVal P2 As Double, ByVal P3 As Double, <MarshalAs(UnmanagedType.LPWStr)> ByVal P4 As String, ByVal P5 As Integer) As Integer
        Friend Delegate Function DelegateIIDDWIIIIDD(ByVal P1 As Integer, ByVal P2 As Double, ByVal P3 As Double, <MarshalAs(UnmanagedType.LPWStr)> ByVal P4 As String, ByVal P5 As Integer, ByVal P6 As Integer, ByVal P7 As Integer, ByVal P8 As Integer, ByVal P9 As Double, ByVal P10 As Double) As Integer
        Friend Delegate Function DelegateIIDDDWII(ByVal P1 As Integer, ByVal P2 As Double, ByVal P3 As Double, ByVal P4 As Double, <MarshalAs(UnmanagedType.LPWStr)> ByVal P5 As String, ByVal P6 As Integer, ByVal P7 As Integer) As Integer
        Friend Delegate Function DelegateIIDDDDDI(ByVal P1 As Integer, ByVal P2 As Double, ByVal P3 As Double, ByVal P4 As Double, ByVal P5 As Double, ByVal P6 As Double, ByVal P7 As Integer) As Integer
        Friend Delegate Function DelegateIIIDDDDD(ByVal P1 As Integer, ByVal P2 As Integer, ByVal P3 As Double, ByVal P4 As Double, ByVal P5 As Double, ByVal P6 As Double, ByVal P7 As Double) As Integer
        Friend Delegate Function DelegateIIDDDDD(ByVal P1 As Integer, ByVal P2 As Double, ByVal P3 As Double, ByVal P4 As Double, ByVal P5 As Double, ByVal P6 As Double) As Integer
        Friend Delegate Function DelegateIIDDDWW(ByVal P1 As Integer, ByVal P2 As Double, ByVal P3 As Double, ByVal P4 As Double, <MarshalAs(UnmanagedType.LPWStr)> ByVal P5 As String, <MarshalAs(UnmanagedType.LPWStr)> ByVal P6 As String) As Integer
        Friend Delegate Function DelegateIIDDDDDWI(ByVal P1 As Integer, ByVal P2 As Double, ByVal P3 As Double, ByVal P4 As Double, ByVal P5 As Double, ByVal P6 As Double, <MarshalAs(UnmanagedType.LPWStr)> ByVal P7 As String, ByVal P8 As Integer) As Integer
        Friend Delegate Function DelegateIIDDDDDWIIII(ByVal P1 As Integer, ByVal P2 As Double, ByVal P3 As Double, ByVal P4 As Double, ByVal P5 As Double, ByVal P6 As Double, <MarshalAs(UnmanagedType.LPWStr)> ByVal P7 As String, ByVal P8 As Integer, ByVal P9 As Integer, ByVal P10 As Integer, ByVal P11 As Integer) As Integer
        Friend Delegate Function DelegateIIDDDDDDI(ByVal P1 As Integer, ByVal P2 As Double, ByVal P3 As Double, ByVal P4 As Double, ByVal P5 As Double, ByVal P6 As Double, ByVal P7 As Double, ByVal P8 As Integer) As Integer
        Friend Delegate Function DelegateDIIDDDII(ByVal P1 As Integer, ByVal P2 As Integer, ByVal P3 As Double, ByVal P4 As Double, ByVal P5 As Double, ByVal P6 As Integer, ByVal P7 As Integer) As Double
        Friend Delegate Function DelegateIIDDW(ByVal P1 As Integer, ByVal P2 As Double, ByVal P3 As Double, <MarshalAs(UnmanagedType.LPWStr)> ByVal P4 As String) As Integer
        Friend Delegate Function DelegateIIDDWIDDDDDD(ByVal P1 As Integer, ByVal P2 As Double, ByVal P3 As Double, <MarshalAs(UnmanagedType.LPWStr)> ByVal P4 As String, ByVal P5 As Integer, ByVal P6 As Double, ByVal P7 As Double, ByVal P8 As Double, ByVal P9 As Double, ByVal P10 As Double, ByVal P11 As Double) As Integer
        Friend Delegate Function DelegateIIIIIIIIII(ByVal P1 As Integer, ByVal P2 As Integer, ByVal P3 As Integer, ByVal P4 As Integer, ByVal P5 As Integer, ByVal P6 As Integer, ByVal P7 As Integer, ByVal P8 As Integer, ByVal P9 As Integer) As Integer
        Friend Delegate Function DelegateIIWWWWII(ByVal P1 As Integer, <MarshalAs(UnmanagedType.LPWStr)> ByVal P2 As String, <MarshalAs(UnmanagedType.LPWStr)> ByVal P3 As String, <MarshalAs(UnmanagedType.LPWStr)> ByVal P4 As String, <MarshalAs(UnmanagedType.LPWStr)> ByVal P5 As String, ByVal P6 As Integer, ByVal P7 As Integer) As Integer
        Friend Delegate Function DelegateBIWWI(ByVal P1 As Integer, <MarshalAs(UnmanagedType.LPWStr)> ByVal P2 As String, <MarshalAs(UnmanagedType.LPWStr)> ByVal P3 As String, ByVal P4 As Integer) As IntPtr
        Friend Delegate Function DelegateWIWWII(ByVal P1 As Integer, <MarshalAs(UnmanagedType.LPWStr)> ByVal P2 As String, <MarshalAs(UnmanagedType.LPWStr)> ByVal P3 As String, ByVal P4 As Integer, ByVal P5 As Integer) As IntPtr
        Friend Delegate Function DelegateIIWWWW(ByVal P1 As Integer, <MarshalAs(UnmanagedType.LPWStr)> ByVal P2 As String, <MarshalAs(UnmanagedType.LPWStr)> ByVal P3 As String, <MarshalAs(UnmanagedType.LPWStr)> ByVal P4 As String, <MarshalAs(UnmanagedType.LPWStr)> ByVal P5 As String) As Integer
        Friend Delegate Function DelegateIIWWWWI(ByVal P1 As Integer, <MarshalAs(UnmanagedType.LPWStr)> ByVal P2 As String, <MarshalAs(UnmanagedType.LPWStr)> ByVal P3 As String, <MarshalAs(UnmanagedType.LPWStr)> ByVal P4 As String, <MarshalAs(UnmanagedType.LPWStr)> ByVal P5 As String, ByVal P6 As Integer) As Integer
        Friend Delegate Function DelegateWIWI(ByVal P1 As Integer, <MarshalAs(UnmanagedType.LPWStr)> ByVal P2 As String, ByVal P3 As Integer) As IntPtr
        Friend Delegate Function DelegateIIDDDDIII(ByVal P1 As Integer, ByVal P2 As Double, ByVal P3 As Double, ByVal P4 As Double, ByVal P5 As Double, ByVal P6 As Integer, ByVal P7 As Integer, ByVal P8 As Integer) As Integer
        Friend Delegate Function DelegateWI(ByVal P1 As Integer) As IntPtr
        Friend Delegate Function DelegateWII(ByVal P1 As Integer, ByVal P2 As Integer) As IntPtr
        Friend Delegate Function DelegateIIIIW(ByVal P1 As Integer, ByVal P2 As Integer, ByVal P3 As Integer, <MarshalAs(UnmanagedType.LPWStr)> ByVal P4 As String) As Integer
        Friend Delegate Function DelegateDIDWI(ByVal P1 As Integer, ByVal P2 As Double, <MarshalAs(UnmanagedType.LPWStr)> ByVal P3 As String, ByVal P4 As Integer) As Double
        Friend Delegate Function DelegateCIII(ByVal P1 As Integer, ByVal P2 As Integer, ByVal P3 As Integer) As IntPtr
        Friend Delegate Function DelegateWIW(ByVal P1 As Integer, <MarshalAs(UnmanagedType.LPWStr)> ByVal P2 As String) As IntPtr
        Friend Delegate Function DelegateBI(ByVal P1 As Integer) As IntPtr
        Friend Delegate Function DelegateWIWW(ByVal P1 As Integer, <MarshalAs(UnmanagedType.LPWStr)> ByVal P2 As String, <MarshalAs(UnmanagedType.LPWStr)> ByVal P3 As String) As IntPtr
        Friend Delegate Function DelegateDII(ByVal P1 As Integer, ByVal P2 As Integer) As Double
        Friend Delegate Function DelegateDIDW(ByVal P1 As Integer, ByVal P2 As Double, <MarshalAs(UnmanagedType.LPWStr)> ByVal P3 As String) As Double
        Friend Delegate Function DelegateIIDW(ByVal P1 As Integer, ByVal P2 As Double, <MarshalAs(UnmanagedType.LPWStr)> ByVal P3 As String) As Integer
        Friend Delegate Function DelegateIIB(ByVal P1 As Integer, ByVal P2 As IntPtr) As Integer
        Friend Delegate Function DelegateBIWIIII(ByVal P1 As Integer, <MarshalAs(UnmanagedType.LPWStr)> ByVal P2 As String, ByVal P3 As Integer, ByVal P4 As Integer, ByVal P5 As Integer, ByVal P6 As Integer) As IntPtr
        Friend Delegate Function DelegateBIW(ByVal P1 As Integer, <MarshalAs(UnmanagedType.LPWStr)> ByVal P2 As String) As IntPtr
        Friend Delegate Function DelegateDI(ByVal P1 As Integer) As Double
        Friend Delegate Function DelegateWIIIII(ByVal P1 As Integer, ByVal P2 As Integer, ByVal P3 As Integer, ByVal P4 As Integer, ByVal P5 As Integer) As IntPtr
        Friend Delegate Function DelegateDIW(ByVal P1 As Integer, <MarshalAs(UnmanagedType.LPWStr)> ByVal P2 As String) As Double
        Friend Delegate Function DelegateWIDWW(ByVal P1 As Integer, ByVal P2 As Double, <MarshalAs(UnmanagedType.LPWStr)> ByVal P3 As String, <MarshalAs(UnmanagedType.LPWStr)> ByVal P4 As String) As IntPtr
        Friend Delegate Function DelegateIIWII(ByVal P1 As Integer, <MarshalAs(UnmanagedType.LPWStr)> ByVal P2 As String, ByVal P3 As Integer, ByVal P4 As Integer) As Integer
        Friend Delegate Function DelegateIIDI(ByVal P1 As Integer, ByVal P2 As Double, ByVal P3 As Integer) As Integer
        Friend Delegate Function DelegateIIBW(ByVal P1 As Integer, ByVal P2 As IntPtr, <MarshalAs(UnmanagedType.LPWStr)> ByVal P3 As String) As Integer
        Friend Delegate Function DelegateIIIIIII(ByVal P1 As Integer, ByVal P2 As Integer, ByVal P3 As Integer, ByVal P4 As Integer, ByVal P5 As Integer, ByVal P6 As Integer) As Integer
        Friend Delegate Function DelegateIIIWID(ByVal P1 As Integer, ByVal P2 As Integer, <MarshalAs(UnmanagedType.LPWStr)> ByVal P3 As String, ByVal P4 As Integer, ByVal P5 As Double) As Integer
        Friend Delegate Function DelegateIIWDDDDDDDDDDI(ByVal P1 As Integer, <MarshalAs(UnmanagedType.LPWStr)> ByVal P2 As String, ByVal P3 As Double, ByVal P4 As Double, ByVal P5 As Double, ByVal P6 As Double, ByVal P7 As Double, ByVal P8 As Double, ByVal P9 As Double, ByVal P10 As Double, ByVal P11 As Double, ByVal P12 As Double, ByVal P13 As Integer) As Integer
        Friend Delegate Function DelegateIIWIIIW(ByVal P1 As Integer, <MarshalAs(UnmanagedType.LPWStr)> ByVal P2 As String, ByVal P3 As Integer, ByVal P4 As Integer, ByVal P5 As Integer, <MarshalAs(UnmanagedType.LPWStr)> ByVal P6 As String) As Integer
        Friend Delegate Function DelegateIIWWIW(ByVal P1 As Integer, <MarshalAs(UnmanagedType.LPWStr)> ByVal P2 As String, <MarshalAs(UnmanagedType.LPWStr)> ByVal P3 As String, ByVal P4 As Integer, <MarshalAs(UnmanagedType.LPWStr)> ByVal P5 As String) As Integer
        Friend Delegate Function DelegateIIDWIIW(ByVal P1 As Integer, ByVal P2 As Double, <MarshalAs(UnmanagedType.LPWStr)> ByVal P3 As String, ByVal P4 As Integer, ByVal P5 As Integer, <MarshalAs(UnmanagedType.LPWStr)> ByVal P6 As String) As Integer
        Friend Delegate Function DelegateIIDIIIW(ByVal P1 As Integer, ByVal P2 As Double, ByVal P3 As Integer, ByVal P4 As Integer, ByVal P5 As Integer, <MarshalAs(UnmanagedType.LPWStr)> ByVal P6 As String) As Integer
        Friend Delegate Function DelegateIIDIC(ByVal P1 As Integer, ByVal P2 As Double, ByVal P3 As Integer, ByVal P4 As IntPtr) As Integer
        Friend Delegate Function DelegateIIDIIW(ByVal P1 As Integer, ByVal P2 As Double, ByVal P3 As Integer, ByVal P4 As Integer, <MarshalAs(UnmanagedType.LPWStr)> ByVal P5 As String) As Integer
        Friend Delegate Function DelegateBIDII(ByVal P1 As Integer, ByVal P2 As Double, ByVal P3 As Integer, ByVal P4 As Integer) As IntPtr
        Friend Delegate Function DelegateBISI(ByVal P1 As Integer, ByVal P2 As String, ByVal P3 As Integer) As IntPtr
        Friend Delegate Function DelegateIIIDDD(ByVal P1 As Integer, ByVal P2 As Integer, ByVal P3 As Double, ByVal P4 As Double, ByVal P5 As Double) As Integer
        Friend Delegate Function DelegateIIIDIDD(ByVal P1 As Integer, ByVal P2 As Integer, ByVal P3 As Double, ByVal P4 As Integer, ByVal P5 As Double, ByVal P6 As Double) As Integer
        Friend Delegate Function DelegateIIIID(ByVal P1 As Integer, ByVal P2 As Integer, ByVal P3 As Integer, ByVal P4 As Double) As Integer
        Friend Delegate Function DelegateIIIIDDDDDDDD(ByVal P1 As Integer, ByVal P2 As Integer, ByVal P3 As Integer, ByVal P4 As Double, ByVal P5 As Double, ByVal P6 As Double, ByVal P7 As Double, ByVal P8 As Double, ByVal P9 As Double, ByVal P10 As Double, ByVal P11 As Double) As Integer
        Friend Delegate Function DelegateIIWD(ByVal P1 As Integer, <MarshalAs(UnmanagedType.LPWStr)> ByVal P2 As String, ByVal P3 As Double) As Integer
        Friend Delegate Function DelegateIIID(ByVal P1 As Integer, ByVal P2 As Integer, ByVal P3 As Double) As Integer
        Friend Delegate Function DelegateIIIWD(ByVal P1 As Integer, ByVal P2 As Integer, <MarshalAs(UnmanagedType.LPWStr)> ByVal P3 As String, ByVal P4 As Double) As Integer
        Friend Delegate Function DelegateIIIIWW(ByVal P1 As Integer, ByVal P2 As Integer, ByVal P3 As Integer, <MarshalAs(UnmanagedType.LPWStr)> ByVal P4 As String, <MarshalAs(UnmanagedType.LPWStr)> ByVal P5 As String) As Integer
        Friend Delegate Function DelegateIIIIIIII(ByVal P1 As Integer, ByVal P2 As Integer, ByVal P3 As Integer, ByVal P4 As Integer, ByVal P5 As Integer, ByVal P6 As Integer, ByVal P7 As Integer) As Integer
        Friend Delegate Function DelegateIIIWWI(ByVal P1 As Integer, ByVal P2 As Integer, <MarshalAs(UnmanagedType.LPWStr)> ByVal P3 As String, <MarshalAs(UnmanagedType.LPWStr)> ByVal P4 As String, ByVal P5 As Integer) As Integer
        Friend Delegate Function DelegateIIDDDDDDDD(ByVal P1 As Integer, ByVal P2 As Double, ByVal P3 As Double, ByVal P4 As Double, ByVal P5 As Double, ByVal P6 As Double, ByVal P7 As Double, ByVal P8 As Double, ByVal P9 As Double) As Integer
        Friend Delegate Function DelegateIIIB(ByVal P1 As Integer, ByVal P2 As Integer, ByVal P3 As IntPtr) As Integer
        Friend Delegate Function DelegateIIIIIIDDDD(ByVal P1 As Integer, ByVal P2 As Integer, ByVal P3 As Integer, ByVal P4 As Integer, ByVal P5 As Integer, ByVal P6 As Double, ByVal P7 As Double, ByVal P8 As Double, ByVal P9 As Double) As Integer
        Friend Delegate Function DelegateIIIIDI(ByVal P1 As Integer, ByVal P2 As Integer, ByVal P3 As Integer, ByVal P4 As Double, ByVal P5 As Integer) As Integer
        Friend Delegate Function DelegateIIIWIIIDDDDI(ByVal P1 As Integer, ByVal P2 As Integer, <MarshalAs(UnmanagedType.LPWStr)> ByVal P3 As String, ByVal P4 As Integer, ByVal P5 As Integer, ByVal P6 As Integer, ByVal P7 As Double, ByVal P8 As Double, ByVal P9 As Double, ByVal P10 As Double, ByVal P11 As Integer) As Integer
        Friend Delegate Function DelegateIIIWWW(ByVal P1 As Integer, ByVal P2 As Integer, <MarshalAs(UnmanagedType.LPWStr)> ByVal P3 As String, <MarshalAs(UnmanagedType.LPWStr)> ByVal P4 As String, <MarshalAs(UnmanagedType.LPWStr)> ByVal P5 As String) As Integer
        Friend Delegate Function DelegateIIIIDDD(ByVal P1 As Integer, ByVal P2 As Integer, ByVal P3 As Integer, ByVal P4 As Double, ByVal P5 As Double, ByVal P6 As Double) As Integer
        Friend Delegate Function DelegateIIIIDDDD(ByVal P1 As Integer, ByVal P2 As Integer, ByVal P3 As Integer, ByVal P4 As Double, ByVal P5 As Double, ByVal P6 As Double, ByVal P7 As Double) As Integer
        Friend Delegate Function DelegateIIIIIIIDDD(ByVal P1 As Integer, ByVal P2 As Integer, ByVal P3 As Integer, ByVal P4 As Integer, ByVal P5 As Integer, ByVal P6 As Integer, ByVal P7 As Double, ByVal P8 As Double, ByVal P9 As Double) As Integer
        Friend Delegate Function DelegateIIIIIIIDDDD(ByVal P1 As Integer, ByVal P2 As Integer, ByVal P3 As Integer, ByVal P4 As Integer, ByVal P5 As Integer, ByVal P6 As Integer, ByVal P7 As Double, ByVal P8 As Double, ByVal P9 As Double, ByVal P10 As Double) As Integer
        Friend Delegate Function DelegateIIIIIIIIDDD(ByVal P1 As Integer, ByVal P2 As Integer, ByVal P3 As Integer, ByVal P4 As Integer, ByVal P5 As Integer, ByVal P6 As Integer, ByVal P7 As Integer, ByVal P8 As Double, ByVal P9 As Double, ByVal P10 As Double) As Integer
        Friend Delegate Function DelegateIIIIIIIIDDDD(ByVal P1 As Integer, ByVal P2 As Integer, ByVal P3 As Integer, ByVal P4 As Integer, ByVal P5 As Integer, ByVal P6 As Integer, ByVal P7 As Integer, ByVal P8 As Double, ByVal P9 As Double, ByVal P10 As Double, ByVal P11 As Double) As Integer
        Friend Delegate Function DelegateIIIIIIIID(ByVal P1 As Integer, ByVal P2 As Integer, ByVal P3 As Integer, ByVal P4 As Integer, ByVal P5 As Integer, ByVal P6 As Integer, ByVal P7 As Integer, ByVal P8 As Double) As Integer
        Friend Delegate Function DelegateIIIIIIID(ByVal P1 As Integer, ByVal P2 As Integer, ByVal P3 As Integer, ByVal P4 As Integer, ByVal P5 As Integer, ByVal P6 As Integer, ByVal P7 As Double) As Integer
        Friend Delegate Function DelegateIIIIID(ByVal P1 As Integer, ByVal P2 As Integer, ByVal P3 As Integer, ByVal P4 As Integer, ByVal P5 As Double) As Integer
        Friend Delegate Function DelegateIIWDDD(ByVal P1 As Integer, <MarshalAs(UnmanagedType.LPWStr)> ByVal P2 As String, ByVal P3 As Double, ByVal P4 As Double, ByVal P5 As Double) As Integer
        Friend Delegate Function DelegateIIWWWWWWWWW(ByVal P1 As Integer, <MarshalAs(UnmanagedType.LPWStr)> ByVal P2 As String, <MarshalAs(UnmanagedType.LPWStr)> ByVal P3 As String, <MarshalAs(UnmanagedType.LPWStr)> ByVal P4 As String, <MarshalAs(UnmanagedType.LPWStr)> ByVal P5 As String, <MarshalAs(UnmanagedType.LPWStr)> ByVal P6 As String, <MarshalAs(UnmanagedType.LPWStr)> ByVal P7 As String, <MarshalAs(UnmanagedType.LPWStr)> ByVal P8 As String, <MarshalAs(UnmanagedType.LPWStr)> ByVal P9 As String, <MarshalAs(UnmanagedType.LPWStr)> ByVal P10 As String) As Integer
        Friend Delegate Function DelegateIISBII(ByVal P1 As Integer, ByVal P2 As String, ByVal P3 As IntPtr, ByVal P4 As Integer, ByVal P5 As Integer) As Integer
        Friend Delegate Function DelegateIIWWWII(ByVal P1 As Integer, <MarshalAs(UnmanagedType.LPWStr)> ByVal P2 As String, <MarshalAs(UnmanagedType.LPWStr)> ByVal P3 As String, <MarshalAs(UnmanagedType.LPWStr)> ByVal P4 As String, ByVal P5 As Integer, ByVal P6 As Integer) As Integer

        public DebenuPDFLibraryAddArcToPath As DelegateIIDDD
        public DebenuPDFLibraryAddBoxToPath As DelegateIIDDDD
        public DebenuPDFLibraryAddCJKFont As DelegateIII
        public DebenuPDFLibraryAddCurveToPath As DelegateIIDDDDDD
        public DebenuPDFLibraryAddEmbeddedFile As DelegateIIWW
        public DebenuPDFLibraryAddFileAttachment As DelegateIIWI
        public DebenuPDFLibraryAddFormFieldChoiceSub As DelegateIIIWW
        public DebenuPDFLibraryAddFormFieldSub As DelegateIIIW
        public DebenuPDFLibraryAddFormFont As DelegateIII
        public DebenuPDFLibraryAddFreeTextAnnotation As DelegateIIDDDDWII
        public DebenuPDFLibraryAddGlobalJavaScript As DelegateIIWW
        public DebenuPDFLibraryAddImageFromFile As DelegateIIWI
        public DebenuPDFLibraryAddImageFromFileOffset As DelegateIIWIII
        public DebenuPDFLibraryAddImageFromString As DelegateIIBI
        public DebenuPDFLibraryAddLGIDictToPage As DelegateIIW
        public DebenuPDFLibraryAddLineToPath As DelegateIIDD
        public DebenuPDFLibraryAddLinkToDestination As DelegateIIDDDDII
        public DebenuPDFLibraryAddLinkToEmbeddedFile As DelegateIIDDDDIWWII
        public DebenuPDFLibraryAddLinkToFile As DelegateIIDDDDWIDII
        public DebenuPDFLibraryAddLinkToFileDest As DelegateIIDDDDWWDII
        public DebenuPDFLibraryAddLinkToFileEx As DelegateIIDDDDWIIIIIDDDD
        public DebenuPDFLibraryAddLinkToJavaScript As DelegateIIDDDDWI
        public DebenuPDFLibraryAddLinkToLocalFile As DelegateIIDDDDWI
        public DebenuPDFLibraryAddLinkToPage As DelegateIIDDDDIDI
        public DebenuPDFLibraryAddLinkToWeb As DelegateIIDDDDWI
        public DebenuPDFLibraryAddNoteAnnotation As DelegateIIDDIDDDDWWDDDI
        public DebenuPDFLibraryAddOpenTypeFontFromFile As DelegateIIWI
        public DebenuPDFLibraryAddPageLabels As DelegateIIIIIW
        public DebenuPDFLibraryAddSVGAnnotationFromFile As DelegateIIDDDDWI
        public DebenuPDFLibraryAddSWFAnnotationFromFile As DelegateIIDDDDWWI
        public DebenuPDFLibraryAddSeparationColor As DelegateIIWDDDDI
        public DebenuPDFLibraryAddStampAnnotation As DelegateIIDDDDIWWDDDI
        public DebenuPDFLibraryAddStampAnnotationFromImage As DelegateIIDDDDWWWDDDI
        public DebenuPDFLibraryAddStandardFont As DelegateIII
        public DebenuPDFLibraryAddSubsettedFont As DelegateIIWIW
        public DebenuPDFLibraryAddTextMarkupAnnotation As DelegateIIIDDDD
        public DebenuPDFLibraryAddToBuffer As DelegateIIBBI
        public DebenuPDFLibraryAddToFileList As DelegateIIWW
        public DebenuPDFLibraryAddTrueTypeFont As DelegateIIWI
        public DebenuPDFLibraryAddTrueTypeFontFromFile As DelegateIIW
        public DebenuPDFLibraryAddTrueTypeSubsettedFont As DelegateIIWWI
        public DebenuPDFLibraryAddType1Font As DelegateIIW
        public DebenuPDFLibraryAddU3DAnnotationFromFile As DelegateIIDDDDWI
        public DebenuPDFLibraryAnalyseFile As DelegateIIWW
        public DebenuPDFLibraryAnnotationCount As DelegateII
        public DebenuPDFLibraryAnsiStringResultLength As DelegateII
        public DebenuPDFLibraryAppendSpace As DelegateIID
        public DebenuPDFLibraryAppendTableColumns As DelegateIIII
        public DebenuPDFLibraryAppendTableRows As DelegateIIII
        public DebenuPDFLibraryAppendText As DelegateIIW
        public DebenuPDFLibraryAppendToFile As DelegateIIW
        public DebenuPDFLibraryApplyStyle As DelegateIIW
        public DebenuPDFLibraryAttachAnnotToForm As DelegateIII
        public DebenuPDFLibraryBalanceContentStream As DelegateII
        public DebenuPDFLibraryBalancePageTree As DelegateIII
        public DebenuPDFLibraryBeginPageUpdate As DelegateII
        public DebenuPDFLibraryCapturePage As DelegateIII
        public DebenuPDFLibraryCapturePageEx As DelegateIIII
        public DebenuPDFLibraryCharWidth As DelegateIII
        public DebenuPDFLibraryCheckFileCompliance As DelegateIIWWII
        public DebenuPDFLibraryCheckObjects As DelegateII
        public DebenuPDFLibraryCheckPageAnnots As DelegateII
        public DebenuPDFLibraryCheckPassword As DelegateIIW
        public DebenuPDFLibraryClearFileList As DelegateIIW
        public DebenuPDFLibraryClearImage As DelegateIII
        public DebenuPDFLibraryClearPageLabels As DelegateII
        public DebenuPDFLibraryClearTextFormatting As DelegateII
        public DebenuPDFLibraryCloneOutlineAction As DelegateIII
        public DebenuPDFLibraryClonePages As DelegateIIIII
        public DebenuPDFLibraryCloseOutline As DelegateIII
        public DebenuPDFLibraryClosePath As DelegateII
        public DebenuPDFLibraryCombineContentStreams As DelegateII
        public DebenuPDFLibraryCompareOutlines As DelegateIIII
        public DebenuPDFLibraryCompressContent As DelegateII
        public DebenuPDFLibraryCompressFonts As DelegateIII
        public DebenuPDFLibraryCompressImages As DelegateIII
        public DebenuPDFLibraryCompressPage As DelegateII
        public DebenuPDFLibraryContentStreamCount As DelegateII
        public DebenuPDFLibraryContentStreamSafe As DelegateII
        public DebenuPDFLibraryCopyPageRanges As DelegateIIIW
        public DebenuPDFLibraryCopyPageRangesEx As DelegateIIIWI
        public DebenuPDFLibraryCreateBuffer As DelegateBII
        public DebenuPDFLibraryCreateLibrary As DelegateI
        public DebenuPDFLibraryCreateNewObject As DelegateII
        public DebenuPDFLibraryCreateTable As DelegateIIII
        public DebenuPDFLibraryDAAppendFile As DelegateIII
        public DebenuPDFLibraryDACapturePage As DelegateIIII
        public DebenuPDFLibraryDACapturePageEx As DelegateIIIII
        public DebenuPDFLibraryDACloseFile As DelegateIII
        public DebenuPDFLibraryDADrawCapturedPage As DelegateIIIIIDDDD
        public DebenuPDFLibraryDADrawRotatedCapturedPage As DelegateIIIIIDDDDD
        public DebenuPDFLibraryDAEmbedFileStreams As DelegateIIIW
        public DebenuPDFLibraryDAExtractPageText As DelegateWIIII
        public DebenuPDFLibraryDAExtractPageTextBlocks As DelegateIIIII
        public DebenuPDFLibraryDAFindPage As DelegateIIII
        public DebenuPDFLibraryDAGetAnnotationCount As DelegateIIII
        public DebenuPDFLibraryDAGetFormFieldCount As DelegateIII
        public DebenuPDFLibraryDAGetFormFieldTitle As DelegateWIII
        public DebenuPDFLibraryDAGetFormFieldValue As DelegateWIII
        public DebenuPDFLibraryDAGetImageDataToString As DelegateBIIII
        public DebenuPDFLibraryDAGetImageDblProperty As DelegateDIIIII
        public DebenuPDFLibraryDAGetImageIntProperty As DelegateIIIIII
        public DebenuPDFLibraryDAGetImageListCount As DelegateIIII
        public DebenuPDFLibraryDAGetInformation As DelegateWIIW
        public DebenuPDFLibraryDAGetObjectCount As DelegateIII
        public DebenuPDFLibraryDAGetObjectToString As DelegateBIII
        public DebenuPDFLibraryDAGetPageBox As DelegateDIIIII
        public DebenuPDFLibraryDAGetPageContentToString As DelegateBIII
        public DebenuPDFLibraryDAGetPageCount As DelegateIII
        public DebenuPDFLibraryDAGetPageHeight As DelegateDIII
        public DebenuPDFLibraryDAGetPageImageList As DelegateIIII
        public DebenuPDFLibraryDAGetPageWidth As DelegateDIII
        public DebenuPDFLibraryDAGetTextBlockBound As DelegateDIIII
        public DebenuPDFLibraryDAGetTextBlockCharWidth As DelegateDIIII
        public DebenuPDFLibraryDAGetTextBlockColor As DelegateDIIII
        public DebenuPDFLibraryDAGetTextBlockColorType As DelegateIIII
        public DebenuPDFLibraryDAGetTextBlockCount As DelegateIII
        public DebenuPDFLibraryDAGetTextBlockFontName As DelegateWIII
        public DebenuPDFLibraryDAGetTextBlockFontSize As DelegateDIII
        public DebenuPDFLibraryDAGetTextBlockText As DelegateWIII
        public DebenuPDFLibraryDAHasPageBox As DelegateIIIII
        public DebenuPDFLibraryDAHidePage As DelegateIIII
        public DebenuPDFLibraryDAMovePage As DelegateIIIIII
        public DebenuPDFLibraryDANewPage As DelegateIII
        public DebenuPDFLibraryDANewPages As DelegateIIII
        public DebenuPDFLibraryDAOpenFile As DelegateIIWW
        public DebenuPDFLibraryDAOpenFileReadOnly As DelegateIIWW
        public DebenuPDFLibraryDAPageRotation As DelegateIIII
        public DebenuPDFLibraryDAReleaseImageList As DelegateIIII
        public DebenuPDFLibraryDAReleaseTextBlocks As DelegateIII
        public DebenuPDFLibraryDARemoveUsageRights As DelegateIII
        public DebenuPDFLibraryDARenderPageToDC As DelegateIIIIDC
        public DebenuPDFLibraryDARenderPageToFile As DelegateIIIIIDW
        public DebenuPDFLibraryDARenderPageToString As DelegateBIIIID
        public DebenuPDFLibraryDARotatePage As DelegateIIIIII
        public DebenuPDFLibraryDASaveAsFile As DelegateIIIW
        public DebenuPDFLibraryDASaveImageDataToFile As DelegateIIIIIW
        public DebenuPDFLibraryDASetInformation As DelegateIIIWW
        public DebenuPDFLibraryDASetPageBox As DelegateIIIIIDDDD
        public DebenuPDFLibraryDASetPageSize As DelegateIIIIDD
        public DebenuPDFLibraryDASetTextExtractionArea As DelegateIIDDDD
        public DebenuPDFLibraryDASetTextExtractionOptions As DelegateIIII
        public DebenuPDFLibraryDASetTextExtractionScaling As DelegateIIIDD
        public DebenuPDFLibraryDASetTextExtractionWordGap As DelegateIID
        public DebenuPDFLibraryDAShiftedHeader As DelegateIII
        public DebenuPDFLibraryDecrypt As DelegateII
        public DebenuPDFLibraryDecryptFile As DelegateIIWWW
        public DebenuPDFLibraryDeleteAnalysis As DelegateIII
        public DebenuPDFLibraryDeleteAnnotation As DelegateIII
        public DebenuPDFLibraryDeleteContentStream As DelegateII
        public DebenuPDFLibraryDeleteFormField As DelegateIII
        public DebenuPDFLibraryDeleteOptionalContentGroup As DelegateIII
        public DebenuPDFLibraryDeletePageLGIDict As DelegateIII
        public DebenuPDFLibraryDeletePages As DelegateIIII
        public DebenuPDFLibraryDocJavaScriptAction As DelegateIIWW
        public DebenuPDFLibraryDocumentCount As DelegateII
        public DebenuPDFLibraryDrawArc As DelegateIIDDDDDII
        public DebenuPDFLibraryDrawBarcode As DelegateIIDDDDWII
        public DebenuPDFLibraryDrawBox As DelegateIIDDDDI
        public DebenuPDFLibraryDrawCapturedPage As DelegateIIIDDDD
        public DebenuPDFLibraryDrawCapturedPageMatrix As DelegateIIIDDDDDD
        public DebenuPDFLibraryDrawCircle As DelegateIIDDDI
        public DebenuPDFLibraryDrawDataMatrixSymbol As DelegateIIDDDWIII
        public DebenuPDFLibraryDrawEllipse As DelegateIIDDDDI
        public DebenuPDFLibraryDrawEllipticArc As DelegateIIDDDDDDII
        public DebenuPDFLibraryDrawHTMLText As DelegateIIDDDW
        public DebenuPDFLibraryDrawHTMLTextBox As DelegateWIDDDDW
        public DebenuPDFLibraryDrawHTMLTextBoxMatrix As DelegateWIDDWDDDDDD
        public DebenuPDFLibraryDrawHTMLTextMatrix As DelegateIIDWDDDDDD
        public DebenuPDFLibraryDrawImage As DelegateIIDDDD
        public DebenuPDFLibraryDrawImageMatrix As DelegateIIDDDDDD
        public DebenuPDFLibraryDrawIntelligentMailBarcode As DelegateIIDDDDDDWI
        public DebenuPDFLibraryDrawLine As DelegateIIDDDD
        public DebenuPDFLibraryDrawMultiLineText As DelegateIIDDWW
        public DebenuPDFLibraryDrawPDF417Symbol As DelegateIIDDWI
        public DebenuPDFLibraryDrawPDF417SymbolEx As DelegateIIDDWIIIIDD
        public DebenuPDFLibraryDrawPath As DelegateIII
        public DebenuPDFLibraryDrawPathEvenOdd As DelegateIII
        public DebenuPDFLibraryDrawPostScriptXObject As DelegateIII
        public DebenuPDFLibraryDrawQRCode As DelegateIIDDDWII
        public DebenuPDFLibraryDrawRotatedBox As DelegateIIDDDDDI
        public DebenuPDFLibraryDrawRotatedCapturedPage As DelegateIIIDDDDD
        public DebenuPDFLibraryDrawRotatedImage As DelegateIIDDDDD
        public DebenuPDFLibraryDrawRotatedMultiLineText As DelegateIIDDDWW
        public DebenuPDFLibraryDrawRotatedText As DelegateIIDDDW
        public DebenuPDFLibraryDrawRotatedTextBox As DelegateIIDDDDDWI
        public DebenuPDFLibraryDrawRotatedTextBoxEx As DelegateIIDDDDDWIIII
        public DebenuPDFLibraryDrawRoundedBox As DelegateIIDDDDDI
        public DebenuPDFLibraryDrawRoundedRotatedBox As DelegateIIDDDDDDI
        public DebenuPDFLibraryDrawScaledImage As DelegateIIDDD
        public DebenuPDFLibraryDrawSpacedText As DelegateIIDDDW
        public DebenuPDFLibraryDrawTableRows As DelegateDIIDDDII
        public DebenuPDFLibraryDrawText As DelegateIIDDW
        public DebenuPDFLibraryDrawTextArc As DelegateIIDDDDWI
        public DebenuPDFLibraryDrawTextBox As DelegateIIDDDDWI
        public DebenuPDFLibraryDrawTextBoxMatrix As DelegateIIDDWIDDDDDD
        public DebenuPDFLibraryDrawWrappedText As DelegateIIDDDW
        public DebenuPDFLibraryEditableContentStream As DelegateII
        public DebenuPDFLibraryEmbedFile As DelegateIIWWW
        public DebenuPDFLibraryEmbeddedFileCount As DelegateII
        public DebenuPDFLibraryEncapsulateContentStream As DelegateII
        public DebenuPDFLibraryEncodePermissions As DelegateIIIIIIIIII
        public DebenuPDFLibraryEncrypt As DelegateIIWWII
        public DebenuPDFLibraryEncryptFile As DelegateIIWWWWII
        public DebenuPDFLibraryEncryptWithFingerprint As DelegateIIW
        public DebenuPDFLibraryEncryptionAlgorithm As DelegateII
        public DebenuPDFLibraryEncryptionStatus As DelegateII
        public DebenuPDFLibraryEncryptionStrength As DelegateII
        public DebenuPDFLibraryEndPageUpdate As DelegateII
        public DebenuPDFLibraryEndSignProcessToFile As DelegateIIIW
        public DebenuPDFLibraryEndSignProcessToString As DelegateBII
        public DebenuPDFLibraryExtractFilePageContentToString As DelegateBIWWI
        public DebenuPDFLibraryExtractFilePageText As DelegateWIWWII
        public DebenuPDFLibraryExtractFilePageTextBlocks As DelegateIIWWII
        public DebenuPDFLibraryExtractFilePages As DelegateIIWWWW
        public DebenuPDFLibraryExtractFilePagesEx As DelegateIIWWWWI
        public DebenuPDFLibraryExtractPageRanges As DelegateIIW
        public DebenuPDFLibraryExtractPageTextBlocks As DelegateIII
        public DebenuPDFLibraryExtractPages As DelegateIIII
        public DebenuPDFLibraryFileListCount As DelegateIIW
        public DebenuPDFLibraryFileListItem As DelegateWIWI
        public DebenuPDFLibraryFindFonts As DelegateII
        public DebenuPDFLibraryFindFormFieldByTitle As DelegateIIW
        public DebenuPDFLibraryFindImages As DelegateII
        public DebenuPDFLibraryFitImage As DelegateIIDDDDIII
        public DebenuPDFLibraryFitRotatedTextBox As DelegateIIDDDDDWI
        public DebenuPDFLibraryFitTextBox As DelegateIIDDDDWI
        public DebenuPDFLibraryFlattenAnnot As DelegateIIII
        public DebenuPDFLibraryFlattenFormField As DelegateIII
        public DebenuPDFLibraryFontCount As DelegateII
        public DebenuPDFLibraryFontFamily As DelegateWI
        public DebenuPDFLibraryFontHasKerning As DelegateII
        public DebenuPDFLibraryFontName As DelegateWI
        public DebenuPDFLibraryFontReference As DelegateWI
        public DebenuPDFLibraryFontSize As DelegateII
        public DebenuPDFLibraryFontType As DelegateII
        public DebenuPDFLibraryFormFieldCount As DelegateII
        public DebenuPDFLibraryFormFieldHasParent As DelegateIII
        public DebenuPDFLibraryFormFieldJavaScriptAction As DelegateIIIWW
        public DebenuPDFLibraryFormFieldWebLinkAction As DelegateIIIWW
        public DebenuPDFLibraryGetActionDest As DelegateIII
        public DebenuPDFLibraryGetActionType As DelegateWII
        public DebenuPDFLibraryGetActionURL As DelegateWII
        public DebenuPDFLibraryGetAnalysisInfo As DelegateWIII
        public DebenuPDFLibraryGetAnnotActionID As DelegateIII
        public DebenuPDFLibraryGetAnnotDblProperty As DelegateDIII
        public DebenuPDFLibraryGetAnnotDest As DelegateIII
        public DebenuPDFLibraryGetAnnotEmbeddedFileName As DelegateWIII
        public DebenuPDFLibraryGetAnnotEmbeddedFileToFile As DelegateIIIIW
        public DebenuPDFLibraryGetAnnotEmbeddedFileToString As DelegateBIII
        public DebenuPDFLibraryGetAnnotIntProperty As DelegateIIII
        public DebenuPDFLibraryGetAnnotQuadCount As DelegateIII
        public DebenuPDFLibraryGetAnnotQuadPoints As DelegateDIIII
        public DebenuPDFLibraryGetAnnotSoundToFile As DelegateIIIIW
        public DebenuPDFLibraryGetAnnotSoundToString As DelegateBIII
        public DebenuPDFLibraryGetAnnotStrProperty As DelegateWIII
        public DebenuPDFLibraryGetBarcodeWidth As DelegateDIDWI
        public DebenuPDFLibraryGetBaseURL As DelegateWI
        public DebenuPDFLibraryGetCSDictEPSG As DelegateIII
        public DebenuPDFLibraryGetCSDictType As DelegateIII
        public DebenuPDFLibraryGetCSDictWKT As DelegateWII
        public DebenuPDFLibraryGetCanvasDC As DelegateCIII
        public DebenuPDFLibraryGetCatalogInformation As DelegateWIW
        public DebenuPDFLibraryGetContentStreamToString As DelegateBI
        public DebenuPDFLibraryGetCustomInformation As DelegateWIW
        public DebenuPDFLibraryGetCustomKeys As DelegateWII
        public DebenuPDFLibraryGetDefaultPrinterName As DelegateWI
        public DebenuPDFLibraryGetDestName As DelegateWII
        public DebenuPDFLibraryGetDestPage As DelegateIII
        public DebenuPDFLibraryGetDestType As DelegateIII
        public DebenuPDFLibraryGetDestValue As DelegateDIII
        public DebenuPDFLibraryGetDocJavaScript As DelegateWIW
        public DebenuPDFLibraryGetDocumentFileName As DelegateWI
        public DebenuPDFLibraryGetDocumentFileSize As DelegateII
        public DebenuPDFLibraryGetDocumentID As DelegateIII
        public DebenuPDFLibraryGetDocumentIdentifier As DelegateWIII
        public DebenuPDFLibraryGetDocumentMetadata As DelegateWI
        public DebenuPDFLibraryGetDocumentRepaired As DelegateII
        public DebenuPDFLibraryGetDocumentResourceList As DelegateWI
        public DebenuPDFLibraryGetEmbeddedFileContentToFile As DelegateIIIW
        public DebenuPDFLibraryGetEmbeddedFileContentToString As DelegateBII
        public DebenuPDFLibraryGetEmbeddedFileID As DelegateIII
        public DebenuPDFLibraryGetEmbeddedFileIntProperty As DelegateIIII
        public DebenuPDFLibraryGetEmbeddedFileStrProperty As DelegateWIII
        public DebenuPDFLibraryGetEncryptionFingerprint As DelegateWI
        public DebenuPDFLibraryGetFileMetadata As DelegateWIWW
        public DebenuPDFLibraryGetFirstChildOutline As DelegateIII
        public DebenuPDFLibraryGetFirstOutline As DelegateII
        public DebenuPDFLibraryGetFontEncoding As DelegateII
        public DebenuPDFLibraryGetFontFlags As DelegateIII
        public DebenuPDFLibraryGetFontID As DelegateIII
        public DebenuPDFLibraryGetFontIsEmbedded As DelegateII
        public DebenuPDFLibraryGetFontIsSubsetted As DelegateII
        public DebenuPDFLibraryGetFontMetrics As DelegateIII
        public DebenuPDFLibraryGetFontObjectNumber As DelegateII
        public DebenuPDFLibraryGetFormFieldActionID As DelegateIIIW
        public DebenuPDFLibraryGetFormFieldAlignment As DelegateIII
        public DebenuPDFLibraryGetFormFieldAnnotFlags As DelegateIII
        public DebenuPDFLibraryGetFormFieldBackgroundColor As DelegateDIII
        public DebenuPDFLibraryGetFormFieldBackgroundColorType As DelegateIII
        public DebenuPDFLibraryGetFormFieldBorderColor As DelegateDIII
        public DebenuPDFLibraryGetFormFieldBorderColorType As DelegateIII
        public DebenuPDFLibraryGetFormFieldBorderProperty As DelegateDIII
        public DebenuPDFLibraryGetFormFieldBorderStyle As DelegateIII
        public DebenuPDFLibraryGetFormFieldBound As DelegateDIII
        public DebenuPDFLibraryGetFormFieldCaption As DelegateWII
        public DebenuPDFLibraryGetFormFieldCheckStyle As DelegateIII
        public DebenuPDFLibraryGetFormFieldChildTitle As DelegateWII
        public DebenuPDFLibraryGetFormFieldChoiceType As DelegateIII
        public DebenuPDFLibraryGetFormFieldColor As DelegateDIII
        public DebenuPDFLibraryGetFormFieldComb As DelegateIII
        public DebenuPDFLibraryGetFormFieldDefaultValue As DelegateWII
        public DebenuPDFLibraryGetFormFieldDescription As DelegateWII
        public DebenuPDFLibraryGetFormFieldFlags As DelegateIII
        public DebenuPDFLibraryGetFormFieldFontName As DelegateWII
        public DebenuPDFLibraryGetFormFieldJavaScript As DelegateWIIW
        public DebenuPDFLibraryGetFormFieldKidCount As DelegateIII
        public DebenuPDFLibraryGetFormFieldKidTempIndex As DelegateIIII
        public DebenuPDFLibraryGetFormFieldMaxLen As DelegateIII
        public DebenuPDFLibraryGetFormFieldNoExport As DelegateIII
        public DebenuPDFLibraryGetFormFieldPage As DelegateIII
        public DebenuPDFLibraryGetFormFieldPrintable As DelegateIII
        public DebenuPDFLibraryGetFormFieldReadOnly As DelegateIII
        public DebenuPDFLibraryGetFormFieldRequired As DelegateIII
        public DebenuPDFLibraryGetFormFieldRichTextString As DelegateWIIW
        public DebenuPDFLibraryGetFormFieldRotation As DelegateIII
        public DebenuPDFLibraryGetFormFieldSubCount As DelegateIII
        public DebenuPDFLibraryGetFormFieldSubDisplayName As DelegateWIII
        public DebenuPDFLibraryGetFormFieldSubName As DelegateWIII
        public DebenuPDFLibraryGetFormFieldSubmitActionString As DelegateWIIW
        public DebenuPDFLibraryGetFormFieldTabOrder As DelegateIII
        public DebenuPDFLibraryGetFormFieldTabOrderEx As DelegateIIII
        public DebenuPDFLibraryGetFormFieldTextFlags As DelegateIIII
        public DebenuPDFLibraryGetFormFieldTextSize As DelegateDII
        public DebenuPDFLibraryGetFormFieldTitle As DelegateWII
        public DebenuPDFLibraryGetFormFieldType As DelegateIII
        public DebenuPDFLibraryGetFormFieldValue As DelegateWII
        public DebenuPDFLibraryGetFormFieldValueByTitle As DelegateWIW
        public DebenuPDFLibraryGetFormFieldVisible As DelegateIII
        public DebenuPDFLibraryGetFormFieldWebLink As DelegateWIIW
        public DebenuPDFLibraryGetFormFontCount As DelegateII
        public DebenuPDFLibraryGetFormFontName As DelegateWII
        public DebenuPDFLibraryGetGlobalJavaScript As DelegateWIW
        public DebenuPDFLibraryGetHTMLTextHeight As DelegateDIDW
        public DebenuPDFLibraryGetHTMLTextLineCount As DelegateIIDW
        public DebenuPDFLibraryGetHTMLTextWidth As DelegateDIDW
        public DebenuPDFLibraryGetImageID As DelegateIII
        public DebenuPDFLibraryGetImageListCount As DelegateIII
        public DebenuPDFLibraryGetImageListItemDataToString As DelegateBIIII
        public DebenuPDFLibraryGetImageListItemDblProperty As DelegateDIIII
        public DebenuPDFLibraryGetImageListItemIntProperty As DelegateIIIII
        public DebenuPDFLibraryGetImageMeasureDict As DelegateII
        public DebenuPDFLibraryGetImagePageCount As DelegateIIW
        public DebenuPDFLibraryGetImagePageCountFromString As DelegateIIB
        public DebenuPDFLibraryGetImagePtDataDict As DelegateII
        public DebenuPDFLibraryGetInformation As DelegateWII
        public DebenuPDFLibraryGetInstalledFontsByCharset As DelegateWIII
        public DebenuPDFLibraryGetInstalledFontsByCodePage As DelegateWIII
        public DebenuPDFLibraryGetKerning As DelegateIIW
        public DebenuPDFLibraryGetLatestPrinterNames As DelegateWI
        public DebenuPDFLibraryGetMaxObjectNumber As DelegateII
        public DebenuPDFLibraryGetMeasureDictBoundsCount As DelegateIII
        public DebenuPDFLibraryGetMeasureDictBoundsItem As DelegateDIII
        public DebenuPDFLibraryGetMeasureDictCoordinateSystem As DelegateIII
        public DebenuPDFLibraryGetMeasureDictDCSDict As DelegateIII
        public DebenuPDFLibraryGetMeasureDictGCSDict As DelegateIII
        public DebenuPDFLibraryGetMeasureDictGPTSCount As DelegateIII
        public DebenuPDFLibraryGetMeasureDictGPTSItem As DelegateDIII
        public DebenuPDFLibraryGetMeasureDictLPTSCount As DelegateIII
        public DebenuPDFLibraryGetMeasureDictLPTSItem As DelegateDIII
        public DebenuPDFLibraryGetMeasureDictPDU As DelegateIIII
        public DebenuPDFLibraryGetNamedDestination As DelegateIIW
        public DebenuPDFLibraryGetNextOutline As DelegateIII
        public DebenuPDFLibraryGetObjectCount As DelegateII
        public DebenuPDFLibraryGetObjectDecodeError As DelegateIII
        public DebenuPDFLibraryGetObjectToString As DelegateBII
        public DebenuPDFLibraryGetOpenActionDestination As DelegateII
        public DebenuPDFLibraryGetOpenActionJavaScript As DelegateWI
        public DebenuPDFLibraryGetOptionalContentConfigCount As DelegateII
        public DebenuPDFLibraryGetOptionalContentConfigLocked As DelegateIIII
        public DebenuPDFLibraryGetOptionalContentConfigOrderCount As DelegateIII
        public DebenuPDFLibraryGetOptionalContentConfigOrderItemID As DelegateIIII
        public DebenuPDFLibraryGetOptionalContentConfigOrderItemLabel As DelegateWIII
        public DebenuPDFLibraryGetOptionalContentConfigOrderItemLevel As DelegateIIII
        public DebenuPDFLibraryGetOptionalContentConfigOrderItemType As DelegateIIII
        public DebenuPDFLibraryGetOptionalContentConfigState As DelegateIIII
        public DebenuPDFLibraryGetOptionalContentGroupID As DelegateIII
        public DebenuPDFLibraryGetOptionalContentGroupName As DelegateWII
        public DebenuPDFLibraryGetOptionalContentGroupPrintable As DelegateIII
        public DebenuPDFLibraryGetOptionalContentGroupVisible As DelegateIII
        public DebenuPDFLibraryGetOrigin As DelegateII
        public DebenuPDFLibraryGetOutlineActionID As DelegateIII
        public DebenuPDFLibraryGetOutlineColor As DelegateDIII
        public DebenuPDFLibraryGetOutlineDest As DelegateIII
        public DebenuPDFLibraryGetOutlineID As DelegateIII
        public DebenuPDFLibraryGetOutlineJavaScript As DelegateWII
        public DebenuPDFLibraryGetOutlineObjectNumber As DelegateIII
        public DebenuPDFLibraryGetOutlineOpenFile As DelegateWII
        public DebenuPDFLibraryGetOutlinePage As DelegateIII
        public DebenuPDFLibraryGetOutlineStyle As DelegateIII
        public DebenuPDFLibraryGetOutlineWebLink As DelegateWII
        public DebenuPDFLibraryGetPageBox As DelegateDIII
        public DebenuPDFLibraryGetPageColorSpaces As DelegateWII
        public DebenuPDFLibraryGetPageContentToString As DelegateBI
        public DebenuPDFLibraryGetPageImageList As DelegateIII
        public DebenuPDFLibraryGetPageJavaScript As DelegateWIW
        public DebenuPDFLibraryGetPageLGIDictContent As DelegateWII
        public DebenuPDFLibraryGetPageLGIDictCount As DelegateII
        public DebenuPDFLibraryGetPageLabel As DelegateWII
        public DebenuPDFLibraryGetPageLayout As DelegateII
        public DebenuPDFLibraryGetPageMetricsToString As DelegateBIIII
        public DebenuPDFLibraryGetPageMode As DelegateII
        public DebenuPDFLibraryGetPageText As DelegateWII
        public DebenuPDFLibraryGetPageViewPortCount As DelegateII
        public DebenuPDFLibraryGetPageViewPortID As DelegateIII
        public DebenuPDFLibraryGetParentOutline As DelegateIII
        public DebenuPDFLibraryGetPrevOutline As DelegateIII
        public DebenuPDFLibraryGetPrintPreviewBitmapToString As DelegateBIWIIII
        public DebenuPDFLibraryGetPrinterBins As DelegateWIW
        public DebenuPDFLibraryGetPrinterDevModeToString As DelegateBIW
        public DebenuPDFLibraryGetPrinterMediaTypes As DelegateWIW
        public DebenuPDFLibraryGetPrinterNames As DelegateWI
        public DebenuPDFLibraryGetRenderScale As DelegateDI
        public DebenuPDFLibraryGetSignProcessByteRange As DelegateIIII
        public DebenuPDFLibraryGetSignProcessResult As DelegateIII
        public DebenuPDFLibraryGetStringListCount As DelegateIII
        public DebenuPDFLibraryGetStringListItem As DelegateWIII
        public DebenuPDFLibraryGetTabOrderMode As DelegateWI
        public DebenuPDFLibraryGetTableCellDblProperty As DelegateDIIIII
        public DebenuPDFLibraryGetTableCellIntProperty As DelegateIIIIII
        public DebenuPDFLibraryGetTableCellStrProperty As DelegateWIIIII
        public DebenuPDFLibraryGetTableColumnCount As DelegateIII
        public DebenuPDFLibraryGetTableLastDrawnRow As DelegateIII
        public DebenuPDFLibraryGetTableRowCount As DelegateIII
        public DebenuPDFLibraryGetTempPath As DelegateWI
        public DebenuPDFLibraryGetTextAscent As DelegateDI
        public DebenuPDFLibraryGetTextBlockBound As DelegateDIIII
        public DebenuPDFLibraryGetTextBlockCharWidth As DelegateDIIII
        public DebenuPDFLibraryGetTextBlockColor As DelegateDIIII
        public DebenuPDFLibraryGetTextBlockColorType As DelegateIIII
        public DebenuPDFLibraryGetTextBlockCount As DelegateIII
        public DebenuPDFLibraryGetTextBlockFontName As DelegateWIII
        public DebenuPDFLibraryGetTextBlockFontSize As DelegateDIII
        public DebenuPDFLibraryGetTextBlockText As DelegateWIII
        public DebenuPDFLibraryGetTextBound As DelegateDII
        public DebenuPDFLibraryGetTextDescent As DelegateDI
        public DebenuPDFLibraryGetTextHeight As DelegateDI
        public DebenuPDFLibraryGetTextSize As DelegateDI
        public DebenuPDFLibraryGetTextWidth As DelegateDIW
        public DebenuPDFLibraryGetUnicodeCharactersFromEncoding As DelegateWII
        public DebenuPDFLibraryGetViewPortBBox As DelegateDIII
        public DebenuPDFLibraryGetViewPortMeasureDict As DelegateIII
        public DebenuPDFLibraryGetViewPortName As DelegateWII
        public DebenuPDFLibraryGetViewPortPtDataDict As DelegateIII
        public DebenuPDFLibraryGetViewerPreferences As DelegateIII
        public DebenuPDFLibraryGetWrappedText As DelegateWIDWW
        public DebenuPDFLibraryGetWrappedTextBreakString As DelegateWIDWW
        public DebenuPDFLibraryGetWrappedTextHeight As DelegateDIDW
        public DebenuPDFLibraryGetWrappedTextLineCount As DelegateIIDW
        public DebenuPDFLibraryGetXFAFormFieldCount As DelegateII
        public DebenuPDFLibraryGetXFAFormFieldName As DelegateWII
        public DebenuPDFLibraryGetXFAFormFieldNames As DelegateWIW
        public DebenuPDFLibraryGetXFAFormFieldValue As DelegateWIW
        public DebenuPDFLibraryGetXFAToString As DelegateBII
        public DebenuPDFLibraryGlobalJavaScriptCount As DelegateII
        public DebenuPDFLibraryGlobalJavaScriptPackageName As DelegateWII
        public DebenuPDFLibraryHasFontResources As DelegateII
        public DebenuPDFLibraryHasPageBox As DelegateIII
        public DebenuPDFLibraryHidePage As DelegateII
        public DebenuPDFLibraryImageCount As DelegateII
        public DebenuPDFLibraryImageFillColor As DelegateII
        public DebenuPDFLibraryImageHeight As DelegateII
        public DebenuPDFLibraryImageHorizontalResolution As DelegateII
        public DebenuPDFLibraryImageResolutionUnits As DelegateII
        public DebenuPDFLibraryImageType As DelegateII
        public DebenuPDFLibraryImageVerticalResolution As DelegateII
        public DebenuPDFLibraryImageWidth As DelegateII
        public DebenuPDFLibraryImportEMFFromFile As DelegateIIWII
        public DebenuPDFLibraryInsertPages As DelegateIIII
        public DebenuPDFLibraryInsertTableColumns As DelegateIIIII
        public DebenuPDFLibraryInsertTableRows As DelegateIIIII
        public DebenuPDFLibraryIsAnnotFormField As DelegateIII
        public DebenuPDFLibraryIsTaggedPDF As DelegateII
        public DebenuPDFLibraryLastErrorCode As DelegateII
        public DebenuPDFLibraryLastRenderError As DelegateWI
        public DebenuPDFLibraryLibraryVersion As DelegateWI
        public DebenuPDFLibraryLicenseInfo As DelegateWI
        public DebenuPDFLibraryLinearized As DelegateII
        public DebenuPDFLibraryLoadFromCanvasDC As DelegateIIDI
        public DebenuPDFLibraryLoadFromFile As DelegateIIWW
        public DebenuPDFLibraryLoadFromString As DelegateIIBW
        public DebenuPDFLibraryLoadState As DelegateII
        public DebenuPDFLibraryMergeDocument As DelegateIII
        public DebenuPDFLibraryMergeFileList As DelegateIIWW
        public DebenuPDFLibraryMergeFileListFast As DelegateIIWW
        public DebenuPDFLibraryMergeFiles As DelegateIIWWW
        public DebenuPDFLibraryMergeTableCells As DelegateIIIIIII
        public DebenuPDFLibraryMoveContentStream As DelegateIIII
        public DebenuPDFLibraryMoveOutlineAfter As DelegateIIII
        public DebenuPDFLibraryMoveOutlineBefore As DelegateIIII
        public DebenuPDFLibraryMovePage As DelegateIII
        public DebenuPDFLibraryMovePath As DelegateIIDD
        public DebenuPDFLibraryMultiplyScale As DelegateIID
        public DebenuPDFLibraryNewChildFormField As DelegateIIIWI
        public DebenuPDFLibraryNewContentStream As DelegateII
        public DebenuPDFLibraryNewCustomPrinter As DelegateWIW
        public DebenuPDFLibraryNewDestination As DelegateIIIIIDDDD
        public DebenuPDFLibraryNewDocument As DelegateII
        public DebenuPDFLibraryNewFormField As DelegateIIWI
        public DebenuPDFLibraryNewInternalPrinterObject As DelegateIII
        public DebenuPDFLibraryNewNamedDestination As DelegateIIWI
        public DebenuPDFLibraryNewOptionalContentGroup As DelegateIIW
        public DebenuPDFLibraryNewOutline As DelegateIIIWID
        public DebenuPDFLibraryNewPage As DelegateII
        public DebenuPDFLibraryNewPageFromCanvasDC As DelegateIIDI
        public DebenuPDFLibraryNewPages As DelegateIII
        public DebenuPDFLibraryNewPostScriptXObject As DelegateIIW
        public DebenuPDFLibraryNewRGBAxialShader As DelegateIIWDDDDDDDDDDI
        public DebenuPDFLibraryNewSignProcessFromFile As DelegateIIWW
        public DebenuPDFLibraryNewSignProcessFromString As DelegateIIBW
        public DebenuPDFLibraryNewStaticOutline As DelegateIIIW
        public DebenuPDFLibraryNewTilingPatternFromCapturedPage As DelegateIIWI
        public DebenuPDFLibraryNoEmbedFontListAdd As DelegateIIW
        public DebenuPDFLibraryNoEmbedFontListCount As DelegateII
        public DebenuPDFLibraryNoEmbedFontListGet As DelegateWII
        public DebenuPDFLibraryNoEmbedFontListRemoveAll As DelegateII
        public DebenuPDFLibraryNoEmbedFontListRemoveIndex As DelegateIII
        public DebenuPDFLibraryNoEmbedFontListRemoveName As DelegateIIW
        public DebenuPDFLibraryNormalizePage As DelegateIII
        public DebenuPDFLibraryOpenOutline As DelegateIII
        public DebenuPDFLibraryOptionalContentGroupCount As DelegateII
        public DebenuPDFLibraryOutlineCount As DelegateII
        public DebenuPDFLibraryOutlineTitle As DelegateWII
        public DebenuPDFLibraryPageCount As DelegateII
        public DebenuPDFLibraryPageHasFontResources As DelegateIII
        public DebenuPDFLibraryPageHeight As DelegateDI
        public DebenuPDFLibraryPageJavaScriptAction As DelegateIIWW
        public DebenuPDFLibraryPageRotation As DelegateII
        public DebenuPDFLibraryPageWidth As DelegateDI
        public DebenuPDFLibraryPrintDocument As DelegateIIWIII
        public DebenuPDFLibraryPrintDocumentToFile As DelegateIIWIIIW
        public DebenuPDFLibraryPrintOptions As DelegateIIIIW
        public DebenuPDFLibraryPrintPages As DelegateIIWWI
        public DebenuPDFLibraryPrintPagesToFile As DelegateIIWWIW
        public DebenuPDFLibraryReleaseBuffer As DelegateIIB
        public DebenuPDFLibraryReleaseImage As DelegateIII
        public DebenuPDFLibraryReleaseImageList As DelegateIII
        public DebenuPDFLibraryReleaseLibrary As DelegateII
        public DebenuPDFLibraryReleaseSignProcess As DelegateIII
        public DebenuPDFLibraryReleaseStringList As DelegateIII
        public DebenuPDFLibraryReleaseTextBlocks As DelegateIII
        public DebenuPDFLibraryRemoveAppearanceStream As DelegateIII
        public DebenuPDFLibraryRemoveCustomInformation As DelegateIIW
        public DebenuPDFLibraryRemoveDocument As DelegateIII
        public DebenuPDFLibraryRemoveEmbeddedFile As DelegateIII
        public DebenuPDFLibraryRemoveFormFieldBackgroundColor As DelegateIII
        public DebenuPDFLibraryRemoveFormFieldBorderColor As DelegateIII
        public DebenuPDFLibraryRemoveFormFieldChoiceSub As DelegateIIIW
        public DebenuPDFLibraryRemoveGlobalJavaScript As DelegateIIW
        public DebenuPDFLibraryRemoveOpenAction As DelegateII
        public DebenuPDFLibraryRemoveOutline As DelegateIII
        public DebenuPDFLibraryRemovePageBox As DelegateIII
        public DebenuPDFLibraryRemoveSharedContentStreams As DelegateII
        public DebenuPDFLibraryRemoveStyle As DelegateIIW
        public DebenuPDFLibraryRemoveUsageRights As DelegateII
        public DebenuPDFLibraryRemoveXFAEntries As DelegateIII
        public DebenuPDFLibraryRenderAsMultipageTIFFToFile As DelegateIIDWIIW
        public DebenuPDFLibraryRenderDocumentToFile As DelegateIIDIIIW
        public DebenuPDFLibraryRenderPageToDC As DelegateIIDIC
        public DebenuPDFLibraryRenderPageToFile As DelegateIIDIIW
        public DebenuPDFLibraryRenderPageToString As DelegateBIDII
        public DebenuPDFLibraryReplaceFonts As DelegateII
        public DebenuPDFLibraryReplaceImage As DelegateIIII
        public DebenuPDFLibraryReplaceTag As DelegateIIWW
        public DebenuPDFLibraryRequestPrinterStatus As DelegateIII
        public DebenuPDFLibraryRetrieveCustomDataToFile As DelegateIIWWI
        public DebenuPDFLibraryRetrieveCustomDataToString As DelegateBISI
        public DebenuPDFLibraryReverseImage As DelegateIII
        public DebenuPDFLibraryRotatePage As DelegateIII
        public DebenuPDFLibrarySaveFontToFile As DelegateIIW
        public DebenuPDFLibrarySaveImageListItemDataToFile As DelegateIIIIIW
        public DebenuPDFLibrarySaveImageToFile As DelegateIIW
        public DebenuPDFLibrarySaveImageToString As DelegateBI
        public DebenuPDFLibrarySaveState As DelegateII
        public DebenuPDFLibrarySaveStyle As DelegateIIW
        public DebenuPDFLibrarySaveToFile As DelegateIIW
        public DebenuPDFLibrarySaveToString As DelegateBI
        public DebenuPDFLibrarySecurityInfo As DelegateIII
        public DebenuPDFLibrarySelectContentStream As DelegateIII
        public DebenuPDFLibrarySelectDocument As DelegateIII
        public DebenuPDFLibrarySelectFont As DelegateIII
        public DebenuPDFLibrarySelectImage As DelegateIII
        public DebenuPDFLibrarySelectPage As DelegateIII
        public DebenuPDFLibrarySelectRenderer As DelegateIII
        public DebenuPDFLibrarySelectedDocument As DelegateII
        public DebenuPDFLibrarySelectedFont As DelegateII
        public DebenuPDFLibrarySelectedImage As DelegateII
        public DebenuPDFLibrarySelectedPage As DelegateII
        public DebenuPDFLibrarySetActionURL As DelegateIIIW
        public DebenuPDFLibrarySetAnnotBorderColor As DelegateIIIDDD
        public DebenuPDFLibrarySetAnnotBorderStyle As DelegateIIIDIDD
        public DebenuPDFLibrarySetAnnotContents As DelegateIIIW
        public DebenuPDFLibrarySetAnnotDblProperty As DelegateIIIID
        public DebenuPDFLibrarySetAnnotIntProperty As DelegateIIIII
        public DebenuPDFLibrarySetAnnotQuadPoints As DelegateIIIIDDDDDDDD
        public DebenuPDFLibrarySetAnnotRect As DelegateIIIDDDD
        public DebenuPDFLibrarySetAnnotStrProperty As DelegateIIIIW
        public DebenuPDFLibrarySetAnsiMode As DelegateIII
        public DebenuPDFLibrarySetBaseURL As DelegateIIW
        public DebenuPDFLibrarySetBlendMode As DelegateIII
        public DebenuPDFLibrarySetBreakString As DelegateIIW
        public DebenuPDFLibrarySetCSDictEPSG As DelegateIIII
        public DebenuPDFLibrarySetCSDictType As DelegateIIII
        public DebenuPDFLibrarySetCSDictWKT As DelegateIIIW
        public DebenuPDFLibrarySetCairoFileName As DelegateIIW
        public DebenuPDFLibrarySetCapturedPageOptional As DelegateIIII
        public DebenuPDFLibrarySetCapturedPageTransparencyGroup As DelegateIIIIII
        public DebenuPDFLibrarySetCatalogInformation As DelegateIIWW
        public DebenuPDFLibrarySetCharWidth As DelegateIIII
        public DebenuPDFLibrarySetClippingPath As DelegateII
        public DebenuPDFLibrarySetClippingPathEvenOdd As DelegateII
        public DebenuPDFLibrarySetCompatibility As DelegateIIII
        public DebenuPDFLibrarySetContentStreamFromString As DelegateIIB
        public DebenuPDFLibrarySetContentStreamOptional As DelegateIII
        public DebenuPDFLibrarySetCropBox As DelegateIIDDDD
        public DebenuPDFLibrarySetCustomInformation As DelegateIIWW
        public DebenuPDFLibrarySetCustomLineDash As DelegateIIWD
        public DebenuPDFLibrarySetDPLRFileName As DelegateIIW
        public DebenuPDFLibrarySetDestProperties As DelegateIIIIIDDDD
        public DebenuPDFLibrarySetDestValue As DelegateIIIID
        public DebenuPDFLibrarySetDocumentMetadata As DelegateIIW
        public DebenuPDFLibrarySetEmbeddedFileStrProperty As DelegateIIIIW
        public DebenuPDFLibrarySetFillColor As DelegateIIDDD
        public DebenuPDFLibrarySetFillColorCMYK As DelegateIIDDDD
        public DebenuPDFLibrarySetFillColorSep As DelegateIIWD
        public DebenuPDFLibrarySetFillShader As DelegateIIW
        public DebenuPDFLibrarySetFillTilingPattern As DelegateIIW
        public DebenuPDFLibrarySetFindImagesMode As DelegateIII
        public DebenuPDFLibrarySetFontEncoding As DelegateIII
        public DebenuPDFLibrarySetFontFlags As DelegateIIIIIIIIII
        public DebenuPDFLibrarySetFormFieldAlignment As DelegateIIII
        public DebenuPDFLibrarySetFormFieldAnnotFlags As DelegateIIII
        public DebenuPDFLibrarySetFormFieldBackgroundColor As DelegateIIIDDD
        public DebenuPDFLibrarySetFormFieldBackgroundColorCMYK As DelegateIIIDDDD
        public DebenuPDFLibrarySetFormFieldBackgroundColorGray As DelegateIIID
        public DebenuPDFLibrarySetFormFieldBackgroundColorSep As DelegateIIIWD
        public DebenuPDFLibrarySetFormFieldBorderColor As DelegateIIIDDD
        public DebenuPDFLibrarySetFormFieldBorderColorCMYK As DelegateIIIDDDD
        public DebenuPDFLibrarySetFormFieldBorderColorGray As DelegateIIID
        public DebenuPDFLibrarySetFormFieldBorderColorSep As DelegateIIIWD
        public DebenuPDFLibrarySetFormFieldBorderStyle As DelegateIIIDIDD
        public DebenuPDFLibrarySetFormFieldBounds As DelegateIIIDDDD
        public DebenuPDFLibrarySetFormFieldCalcOrder As DelegateIIII
        public DebenuPDFLibrarySetFormFieldCaption As DelegateIIIW
        public DebenuPDFLibrarySetFormFieldCheckStyle As DelegateIIIII
        public DebenuPDFLibrarySetFormFieldChildTitle As DelegateIIIW
        public DebenuPDFLibrarySetFormFieldChoiceSub As DelegateIIIIWW
        public DebenuPDFLibrarySetFormFieldChoiceType As DelegateIIII
        public DebenuPDFLibrarySetFormFieldColor As DelegateIIIDDD
        public DebenuPDFLibrarySetFormFieldColorCMYK As DelegateIIIDDDD
        public DebenuPDFLibrarySetFormFieldColorSep As DelegateIIIWD
        public DebenuPDFLibrarySetFormFieldComb As DelegateIIII
        public DebenuPDFLibrarySetFormFieldDefaultValue As DelegateIIIW
        public DebenuPDFLibrarySetFormFieldDescription As DelegateIIIW
        public DebenuPDFLibrarySetFormFieldFlags As DelegateIIII
        public DebenuPDFLibrarySetFormFieldFont As DelegateIIII
        public DebenuPDFLibrarySetFormFieldHighlightMode As DelegateIIII
        public DebenuPDFLibrarySetFormFieldIcon As DelegateIIIII
        public DebenuPDFLibrarySetFormFieldIconStyle As DelegateIIIIIIII
        public DebenuPDFLibrarySetFormFieldMaxLen As DelegateIIII
        public DebenuPDFLibrarySetFormFieldNoExport As DelegateIIII
        public DebenuPDFLibrarySetFormFieldOptional As DelegateIIII
        public DebenuPDFLibrarySetFormFieldPage As DelegateIIII
        public DebenuPDFLibrarySetFormFieldPrintable As DelegateIIII
        public DebenuPDFLibrarySetFormFieldReadOnly As DelegateIIII
        public DebenuPDFLibrarySetFormFieldRequired As DelegateIIII
        public DebenuPDFLibrarySetFormFieldResetAction As DelegateIIIW
        public DebenuPDFLibrarySetFormFieldRichTextString As DelegateIIIWW
        public DebenuPDFLibrarySetFormFieldRotation As DelegateIIII
        public DebenuPDFLibrarySetFormFieldSignatureImage As DelegateIIIII
        public DebenuPDFLibrarySetFormFieldStandardFont As DelegateIIII
        public DebenuPDFLibrarySetFormFieldSubmitAction As DelegateIIIWW
        public DebenuPDFLibrarySetFormFieldSubmitActionEx As DelegateIIIWWI
        public DebenuPDFLibrarySetFormFieldTabOrder As DelegateIIII
        public DebenuPDFLibrarySetFormFieldTextFlags As DelegateIIIIIIII
        public DebenuPDFLibrarySetFormFieldTextSize As DelegateIIID
        public DebenuPDFLibrarySetFormFieldTitle As DelegateIIIW
        public DebenuPDFLibrarySetFormFieldValue As DelegateIIIW
        public DebenuPDFLibrarySetFormFieldValueByTitle As DelegateIIWW
        public DebenuPDFLibrarySetFormFieldVisible As DelegateIIII
        public DebenuPDFLibrarySetGDIPlusFileName As DelegateIIW
        public DebenuPDFLibrarySetGDIPlusOptions As DelegateIIII
        public DebenuPDFLibrarySetHTMLBoldFont As DelegateIIWI
        public DebenuPDFLibrarySetHTMLBoldItalicFont As DelegateIIWI
        public DebenuPDFLibrarySetHTMLItalicFont As DelegateIIWI
        public DebenuPDFLibrarySetHTMLNormalFont As DelegateIIWI
        public DebenuPDFLibrarySetHeaderCommentsFromString As DelegateIIB
        public DebenuPDFLibrarySetImageAsMask As DelegateIII
        public DebenuPDFLibrarySetImageMask As DelegateIIDDDDDD
        public DebenuPDFLibrarySetImageMaskCMYK As DelegateIIDDDDDDDD
        public DebenuPDFLibrarySetImageMaskFromImage As DelegateIII
        public DebenuPDFLibrarySetImageOptional As DelegateIII
        public DebenuPDFLibrarySetImageResolution As DelegateIIIII
        public DebenuPDFLibrarySetInformation As DelegateIIIW
        public DebenuPDFLibrarySetJPEGQuality As DelegateIII
        public DebenuPDFLibrarySetJavaScriptMode As DelegateIII
        public DebenuPDFLibrarySetKerning As DelegateIIWI
        public DebenuPDFLibrarySetLineCap As DelegateIII
        public DebenuPDFLibrarySetLineColor As DelegateIIDDD
        public DebenuPDFLibrarySetLineColorCMYK As DelegateIIDDDD
        public DebenuPDFLibrarySetLineColorSep As DelegateIIWD
        public DebenuPDFLibrarySetLineDash As DelegateIIDD
        public DebenuPDFLibrarySetLineDashEx As DelegateIIW
        public DebenuPDFLibrarySetLineJoin As DelegateIII
        public DebenuPDFLibrarySetLineShader As DelegateIIW
        public DebenuPDFLibrarySetLineWidth As DelegateIID
        public DebenuPDFLibrarySetMarkupAnnotStyle As DelegateIIIDDDD
        public DebenuPDFLibrarySetMeasureDictBoundsCount As DelegateIIII
        public DebenuPDFLibrarySetMeasureDictBoundsItem As DelegateIIIID
        public DebenuPDFLibrarySetMeasureDictCoordinateSystem As DelegateIIII
        public DebenuPDFLibrarySetMeasureDictGPTSCount As DelegateIIII
        public DebenuPDFLibrarySetMeasureDictGPTSItem As DelegateIIIID
        public DebenuPDFLibrarySetMeasureDictLPTSCount As DelegateIIII
        public DebenuPDFLibrarySetMeasureDictLPTSItem As DelegateIIIID
        public DebenuPDFLibrarySetMeasureDictPDU As DelegateIIIIII
        public DebenuPDFLibrarySetMeasurementUnits As DelegateIII
        public DebenuPDFLibrarySetNeedAppearances As DelegateIII
        public DebenuPDFLibrarySetObjectFromString As DelegateIIIB
        public DebenuPDFLibrarySetOpenActionDestination As DelegateIIII
        public DebenuPDFLibrarySetOpenActionDestinationFull As DelegateIIIIIDDDD
        public DebenuPDFLibrarySetOpenActionJavaScript As DelegateIIW
        public DebenuPDFLibrarySetOpenActionMenu As DelegateIIW
        public DebenuPDFLibrarySetOptionalContentConfigLocked As DelegateIIIII
        public DebenuPDFLibrarySetOptionalContentConfigState As DelegateIIIII
        public DebenuPDFLibrarySetOptionalContentGroupName As DelegateIIIW
        public DebenuPDFLibrarySetOptionalContentGroupPrintable As DelegateIIII
        public DebenuPDFLibrarySetOptionalContentGroupVisible As DelegateIIII
        public DebenuPDFLibrarySetOrigin As DelegateIII
        public DebenuPDFLibrarySetOutlineColor As DelegateIIIDDD
        public DebenuPDFLibrarySetOutlineDestination As DelegateIIIID
        public DebenuPDFLibrarySetOutlineDestinationFull As DelegateIIIIIIDDDD
        public DebenuPDFLibrarySetOutlineDestinationZoom As DelegateIIIIDI
        public DebenuPDFLibrarySetOutlineJavaScript As DelegateIIIW
        public DebenuPDFLibrarySetOutlineNamedDestination As DelegateIIIW
        public DebenuPDFLibrarySetOutlineOpenFile As DelegateIIIW
        public DebenuPDFLibrarySetOutlineRemoteDestination As DelegateIIIWIIIDDDDI
        public DebenuPDFLibrarySetOutlineStyle As DelegateIIIII
        public DebenuPDFLibrarySetOutlineTitle As DelegateIIIW
        public DebenuPDFLibrarySetOutlineWebLink As DelegateIIIW
        public DebenuPDFLibrarySetOverprint As DelegateIIIII
        public DebenuPDFLibrarySetPDFAMode As DelegateIII
        public DebenuPDFLibrarySetPNGTransparencyColor As DelegateIIIII
        public DebenuPDFLibrarySetPageActionMenu As DelegateIIW
        public DebenuPDFLibrarySetPageBox As DelegateIIIDDDD
        public DebenuPDFLibrarySetPageContentFromString As DelegateIIB
        public DebenuPDFLibrarySetPageDimensions As DelegateIIDD
        public DebenuPDFLibrarySetPageLayout As DelegateIII
        public DebenuPDFLibrarySetPageMode As DelegateIII
        public DebenuPDFLibrarySetPageSize As DelegateIIW
        public DebenuPDFLibrarySetPageThumbnail As DelegateII
        public DebenuPDFLibrarySetPageTransparencyGroup As DelegateIIIII
        public DebenuPDFLibrarySetPrecision As DelegateIII
        public DebenuPDFLibrarySetPrinterDevModeFromString As DelegateIIB
        public DebenuPDFLibrarySetRenderCropType As DelegateIII
        public DebenuPDFLibrarySetRenderDCErasePage As DelegateIII
        public DebenuPDFLibrarySetRenderDCOffset As DelegateIIII
        public DebenuPDFLibrarySetRenderOptions As DelegateIIII
        public DebenuPDFLibrarySetRenderScale As DelegateIID
        public DebenuPDFLibrarySetScale As DelegateIID
        public DebenuPDFLibrarySetSignProcessField As DelegateIIIW
        public DebenuPDFLibrarySetSignProcessFieldBounds As DelegateIIIDDDD
        public DebenuPDFLibrarySetSignProcessFieldImageFromFile As DelegateIIIWI
        public DebenuPDFLibrarySetSignProcessFieldPage As DelegateIIII
        public DebenuPDFLibrarySetSignProcessInfo As DelegateIIIWWW
        public DebenuPDFLibrarySetSignProcessKeyset As DelegateIIII
        public DebenuPDFLibrarySetSignProcessPFXFromFile As DelegateIIIWW
        public DebenuPDFLibrarySetSignProcessPassthrough As DelegateIIII
        public DebenuPDFLibrarySetSignProcessSubFilter As DelegateIIII
        public DebenuPDFLibrarySetTabOrderMode As DelegateIIW
        public DebenuPDFLibrarySetTableBorderColor As DelegateIIIIDDD
        public DebenuPDFLibrarySetTableBorderColorCMYK As DelegateIIIIDDDD
        public DebenuPDFLibrarySetTableBorderWidth As DelegateIIIID
        public DebenuPDFLibrarySetTableCellAlignment As DelegateIIIIIIII
        public DebenuPDFLibrarySetTableCellBackgroundColor As DelegateIIIIIIIDDD
        public DebenuPDFLibrarySetTableCellBackgroundColorCMYK As DelegateIIIIIIIDDDD
        public DebenuPDFLibrarySetTableCellBorderColor As DelegateIIIIIIIIDDD
        public DebenuPDFLibrarySetTableCellBorderColorCMYK As DelegateIIIIIIIIDDDD
        public DebenuPDFLibrarySetTableCellBorderWidth As DelegateIIIIIIIID
        public DebenuPDFLibrarySetTableCellContent As DelegateIIIIIW
        public DebenuPDFLibrarySetTableCellPadding As DelegateIIIIIIIID
        public DebenuPDFLibrarySetTableCellTextColor As DelegateIIIIIIIDDD
        public DebenuPDFLibrarySetTableCellTextColorCMYK As DelegateIIIIIIIDDDD
        public DebenuPDFLibrarySetTableCellTextSize As DelegateIIIIIIID
        public DebenuPDFLibrarySetTableColumnWidth As DelegateIIIIID
        public DebenuPDFLibrarySetTableRowHeight As DelegateIIIIID
        public DebenuPDFLibrarySetTableThinBorders As DelegateIIIIDDD
        public DebenuPDFLibrarySetTableThinBordersCMYK As DelegateIIIIDDDD
        public DebenuPDFLibrarySetTempFile As DelegateIIW
        public DebenuPDFLibrarySetTempPath As DelegateIIW
        public DebenuPDFLibrarySetTextAlign As DelegateIII
        public DebenuPDFLibrarySetTextCharSpacing As DelegateIID
        public DebenuPDFLibrarySetTextColor As DelegateIIDDD
        public DebenuPDFLibrarySetTextColorCMYK As DelegateIIDDDD
        public DebenuPDFLibrarySetTextColorSep As DelegateIIWD
        public DebenuPDFLibrarySetTextExtractionArea As DelegateIIDDDD
        public DebenuPDFLibrarySetTextExtractionOptions As DelegateIIII
        public DebenuPDFLibrarySetTextExtractionScaling As DelegateIIIDD
        public DebenuPDFLibrarySetTextExtractionWordGap As DelegateIID
        public DebenuPDFLibrarySetTextHighlight As DelegateIII
        public DebenuPDFLibrarySetTextHighlightColor As DelegateIIDDD
        public DebenuPDFLibrarySetTextHighlightColorCMYK As DelegateIIDDDD
        public DebenuPDFLibrarySetTextHighlightColorSep As DelegateIIWD
        public DebenuPDFLibrarySetTextMode As DelegateIII
        public DebenuPDFLibrarySetTextRise As DelegateIID
        public DebenuPDFLibrarySetTextScaling As DelegateIID
        public DebenuPDFLibrarySetTextShader As DelegateIIW
        public DebenuPDFLibrarySetTextSize As DelegateIID
        public DebenuPDFLibrarySetTextSpacing As DelegateIID
        public DebenuPDFLibrarySetTextUnderline As DelegateIII
        public DebenuPDFLibrarySetTextUnderlineColor As DelegateIIDDD
        public DebenuPDFLibrarySetTextUnderlineColorCMYK As DelegateIIDDDD
        public DebenuPDFLibrarySetTextUnderlineColorSep As DelegateIIWD
        public DebenuPDFLibrarySetTextUnderlineCustomDash As DelegateIIWD
        public DebenuPDFLibrarySetTextUnderlineDash As DelegateIIDD
        public DebenuPDFLibrarySetTextUnderlineDistance As DelegateIID
        public DebenuPDFLibrarySetTextUnderlineWidth As DelegateIID
        public DebenuPDFLibrarySetTextWordSpacing As DelegateIID
        public DebenuPDFLibrarySetTransparency As DelegateIII
        public DebenuPDFLibrarySetViewerPreferences As DelegateIIII
        public DebenuPDFLibrarySetXFAFormFieldAccess As DelegateIIWI
        public DebenuPDFLibrarySetXFAFormFieldBorderColor As DelegateIIWDDD
        public DebenuPDFLibrarySetXFAFormFieldBorderPresence As DelegateIIWI
        public DebenuPDFLibrarySetXFAFormFieldBorderWidth As DelegateIIWD
        public DebenuPDFLibrarySetXFAFormFieldValue As DelegateIIWW
        public DebenuPDFLibrarySetXFAFromString As DelegateIIBI
        public DebenuPDFLibrarySetupCustomPrinter As DelegateIIWII
        public DebenuPDFLibrarySignFile As DelegateIIWWWWWWWWW
        public DebenuPDFLibrarySplitPageText As DelegateIII
        public DebenuPDFLibraryStartPath As DelegateIIDD
        public DebenuPDFLibraryStoreCustomDataFromFile As DelegateIIWWII
        public DebenuPDFLibraryStoreCustomDataFromString As DelegateIISBII
        public DebenuPDFLibraryStringResultLength As DelegateII
        public DebenuPDFLibraryTestTempPath As DelegateII
        public DebenuPDFLibraryTransformFile As DelegateIIWWWII
        public DebenuPDFLibraryUnlockKey As DelegateIIW
        public DebenuPDFLibraryUnlocked As DelegateII
        public DebenuPDFLibraryUpdateAndFlattenFormField As DelegateIII
        public DebenuPDFLibraryUpdateAppearanceStream As DelegateIII
        public DebenuPDFLibraryUpdateTrueTypeSubsettedFont As DelegateIIW
        public DebenuPDFLibraryUseKerning As DelegateIII
        public DebenuPDFLibraryUseUnsafeContentStreams As DelegateIII

        Public Sub RegisterForShutdown(instanceID As Integer)
            shutDownList.Add(instanceID)
        End Sub

        Public Sub New(ByVal dllFileName As String)
            dllHandle = LoadLibrary(dllFileName)
            If Not (dllHandle = IntPtr.Zero) Then
                DebenuPDFLibraryAddArcToPath = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAddArcToPath"), GetType(DelegateIIDDD)), DelegateIIDDD)
                DebenuPDFLibraryAddBoxToPath = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAddBoxToPath"), GetType(DelegateIIDDDD)), DelegateIIDDDD)
                DebenuPDFLibraryAddCJKFont = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAddCJKFont"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryAddCurveToPath = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAddCurveToPath"), GetType(DelegateIIDDDDDD)), DelegateIIDDDDDD)
                DebenuPDFLibraryAddEmbeddedFile = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAddEmbeddedFile"), GetType(DelegateIIWW)), DelegateIIWW)
                DebenuPDFLibraryAddFileAttachment = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAddFileAttachment"), GetType(DelegateIIWI)), DelegateIIWI)
                DebenuPDFLibraryAddFormFieldChoiceSub = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAddFormFieldChoiceSub"), GetType(DelegateIIIWW)), DelegateIIIWW)
                DebenuPDFLibraryAddFormFieldSub = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAddFormFieldSub"), GetType(DelegateIIIW)), DelegateIIIW)
                DebenuPDFLibraryAddFormFont = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAddFormFont"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryAddFreeTextAnnotation = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAddFreeTextAnnotation"), GetType(DelegateIIDDDDWII)), DelegateIIDDDDWII)
                DebenuPDFLibraryAddGlobalJavaScript = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAddGlobalJavaScript"), GetType(DelegateIIWW)), DelegateIIWW)
                DebenuPDFLibraryAddImageFromFile = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAddImageFromFile"), GetType(DelegateIIWI)), DelegateIIWI)
                DebenuPDFLibraryAddImageFromFileOffset = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAddImageFromFileOffset"), GetType(DelegateIIWIII)), DelegateIIWIII)
                DebenuPDFLibraryAddImageFromString = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAddImageFromString"), GetType(DelegateIIBI)), DelegateIIBI)
                DebenuPDFLibraryAddLGIDictToPage = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAddLGIDictToPage"), GetType(DelegateIIW)), DelegateIIW)
                DebenuPDFLibraryAddLineToPath = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAddLineToPath"), GetType(DelegateIIDD)), DelegateIIDD)
                DebenuPDFLibraryAddLinkToDestination = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAddLinkToDestination"), GetType(DelegateIIDDDDII)), DelegateIIDDDDII)
                DebenuPDFLibraryAddLinkToEmbeddedFile = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAddLinkToEmbeddedFile"), GetType(DelegateIIDDDDIWWII)), DelegateIIDDDDIWWII)
                DebenuPDFLibraryAddLinkToFile = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAddLinkToFile"), GetType(DelegateIIDDDDWIDII)), DelegateIIDDDDWIDII)
                DebenuPDFLibraryAddLinkToFileDest = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAddLinkToFileDest"), GetType(DelegateIIDDDDWWDII)), DelegateIIDDDDWWDII)
                DebenuPDFLibraryAddLinkToFileEx = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAddLinkToFileEx"), GetType(DelegateIIDDDDWIIIIIDDDD)), DelegateIIDDDDWIIIIIDDDD)
                DebenuPDFLibraryAddLinkToJavaScript = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAddLinkToJavaScript"), GetType(DelegateIIDDDDWI)), DelegateIIDDDDWI)
                DebenuPDFLibraryAddLinkToLocalFile = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAddLinkToLocalFile"), GetType(DelegateIIDDDDWI)), DelegateIIDDDDWI)
                DebenuPDFLibraryAddLinkToPage = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAddLinkToPage"), GetType(DelegateIIDDDDIDI)), DelegateIIDDDDIDI)
                DebenuPDFLibraryAddLinkToWeb = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAddLinkToWeb"), GetType(DelegateIIDDDDWI)), DelegateIIDDDDWI)
                DebenuPDFLibraryAddNoteAnnotation = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAddNoteAnnotation"), GetType(DelegateIIDDIDDDDWWDDDI)), DelegateIIDDIDDDDWWDDDI)
                DebenuPDFLibraryAddOpenTypeFontFromFile = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAddOpenTypeFontFromFile"), GetType(DelegateIIWI)), DelegateIIWI)
                DebenuPDFLibraryAddPageLabels = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAddPageLabels"), GetType(DelegateIIIIIW)), DelegateIIIIIW)
                DebenuPDFLibraryAddSVGAnnotationFromFile = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAddSVGAnnotationFromFile"), GetType(DelegateIIDDDDWI)), DelegateIIDDDDWI)
                DebenuPDFLibraryAddSWFAnnotationFromFile = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAddSWFAnnotationFromFile"), GetType(DelegateIIDDDDWWI)), DelegateIIDDDDWWI)
                DebenuPDFLibraryAddSeparationColor = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAddSeparationColor"), GetType(DelegateIIWDDDDI)), DelegateIIWDDDDI)
                DebenuPDFLibraryAddStampAnnotation = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAddStampAnnotation"), GetType(DelegateIIDDDDIWWDDDI)), DelegateIIDDDDIWWDDDI)
                DebenuPDFLibraryAddStampAnnotationFromImage = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAddStampAnnotationFromImage"), GetType(DelegateIIDDDDWWWDDDI)), DelegateIIDDDDWWWDDDI)
                DebenuPDFLibraryAddStandardFont = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAddStandardFont"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryAddSubsettedFont = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAddSubsettedFont"), GetType(DelegateIIWIW)), DelegateIIWIW)
                DebenuPDFLibraryAddTextMarkupAnnotation = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAddTextMarkupAnnotation"), GetType(DelegateIIIDDDD)), DelegateIIIDDDD)
                DebenuPDFLibraryAddToBuffer = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAddToBuffer"), GetType(DelegateIIBBI)), DelegateIIBBI)
                DebenuPDFLibraryAddToFileList = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAddToFileList"), GetType(DelegateIIWW)), DelegateIIWW)
                DebenuPDFLibraryAddTrueTypeFont = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAddTrueTypeFont"), GetType(DelegateIIWI)), DelegateIIWI)
                DebenuPDFLibraryAddTrueTypeFontFromFile = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAddTrueTypeFontFromFile"), GetType(DelegateIIW)), DelegateIIW)
                DebenuPDFLibraryAddTrueTypeSubsettedFont = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAddTrueTypeSubsettedFont"), GetType(DelegateIIWWI)), DelegateIIWWI)
                DebenuPDFLibraryAddType1Font = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAddType1Font"), GetType(DelegateIIW)), DelegateIIW)
                DebenuPDFLibraryAddU3DAnnotationFromFile = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAddU3DAnnotationFromFile"), GetType(DelegateIIDDDDWI)), DelegateIIDDDDWI)
                DebenuPDFLibraryAnalyseFile = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAnalyseFile"), GetType(DelegateIIWW)), DelegateIIWW)
                DebenuPDFLibraryAnnotationCount = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAnnotationCount"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryAnsiStringResultLength = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAnsiStringResultLength"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryAppendSpace = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAppendSpace"), GetType(DelegateIID)), DelegateIID)
                DebenuPDFLibraryAppendTableColumns = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAppendTableColumns"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibraryAppendTableRows = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAppendTableRows"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibraryAppendText = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAppendText"), GetType(DelegateIIW)), DelegateIIW)
                DebenuPDFLibraryAppendToFile = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAppendToFile"), GetType(DelegateIIW)), DelegateIIW)
                DebenuPDFLibraryApplyStyle = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLApplyStyle"), GetType(DelegateIIW)), DelegateIIW)
                DebenuPDFLibraryAttachAnnotToForm = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLAttachAnnotToForm"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryBalanceContentStream = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLBalanceContentStream"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryBalancePageTree = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLBalancePageTree"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryBeginPageUpdate = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLBeginPageUpdate"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryCapturePage = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLCapturePage"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryCapturePageEx = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLCapturePageEx"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibraryCharWidth = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLCharWidth"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryCheckFileCompliance = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLCheckFileCompliance"), GetType(DelegateIIWWII)), DelegateIIWWII)
                DebenuPDFLibraryCheckObjects = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLCheckObjects"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryCheckPageAnnots = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLCheckPageAnnots"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryCheckPassword = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLCheckPassword"), GetType(DelegateIIW)), DelegateIIW)
                DebenuPDFLibraryClearFileList = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLClearFileList"), GetType(DelegateIIW)), DelegateIIW)
                DebenuPDFLibraryClearImage = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLClearImage"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryClearPageLabels = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLClearPageLabels"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryClearTextFormatting = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLClearTextFormatting"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryCloneOutlineAction = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLCloneOutlineAction"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryClonePages = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLClonePages"), GetType(DelegateIIIII)), DelegateIIIII)
                DebenuPDFLibraryCloseOutline = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLCloseOutline"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryClosePath = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLClosePath"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryCombineContentStreams = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLCombineContentStreams"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryCompareOutlines = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLCompareOutlines"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibraryCompressContent = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLCompressContent"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryCompressFonts = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLCompressFonts"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryCompressImages = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLCompressImages"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryCompressPage = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLCompressPage"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryContentStreamCount = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLContentStreamCount"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryContentStreamSafe = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLContentStreamSafe"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryCopyPageRanges = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLCopyPageRanges"), GetType(DelegateIIIW)), DelegateIIIW)
                DebenuPDFLibraryCopyPageRangesEx = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLCopyPageRangesEx"), GetType(DelegateIIIWI)), DelegateIIIWI)
                DebenuPDFLibraryCreateBuffer = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLCreateBuffer"), GetType(DelegateBII)), DelegateBII)
                DebenuPDFLibraryCreateLibrary = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLCreateLibrary"), GetType(DelegateI)), DelegateI)
                DebenuPDFLibraryCreateNewObject = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLCreateNewObject"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryCreateTable = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLCreateTable"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibraryDAAppendFile = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDAAppendFile"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryDACapturePage = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDACapturePage"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibraryDACapturePageEx = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDACapturePageEx"), GetType(DelegateIIIII)), DelegateIIIII)
                DebenuPDFLibraryDACloseFile = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDACloseFile"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryDADrawCapturedPage = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDADrawCapturedPage"), GetType(DelegateIIIIIDDDD)), DelegateIIIIIDDDD)
                DebenuPDFLibraryDADrawRotatedCapturedPage = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDADrawRotatedCapturedPage"), GetType(DelegateIIIIIDDDDD)), DelegateIIIIIDDDDD)
                DebenuPDFLibraryDAEmbedFileStreams = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDAEmbedFileStreams"), GetType(DelegateIIIW)), DelegateIIIW)
                DebenuPDFLibraryDAExtractPageText = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDAExtractPageText"), GetType(DelegateWIIII)), DelegateWIIII)
                DebenuPDFLibraryDAExtractPageTextBlocks = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDAExtractPageTextBlocks"), GetType(DelegateIIIII)), DelegateIIIII)
                DebenuPDFLibraryDAFindPage = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDAFindPage"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibraryDAGetAnnotationCount = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDAGetAnnotationCount"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibraryDAGetFormFieldCount = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDAGetFormFieldCount"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryDAGetFormFieldTitle = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDAGetFormFieldTitle"), GetType(DelegateWIII)), DelegateWIII)
                DebenuPDFLibraryDAGetFormFieldValue = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDAGetFormFieldValue"), GetType(DelegateWIII)), DelegateWIII)
                DebenuPDFLibraryDAGetImageDataToString = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDAGetImageDataToString"), GetType(DelegateBIIII)), DelegateBIIII)
                DebenuPDFLibraryDAGetImageDblProperty = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDAGetImageDblProperty"), GetType(DelegateDIIIII)), DelegateDIIIII)
                DebenuPDFLibraryDAGetImageIntProperty = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDAGetImageIntProperty"), GetType(DelegateIIIIII)), DelegateIIIIII)
                DebenuPDFLibraryDAGetImageListCount = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDAGetImageListCount"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibraryDAGetInformation = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDAGetInformation"), GetType(DelegateWIIW)), DelegateWIIW)
                DebenuPDFLibraryDAGetObjectCount = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDAGetObjectCount"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryDAGetObjectToString = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDAGetObjectToString"), GetType(DelegateBIII)), DelegateBIII)
                DebenuPDFLibraryDAGetPageBox = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDAGetPageBox"), GetType(DelegateDIIIII)), DelegateDIIIII)
                DebenuPDFLibraryDAGetPageContentToString = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDAGetPageContentToString"), GetType(DelegateBIII)), DelegateBIII)
                DebenuPDFLibraryDAGetPageCount = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDAGetPageCount"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryDAGetPageHeight = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDAGetPageHeight"), GetType(DelegateDIII)), DelegateDIII)
                DebenuPDFLibraryDAGetPageImageList = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDAGetPageImageList"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibraryDAGetPageWidth = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDAGetPageWidth"), GetType(DelegateDIII)), DelegateDIII)
                DebenuPDFLibraryDAGetTextBlockBound = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDAGetTextBlockBound"), GetType(DelegateDIIII)), DelegateDIIII)
                DebenuPDFLibraryDAGetTextBlockCharWidth = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDAGetTextBlockCharWidth"), GetType(DelegateDIIII)), DelegateDIIII)
                DebenuPDFLibraryDAGetTextBlockColor = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDAGetTextBlockColor"), GetType(DelegateDIIII)), DelegateDIIII)
                DebenuPDFLibraryDAGetTextBlockColorType = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDAGetTextBlockColorType"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibraryDAGetTextBlockCount = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDAGetTextBlockCount"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryDAGetTextBlockFontName = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDAGetTextBlockFontName"), GetType(DelegateWIII)), DelegateWIII)
                DebenuPDFLibraryDAGetTextBlockFontSize = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDAGetTextBlockFontSize"), GetType(DelegateDIII)), DelegateDIII)
                DebenuPDFLibraryDAGetTextBlockText = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDAGetTextBlockText"), GetType(DelegateWIII)), DelegateWIII)
                DebenuPDFLibraryDAHasPageBox = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDAHasPageBox"), GetType(DelegateIIIII)), DelegateIIIII)
                DebenuPDFLibraryDAHidePage = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDAHidePage"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibraryDAMovePage = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDAMovePage"), GetType(DelegateIIIIII)), DelegateIIIIII)
                DebenuPDFLibraryDANewPage = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDANewPage"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryDANewPages = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDANewPages"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibraryDAOpenFile = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDAOpenFile"), GetType(DelegateIIWW)), DelegateIIWW)
                DebenuPDFLibraryDAOpenFileReadOnly = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDAOpenFileReadOnly"), GetType(DelegateIIWW)), DelegateIIWW)
                DebenuPDFLibraryDAPageRotation = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDAPageRotation"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibraryDAReleaseImageList = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDAReleaseImageList"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibraryDAReleaseTextBlocks = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDAReleaseTextBlocks"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryDARemoveUsageRights = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDARemoveUsageRights"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryDARenderPageToDC = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDARenderPageToDC"), GetType(DelegateIIIIDC)), DelegateIIIIDC)
                DebenuPDFLibraryDARenderPageToFile = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDARenderPageToFile"), GetType(DelegateIIIIIDW)), DelegateIIIIIDW)
                DebenuPDFLibraryDARenderPageToString = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDARenderPageToString"), GetType(DelegateBIIIID)), DelegateBIIIID)
                DebenuPDFLibraryDARotatePage = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDARotatePage"), GetType(DelegateIIIIII)), DelegateIIIIII)
                DebenuPDFLibraryDASaveAsFile = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDASaveAsFile"), GetType(DelegateIIIW)), DelegateIIIW)
                DebenuPDFLibraryDASaveImageDataToFile = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDASaveImageDataToFile"), GetType(DelegateIIIIIW)), DelegateIIIIIW)
                DebenuPDFLibraryDASetInformation = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDASetInformation"), GetType(DelegateIIIWW)), DelegateIIIWW)
                DebenuPDFLibraryDASetPageBox = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDASetPageBox"), GetType(DelegateIIIIIDDDD)), DelegateIIIIIDDDD)
                DebenuPDFLibraryDASetPageSize = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDASetPageSize"), GetType(DelegateIIIIDD)), DelegateIIIIDD)
                DebenuPDFLibraryDASetTextExtractionArea = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDASetTextExtractionArea"), GetType(DelegateIIDDDD)), DelegateIIDDDD)
                DebenuPDFLibraryDASetTextExtractionOptions = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDASetTextExtractionOptions"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibraryDASetTextExtractionScaling = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDASetTextExtractionScaling"), GetType(DelegateIIIDD)), DelegateIIIDD)
                DebenuPDFLibraryDASetTextExtractionWordGap = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDASetTextExtractionWordGap"), GetType(DelegateIID)), DelegateIID)
                DebenuPDFLibraryDAShiftedHeader = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDAShiftedHeader"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryDecrypt = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDecrypt"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryDecryptFile = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDecryptFile"), GetType(DelegateIIWWW)), DelegateIIWWW)
                DebenuPDFLibraryDeleteAnalysis = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDeleteAnalysis"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryDeleteAnnotation = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDeleteAnnotation"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryDeleteContentStream = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDeleteContentStream"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryDeleteFormField = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDeleteFormField"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryDeleteOptionalContentGroup = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDeleteOptionalContentGroup"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryDeletePageLGIDict = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDeletePageLGIDict"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryDeletePages = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDeletePages"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibraryDocJavaScriptAction = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDocJavaScriptAction"), GetType(DelegateIIWW)), DelegateIIWW)
                DebenuPDFLibraryDocumentCount = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDocumentCount"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryDrawArc = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDrawArc"), GetType(DelegateIIDDDDDII)), DelegateIIDDDDDII)
                DebenuPDFLibraryDrawBarcode = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDrawBarcode"), GetType(DelegateIIDDDDWII)), DelegateIIDDDDWII)
                DebenuPDFLibraryDrawBox = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDrawBox"), GetType(DelegateIIDDDDI)), DelegateIIDDDDI)
                DebenuPDFLibraryDrawCapturedPage = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDrawCapturedPage"), GetType(DelegateIIIDDDD)), DelegateIIIDDDD)
                DebenuPDFLibraryDrawCapturedPageMatrix = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDrawCapturedPageMatrix"), GetType(DelegateIIIDDDDDD)), DelegateIIIDDDDDD)
                DebenuPDFLibraryDrawCircle = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDrawCircle"), GetType(DelegateIIDDDI)), DelegateIIDDDI)
                DebenuPDFLibraryDrawDataMatrixSymbol = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDrawDataMatrixSymbol"), GetType(DelegateIIDDDWIII)), DelegateIIDDDWIII)
                DebenuPDFLibraryDrawEllipse = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDrawEllipse"), GetType(DelegateIIDDDDI)), DelegateIIDDDDI)
                DebenuPDFLibraryDrawEllipticArc = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDrawEllipticArc"), GetType(DelegateIIDDDDDDII)), DelegateIIDDDDDDII)
                DebenuPDFLibraryDrawHTMLText = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDrawHTMLText"), GetType(DelegateIIDDDW)), DelegateIIDDDW)
                DebenuPDFLibraryDrawHTMLTextBox = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDrawHTMLTextBox"), GetType(DelegateWIDDDDW)), DelegateWIDDDDW)
                DebenuPDFLibraryDrawHTMLTextBoxMatrix = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDrawHTMLTextBoxMatrix"), GetType(DelegateWIDDWDDDDDD)), DelegateWIDDWDDDDDD)
                DebenuPDFLibraryDrawHTMLTextMatrix = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDrawHTMLTextMatrix"), GetType(DelegateIIDWDDDDDD)), DelegateIIDWDDDDDD)
                DebenuPDFLibraryDrawImage = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDrawImage"), GetType(DelegateIIDDDD)), DelegateIIDDDD)
                DebenuPDFLibraryDrawImageMatrix = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDrawImageMatrix"), GetType(DelegateIIDDDDDD)), DelegateIIDDDDDD)
                DebenuPDFLibraryDrawIntelligentMailBarcode = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDrawIntelligentMailBarcode"), GetType(DelegateIIDDDDDDWI)), DelegateIIDDDDDDWI)
                DebenuPDFLibraryDrawLine = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDrawLine"), GetType(DelegateIIDDDD)), DelegateIIDDDD)
                DebenuPDFLibraryDrawMultiLineText = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDrawMultiLineText"), GetType(DelegateIIDDWW)), DelegateIIDDWW)
                DebenuPDFLibraryDrawPDF417Symbol = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDrawPDF417Symbol"), GetType(DelegateIIDDWI)), DelegateIIDDWI)
                DebenuPDFLibraryDrawPDF417SymbolEx = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDrawPDF417SymbolEx"), GetType(DelegateIIDDWIIIIDD)), DelegateIIDDWIIIIDD)
                DebenuPDFLibraryDrawPath = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDrawPath"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryDrawPathEvenOdd = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDrawPathEvenOdd"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryDrawPostScriptXObject = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDrawPostScriptXObject"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryDrawQRCode = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDrawQRCode"), GetType(DelegateIIDDDWII)), DelegateIIDDDWII)
                DebenuPDFLibraryDrawRotatedBox = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDrawRotatedBox"), GetType(DelegateIIDDDDDI)), DelegateIIDDDDDI)
                DebenuPDFLibraryDrawRotatedCapturedPage = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDrawRotatedCapturedPage"), GetType(DelegateIIIDDDDD)), DelegateIIIDDDDD)
                DebenuPDFLibraryDrawRotatedImage = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDrawRotatedImage"), GetType(DelegateIIDDDDD)), DelegateIIDDDDD)
                DebenuPDFLibraryDrawRotatedMultiLineText = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDrawRotatedMultiLineText"), GetType(DelegateIIDDDWW)), DelegateIIDDDWW)
                DebenuPDFLibraryDrawRotatedText = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDrawRotatedText"), GetType(DelegateIIDDDW)), DelegateIIDDDW)
                DebenuPDFLibraryDrawRotatedTextBox = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDrawRotatedTextBox"), GetType(DelegateIIDDDDDWI)), DelegateIIDDDDDWI)
                DebenuPDFLibraryDrawRotatedTextBoxEx = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDrawRotatedTextBoxEx"), GetType(DelegateIIDDDDDWIIII)), DelegateIIDDDDDWIIII)
                DebenuPDFLibraryDrawRoundedBox = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDrawRoundedBox"), GetType(DelegateIIDDDDDI)), DelegateIIDDDDDI)
                DebenuPDFLibraryDrawRoundedRotatedBox = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDrawRoundedRotatedBox"), GetType(DelegateIIDDDDDDI)), DelegateIIDDDDDDI)
                DebenuPDFLibraryDrawScaledImage = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDrawScaledImage"), GetType(DelegateIIDDD)), DelegateIIDDD)
                DebenuPDFLibraryDrawSpacedText = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDrawSpacedText"), GetType(DelegateIIDDDW)), DelegateIIDDDW)
                DebenuPDFLibraryDrawTableRows = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDrawTableRows"), GetType(DelegateDIIDDDII)), DelegateDIIDDDII)
                DebenuPDFLibraryDrawText = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDrawText"), GetType(DelegateIIDDW)), DelegateIIDDW)
                DebenuPDFLibraryDrawTextArc = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDrawTextArc"), GetType(DelegateIIDDDDWI)), DelegateIIDDDDWI)
                DebenuPDFLibraryDrawTextBox = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDrawTextBox"), GetType(DelegateIIDDDDWI)), DelegateIIDDDDWI)
                DebenuPDFLibraryDrawTextBoxMatrix = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDrawTextBoxMatrix"), GetType(DelegateIIDDWIDDDDDD)), DelegateIIDDWIDDDDDD)
                DebenuPDFLibraryDrawWrappedText = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLDrawWrappedText"), GetType(DelegateIIDDDW)), DelegateIIDDDW)
                DebenuPDFLibraryEditableContentStream = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLEditableContentStream"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryEmbedFile = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLEmbedFile"), GetType(DelegateIIWWW)), DelegateIIWWW)
                DebenuPDFLibraryEmbeddedFileCount = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLEmbeddedFileCount"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryEncapsulateContentStream = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLEncapsulateContentStream"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryEncodePermissions = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLEncodePermissions"), GetType(DelegateIIIIIIIIII)), DelegateIIIIIIIIII)
                DebenuPDFLibraryEncrypt = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLEncrypt"), GetType(DelegateIIWWII)), DelegateIIWWII)
                DebenuPDFLibraryEncryptFile = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLEncryptFile"), GetType(DelegateIIWWWWII)), DelegateIIWWWWII)
                DebenuPDFLibraryEncryptWithFingerprint = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLEncryptWithFingerprint"), GetType(DelegateIIW)), DelegateIIW)
                DebenuPDFLibraryEncryptionAlgorithm = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLEncryptionAlgorithm"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryEncryptionStatus = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLEncryptionStatus"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryEncryptionStrength = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLEncryptionStrength"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryEndPageUpdate = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLEndPageUpdate"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryEndSignProcessToFile = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLEndSignProcessToFile"), GetType(DelegateIIIW)), DelegateIIIW)
                DebenuPDFLibraryEndSignProcessToString = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLEndSignProcessToString"), GetType(DelegateBII)), DelegateBII)
                DebenuPDFLibraryExtractFilePageContentToString = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLExtractFilePageContentToString"), GetType(DelegateBIWWI)), DelegateBIWWI)
                DebenuPDFLibraryExtractFilePageText = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLExtractFilePageText"), GetType(DelegateWIWWII)), DelegateWIWWII)
                DebenuPDFLibraryExtractFilePageTextBlocks = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLExtractFilePageTextBlocks"), GetType(DelegateIIWWII)), DelegateIIWWII)
                DebenuPDFLibraryExtractFilePages = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLExtractFilePages"), GetType(DelegateIIWWWW)), DelegateIIWWWW)
                DebenuPDFLibraryExtractFilePagesEx = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLExtractFilePagesEx"), GetType(DelegateIIWWWWI)), DelegateIIWWWWI)
                DebenuPDFLibraryExtractPageRanges = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLExtractPageRanges"), GetType(DelegateIIW)), DelegateIIW)
                DebenuPDFLibraryExtractPageTextBlocks = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLExtractPageTextBlocks"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryExtractPages = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLExtractPages"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibraryFileListCount = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLFileListCount"), GetType(DelegateIIW)), DelegateIIW)
                DebenuPDFLibraryFileListItem = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLFileListItem"), GetType(DelegateWIWI)), DelegateWIWI)
                DebenuPDFLibraryFindFonts = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLFindFonts"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryFindFormFieldByTitle = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLFindFormFieldByTitle"), GetType(DelegateIIW)), DelegateIIW)
                DebenuPDFLibraryFindImages = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLFindImages"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryFitImage = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLFitImage"), GetType(DelegateIIDDDDIII)), DelegateIIDDDDIII)
                DebenuPDFLibraryFitRotatedTextBox = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLFitRotatedTextBox"), GetType(DelegateIIDDDDDWI)), DelegateIIDDDDDWI)
                DebenuPDFLibraryFitTextBox = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLFitTextBox"), GetType(DelegateIIDDDDWI)), DelegateIIDDDDWI)
                DebenuPDFLibraryFlattenAnnot = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLFlattenAnnot"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibraryFlattenFormField = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLFlattenFormField"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryFontCount = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLFontCount"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryFontFamily = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLFontFamily"), GetType(DelegateWI)), DelegateWI)
                DebenuPDFLibraryFontHasKerning = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLFontHasKerning"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryFontName = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLFontName"), GetType(DelegateWI)), DelegateWI)
                DebenuPDFLibraryFontReference = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLFontReference"), GetType(DelegateWI)), DelegateWI)
                DebenuPDFLibraryFontSize = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLFontSize"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryFontType = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLFontType"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryFormFieldCount = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLFormFieldCount"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryFormFieldHasParent = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLFormFieldHasParent"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryFormFieldJavaScriptAction = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLFormFieldJavaScriptAction"), GetType(DelegateIIIWW)), DelegateIIIWW)
                DebenuPDFLibraryFormFieldWebLinkAction = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLFormFieldWebLinkAction"), GetType(DelegateIIIWW)), DelegateIIIWW)
                DebenuPDFLibraryGetActionDest = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetActionDest"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetActionType = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetActionType"), GetType(DelegateWII)), DelegateWII)
                DebenuPDFLibraryGetActionURL = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetActionURL"), GetType(DelegateWII)), DelegateWII)
                DebenuPDFLibraryGetAnalysisInfo = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetAnalysisInfo"), GetType(DelegateWIII)), DelegateWIII)
                DebenuPDFLibraryGetAnnotActionID = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetAnnotActionID"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetAnnotDblProperty = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetAnnotDblProperty"), GetType(DelegateDIII)), DelegateDIII)
                DebenuPDFLibraryGetAnnotDest = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetAnnotDest"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetAnnotEmbeddedFileName = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetAnnotEmbeddedFileName"), GetType(DelegateWIII)), DelegateWIII)
                DebenuPDFLibraryGetAnnotEmbeddedFileToFile = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetAnnotEmbeddedFileToFile"), GetType(DelegateIIIIW)), DelegateIIIIW)
                DebenuPDFLibraryGetAnnotEmbeddedFileToString = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetAnnotEmbeddedFileToString"), GetType(DelegateBIII)), DelegateBIII)
                DebenuPDFLibraryGetAnnotIntProperty = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetAnnotIntProperty"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibraryGetAnnotQuadCount = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetAnnotQuadCount"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetAnnotQuadPoints = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetAnnotQuadPoints"), GetType(DelegateDIIII)), DelegateDIIII)
                DebenuPDFLibraryGetAnnotSoundToFile = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetAnnotSoundToFile"), GetType(DelegateIIIIW)), DelegateIIIIW)
                DebenuPDFLibraryGetAnnotSoundToString = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetAnnotSoundToString"), GetType(DelegateBIII)), DelegateBIII)
                DebenuPDFLibraryGetAnnotStrProperty = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetAnnotStrProperty"), GetType(DelegateWIII)), DelegateWIII)
                DebenuPDFLibraryGetBarcodeWidth = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetBarcodeWidth"), GetType(DelegateDIDWI)), DelegateDIDWI)
                DebenuPDFLibraryGetBaseURL = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetBaseURL"), GetType(DelegateWI)), DelegateWI)
                DebenuPDFLibraryGetCSDictEPSG = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetCSDictEPSG"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetCSDictType = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetCSDictType"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetCSDictWKT = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetCSDictWKT"), GetType(DelegateWII)), DelegateWII)
                DebenuPDFLibraryGetCanvasDC = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetCanvasDC"), GetType(DelegateCIII)), DelegateCIII)
                DebenuPDFLibraryGetCatalogInformation = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetCatalogInformation"), GetType(DelegateWIW)), DelegateWIW)
                DebenuPDFLibraryGetContentStreamToString = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetContentStreamToString"), GetType(DelegateBI)), DelegateBI)
                DebenuPDFLibraryGetCustomInformation = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetCustomInformation"), GetType(DelegateWIW)), DelegateWIW)
                DebenuPDFLibraryGetCustomKeys = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetCustomKeys"), GetType(DelegateWII)), DelegateWII)
                DebenuPDFLibraryGetDefaultPrinterName = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetDefaultPrinterName"), GetType(DelegateWI)), DelegateWI)
                DebenuPDFLibraryGetDestName = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetDestName"), GetType(DelegateWII)), DelegateWII)
                DebenuPDFLibraryGetDestPage = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetDestPage"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetDestType = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetDestType"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetDestValue = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetDestValue"), GetType(DelegateDIII)), DelegateDIII)
                DebenuPDFLibraryGetDocJavaScript = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetDocJavaScript"), GetType(DelegateWIW)), DelegateWIW)
                DebenuPDFLibraryGetDocumentFileName = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetDocumentFileName"), GetType(DelegateWI)), DelegateWI)
                DebenuPDFLibraryGetDocumentFileSize = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetDocumentFileSize"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryGetDocumentID = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetDocumentID"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetDocumentIdentifier = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetDocumentIdentifier"), GetType(DelegateWIII)), DelegateWIII)
                DebenuPDFLibraryGetDocumentMetadata = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetDocumentMetadata"), GetType(DelegateWI)), DelegateWI)
                DebenuPDFLibraryGetDocumentRepaired = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetDocumentRepaired"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryGetDocumentResourceList = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetDocumentResourceList"), GetType(DelegateWI)), DelegateWI)
                DebenuPDFLibraryGetEmbeddedFileContentToFile = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetEmbeddedFileContentToFile"), GetType(DelegateIIIW)), DelegateIIIW)
                DebenuPDFLibraryGetEmbeddedFileContentToString = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetEmbeddedFileContentToString"), GetType(DelegateBII)), DelegateBII)
                DebenuPDFLibraryGetEmbeddedFileID = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetEmbeddedFileID"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetEmbeddedFileIntProperty = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetEmbeddedFileIntProperty"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibraryGetEmbeddedFileStrProperty = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetEmbeddedFileStrProperty"), GetType(DelegateWIII)), DelegateWIII)
                DebenuPDFLibraryGetEncryptionFingerprint = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetEncryptionFingerprint"), GetType(DelegateWI)), DelegateWI)
                DebenuPDFLibraryGetFileMetadata = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFileMetadata"), GetType(DelegateWIWW)), DelegateWIWW)
                DebenuPDFLibraryGetFirstChildOutline = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFirstChildOutline"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetFirstOutline = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFirstOutline"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryGetFontEncoding = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFontEncoding"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryGetFontFlags = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFontFlags"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetFontID = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFontID"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetFontIsEmbedded = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFontIsEmbedded"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryGetFontIsSubsetted = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFontIsSubsetted"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryGetFontMetrics = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFontMetrics"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetFontObjectNumber = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFontObjectNumber"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryGetFormFieldActionID = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFormFieldActionID"), GetType(DelegateIIIW)), DelegateIIIW)
                DebenuPDFLibraryGetFormFieldAlignment = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFormFieldAlignment"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetFormFieldAnnotFlags = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFormFieldAnnotFlags"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetFormFieldBackgroundColor = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFormFieldBackgroundColor"), GetType(DelegateDIII)), DelegateDIII)
                DebenuPDFLibraryGetFormFieldBackgroundColorType = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFormFieldBackgroundColorType"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetFormFieldBorderColor = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFormFieldBorderColor"), GetType(DelegateDIII)), DelegateDIII)
                DebenuPDFLibraryGetFormFieldBorderColorType = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFormFieldBorderColorType"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetFormFieldBorderProperty = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFormFieldBorderProperty"), GetType(DelegateDIII)), DelegateDIII)
                DebenuPDFLibraryGetFormFieldBorderStyle = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFormFieldBorderStyle"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetFormFieldBound = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFormFieldBound"), GetType(DelegateDIII)), DelegateDIII)
                DebenuPDFLibraryGetFormFieldCaption = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFormFieldCaption"), GetType(DelegateWII)), DelegateWII)
                DebenuPDFLibraryGetFormFieldCheckStyle = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFormFieldCheckStyle"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetFormFieldChildTitle = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFormFieldChildTitle"), GetType(DelegateWII)), DelegateWII)
                DebenuPDFLibraryGetFormFieldChoiceType = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFormFieldChoiceType"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetFormFieldColor = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFormFieldColor"), GetType(DelegateDIII)), DelegateDIII)
                DebenuPDFLibraryGetFormFieldComb = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFormFieldComb"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetFormFieldDefaultValue = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFormFieldDefaultValue"), GetType(DelegateWII)), DelegateWII)
                DebenuPDFLibraryGetFormFieldDescription = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFormFieldDescription"), GetType(DelegateWII)), DelegateWII)
                DebenuPDFLibraryGetFormFieldFlags = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFormFieldFlags"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetFormFieldFontName = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFormFieldFontName"), GetType(DelegateWII)), DelegateWII)
                DebenuPDFLibraryGetFormFieldJavaScript = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFormFieldJavaScript"), GetType(DelegateWIIW)), DelegateWIIW)
                DebenuPDFLibraryGetFormFieldKidCount = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFormFieldKidCount"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetFormFieldKidTempIndex = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFormFieldKidTempIndex"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibraryGetFormFieldMaxLen = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFormFieldMaxLen"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetFormFieldNoExport = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFormFieldNoExport"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetFormFieldPage = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFormFieldPage"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetFormFieldPrintable = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFormFieldPrintable"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetFormFieldReadOnly = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFormFieldReadOnly"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetFormFieldRequired = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFormFieldRequired"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetFormFieldRichTextString = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFormFieldRichTextString"), GetType(DelegateWIIW)), DelegateWIIW)
                DebenuPDFLibraryGetFormFieldRotation = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFormFieldRotation"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetFormFieldSubCount = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFormFieldSubCount"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetFormFieldSubDisplayName = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFormFieldSubDisplayName"), GetType(DelegateWIII)), DelegateWIII)
                DebenuPDFLibraryGetFormFieldSubName = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFormFieldSubName"), GetType(DelegateWIII)), DelegateWIII)
                DebenuPDFLibraryGetFormFieldSubmitActionString = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFormFieldSubmitActionString"), GetType(DelegateWIIW)), DelegateWIIW)
                DebenuPDFLibraryGetFormFieldTabOrder = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFormFieldTabOrder"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetFormFieldTabOrderEx = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFormFieldTabOrderEx"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibraryGetFormFieldTextFlags = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFormFieldTextFlags"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibraryGetFormFieldTextSize = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFormFieldTextSize"), GetType(DelegateDII)), DelegateDII)
                DebenuPDFLibraryGetFormFieldTitle = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFormFieldTitle"), GetType(DelegateWII)), DelegateWII)
                DebenuPDFLibraryGetFormFieldType = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFormFieldType"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetFormFieldValue = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFormFieldValue"), GetType(DelegateWII)), DelegateWII)
                DebenuPDFLibraryGetFormFieldValueByTitle = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFormFieldValueByTitle"), GetType(DelegateWIW)), DelegateWIW)
                DebenuPDFLibraryGetFormFieldVisible = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFormFieldVisible"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetFormFieldWebLink = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFormFieldWebLink"), GetType(DelegateWIIW)), DelegateWIIW)
                DebenuPDFLibraryGetFormFontCount = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFormFontCount"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryGetFormFontName = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetFormFontName"), GetType(DelegateWII)), DelegateWII)
                DebenuPDFLibraryGetGlobalJavaScript = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetGlobalJavaScript"), GetType(DelegateWIW)), DelegateWIW)
                DebenuPDFLibraryGetHTMLTextHeight = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetHTMLTextHeight"), GetType(DelegateDIDW)), DelegateDIDW)
                DebenuPDFLibraryGetHTMLTextLineCount = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetHTMLTextLineCount"), GetType(DelegateIIDW)), DelegateIIDW)
                DebenuPDFLibraryGetHTMLTextWidth = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetHTMLTextWidth"), GetType(DelegateDIDW)), DelegateDIDW)
                DebenuPDFLibraryGetImageID = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetImageID"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetImageListCount = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetImageListCount"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetImageListItemDataToString = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetImageListItemDataToString"), GetType(DelegateBIIII)), DelegateBIIII)
                DebenuPDFLibraryGetImageListItemDblProperty = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetImageListItemDblProperty"), GetType(DelegateDIIII)), DelegateDIIII)
                DebenuPDFLibraryGetImageListItemIntProperty = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetImageListItemIntProperty"), GetType(DelegateIIIII)), DelegateIIIII)
                DebenuPDFLibraryGetImageMeasureDict = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetImageMeasureDict"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryGetImagePageCount = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetImagePageCount"), GetType(DelegateIIW)), DelegateIIW)
                DebenuPDFLibraryGetImagePageCountFromString = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetImagePageCountFromString"), GetType(DelegateIIB)), DelegateIIB)
                DebenuPDFLibraryGetImagePtDataDict = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetImagePtDataDict"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryGetInformation = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetInformation"), GetType(DelegateWII)), DelegateWII)
                DebenuPDFLibraryGetInstalledFontsByCharset = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetInstalledFontsByCharset"), GetType(DelegateWIII)), DelegateWIII)
                DebenuPDFLibraryGetInstalledFontsByCodePage = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetInstalledFontsByCodePage"), GetType(DelegateWIII)), DelegateWIII)
                DebenuPDFLibraryGetKerning = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetKerning"), GetType(DelegateIIW)), DelegateIIW)
                DebenuPDFLibraryGetLatestPrinterNames = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetLatestPrinterNames"), GetType(DelegateWI)), DelegateWI)
                DebenuPDFLibraryGetMaxObjectNumber = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetMaxObjectNumber"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryGetMeasureDictBoundsCount = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetMeasureDictBoundsCount"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetMeasureDictBoundsItem = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetMeasureDictBoundsItem"), GetType(DelegateDIII)), DelegateDIII)
                DebenuPDFLibraryGetMeasureDictCoordinateSystem = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetMeasureDictCoordinateSystem"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetMeasureDictDCSDict = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetMeasureDictDCSDict"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetMeasureDictGCSDict = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetMeasureDictGCSDict"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetMeasureDictGPTSCount = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetMeasureDictGPTSCount"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetMeasureDictGPTSItem = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetMeasureDictGPTSItem"), GetType(DelegateDIII)), DelegateDIII)
                DebenuPDFLibraryGetMeasureDictLPTSCount = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetMeasureDictLPTSCount"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetMeasureDictLPTSItem = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetMeasureDictLPTSItem"), GetType(DelegateDIII)), DelegateDIII)
                DebenuPDFLibraryGetMeasureDictPDU = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetMeasureDictPDU"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibraryGetNamedDestination = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetNamedDestination"), GetType(DelegateIIW)), DelegateIIW)
                DebenuPDFLibraryGetNextOutline = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetNextOutline"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetObjectCount = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetObjectCount"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryGetObjectDecodeError = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetObjectDecodeError"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetObjectToString = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetObjectToString"), GetType(DelegateBII)), DelegateBII)
                DebenuPDFLibraryGetOpenActionDestination = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetOpenActionDestination"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryGetOpenActionJavaScript = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetOpenActionJavaScript"), GetType(DelegateWI)), DelegateWI)
                DebenuPDFLibraryGetOptionalContentConfigCount = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetOptionalContentConfigCount"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryGetOptionalContentConfigLocked = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetOptionalContentConfigLocked"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibraryGetOptionalContentConfigOrderCount = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetOptionalContentConfigOrderCount"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetOptionalContentConfigOrderItemID = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetOptionalContentConfigOrderItemID"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibraryGetOptionalContentConfigOrderItemLabel = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetOptionalContentConfigOrderItemLabel"), GetType(DelegateWIII)), DelegateWIII)
                DebenuPDFLibraryGetOptionalContentConfigOrderItemLevel = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetOptionalContentConfigOrderItemLevel"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibraryGetOptionalContentConfigOrderItemType = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetOptionalContentConfigOrderItemType"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibraryGetOptionalContentConfigState = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetOptionalContentConfigState"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibraryGetOptionalContentGroupID = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetOptionalContentGroupID"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetOptionalContentGroupName = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetOptionalContentGroupName"), GetType(DelegateWII)), DelegateWII)
                DebenuPDFLibraryGetOptionalContentGroupPrintable = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetOptionalContentGroupPrintable"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetOptionalContentGroupVisible = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetOptionalContentGroupVisible"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetOrigin = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetOrigin"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryGetOutlineActionID = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetOutlineActionID"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetOutlineColor = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetOutlineColor"), GetType(DelegateDIII)), DelegateDIII)
                DebenuPDFLibraryGetOutlineDest = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetOutlineDest"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetOutlineID = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetOutlineID"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetOutlineJavaScript = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetOutlineJavaScript"), GetType(DelegateWII)), DelegateWII)
                DebenuPDFLibraryGetOutlineObjectNumber = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetOutlineObjectNumber"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetOutlineOpenFile = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetOutlineOpenFile"), GetType(DelegateWII)), DelegateWII)
                DebenuPDFLibraryGetOutlinePage = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetOutlinePage"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetOutlineStyle = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetOutlineStyle"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetOutlineWebLink = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetOutlineWebLink"), GetType(DelegateWII)), DelegateWII)
                DebenuPDFLibraryGetPageBox = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetPageBox"), GetType(DelegateDIII)), DelegateDIII)
                DebenuPDFLibraryGetPageColorSpaces = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetPageColorSpaces"), GetType(DelegateWII)), DelegateWII)
                DebenuPDFLibraryGetPageContentToString = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetPageContentToString"), GetType(DelegateBI)), DelegateBI)
                DebenuPDFLibraryGetPageImageList = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetPageImageList"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetPageJavaScript = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetPageJavaScript"), GetType(DelegateWIW)), DelegateWIW)
                DebenuPDFLibraryGetPageLGIDictContent = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetPageLGIDictContent"), GetType(DelegateWII)), DelegateWII)
                DebenuPDFLibraryGetPageLGIDictCount = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetPageLGIDictCount"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryGetPageLabel = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetPageLabel"), GetType(DelegateWII)), DelegateWII)
                DebenuPDFLibraryGetPageLayout = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetPageLayout"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryGetPageMetricsToString = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetPageMetricsToString"), GetType(DelegateBIIII)), DelegateBIIII)
                DebenuPDFLibraryGetPageMode = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetPageMode"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryGetPageText = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetPageText"), GetType(DelegateWII)), DelegateWII)
                DebenuPDFLibraryGetPageViewPortCount = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetPageViewPortCount"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryGetPageViewPortID = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetPageViewPortID"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetParentOutline = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetParentOutline"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetPrevOutline = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetPrevOutline"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetPrintPreviewBitmapToString = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetPrintPreviewBitmapToString"), GetType(DelegateBIWIIII)), DelegateBIWIIII)
                DebenuPDFLibraryGetPrinterBins = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetPrinterBins"), GetType(DelegateWIW)), DelegateWIW)
                DebenuPDFLibraryGetPrinterDevModeToString = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetPrinterDevModeToString"), GetType(DelegateBIW)), DelegateBIW)
                DebenuPDFLibraryGetPrinterMediaTypes = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetPrinterMediaTypes"), GetType(DelegateWIW)), DelegateWIW)
                DebenuPDFLibraryGetPrinterNames = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetPrinterNames"), GetType(DelegateWI)), DelegateWI)
                DebenuPDFLibraryGetRenderScale = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetRenderScale"), GetType(DelegateDI)), DelegateDI)
                DebenuPDFLibraryGetSignProcessByteRange = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetSignProcessByteRange"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibraryGetSignProcessResult = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetSignProcessResult"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetStringListCount = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetStringListCount"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetStringListItem = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetStringListItem"), GetType(DelegateWIII)), DelegateWIII)
                DebenuPDFLibraryGetTabOrderMode = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetTabOrderMode"), GetType(DelegateWI)), DelegateWI)
                DebenuPDFLibraryGetTableCellDblProperty = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetTableCellDblProperty"), GetType(DelegateDIIIII)), DelegateDIIIII)
                DebenuPDFLibraryGetTableCellIntProperty = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetTableCellIntProperty"), GetType(DelegateIIIIII)), DelegateIIIIII)
                DebenuPDFLibraryGetTableCellStrProperty = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetTableCellStrProperty"), GetType(DelegateWIIIII)), DelegateWIIIII)
                DebenuPDFLibraryGetTableColumnCount = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetTableColumnCount"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetTableLastDrawnRow = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetTableLastDrawnRow"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetTableRowCount = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetTableRowCount"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetTempPath = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetTempPath"), GetType(DelegateWI)), DelegateWI)
                DebenuPDFLibraryGetTextAscent = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetTextAscent"), GetType(DelegateDI)), DelegateDI)
                DebenuPDFLibraryGetTextBlockBound = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetTextBlockBound"), GetType(DelegateDIIII)), DelegateDIIII)
                DebenuPDFLibraryGetTextBlockCharWidth = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetTextBlockCharWidth"), GetType(DelegateDIIII)), DelegateDIIII)
                DebenuPDFLibraryGetTextBlockColor = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetTextBlockColor"), GetType(DelegateDIIII)), DelegateDIIII)
                DebenuPDFLibraryGetTextBlockColorType = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetTextBlockColorType"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibraryGetTextBlockCount = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetTextBlockCount"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetTextBlockFontName = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetTextBlockFontName"), GetType(DelegateWIII)), DelegateWIII)
                DebenuPDFLibraryGetTextBlockFontSize = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetTextBlockFontSize"), GetType(DelegateDIII)), DelegateDIII)
                DebenuPDFLibraryGetTextBlockText = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetTextBlockText"), GetType(DelegateWIII)), DelegateWIII)
                DebenuPDFLibraryGetTextBound = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetTextBound"), GetType(DelegateDII)), DelegateDII)
                DebenuPDFLibraryGetTextDescent = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetTextDescent"), GetType(DelegateDI)), DelegateDI)
                DebenuPDFLibraryGetTextHeight = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetTextHeight"), GetType(DelegateDI)), DelegateDI)
                DebenuPDFLibraryGetTextSize = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetTextSize"), GetType(DelegateDI)), DelegateDI)
                DebenuPDFLibraryGetTextWidth = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetTextWidth"), GetType(DelegateDIW)), DelegateDIW)
                DebenuPDFLibraryGetUnicodeCharactersFromEncoding = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetUnicodeCharactersFromEncoding"), GetType(DelegateWII)), DelegateWII)
                DebenuPDFLibraryGetViewPortBBox = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetViewPortBBox"), GetType(DelegateDIII)), DelegateDIII)
                DebenuPDFLibraryGetViewPortMeasureDict = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetViewPortMeasureDict"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetViewPortName = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetViewPortName"), GetType(DelegateWII)), DelegateWII)
                DebenuPDFLibraryGetViewPortPtDataDict = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetViewPortPtDataDict"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetViewerPreferences = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetViewerPreferences"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryGetWrappedText = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetWrappedText"), GetType(DelegateWIDWW)), DelegateWIDWW)
                DebenuPDFLibraryGetWrappedTextBreakString = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetWrappedTextBreakString"), GetType(DelegateWIDWW)), DelegateWIDWW)
                DebenuPDFLibraryGetWrappedTextHeight = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetWrappedTextHeight"), GetType(DelegateDIDW)), DelegateDIDW)
                DebenuPDFLibraryGetWrappedTextLineCount = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetWrappedTextLineCount"), GetType(DelegateIIDW)), DelegateIIDW)
                DebenuPDFLibraryGetXFAFormFieldCount = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetXFAFormFieldCount"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryGetXFAFormFieldName = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetXFAFormFieldName"), GetType(DelegateWII)), DelegateWII)
                DebenuPDFLibraryGetXFAFormFieldNames = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetXFAFormFieldNames"), GetType(DelegateWIW)), DelegateWIW)
                DebenuPDFLibraryGetXFAFormFieldValue = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetXFAFormFieldValue"), GetType(DelegateWIW)), DelegateWIW)
                DebenuPDFLibraryGetXFAToString = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGetXFAToString"), GetType(DelegateBII)), DelegateBII)
                DebenuPDFLibraryGlobalJavaScriptCount = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGlobalJavaScriptCount"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryGlobalJavaScriptPackageName = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLGlobalJavaScriptPackageName"), GetType(DelegateWII)), DelegateWII)
                DebenuPDFLibraryHasFontResources = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLHasFontResources"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryHasPageBox = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLHasPageBox"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryHidePage = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLHidePage"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryImageCount = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLImageCount"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryImageFillColor = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLImageFillColor"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryImageHeight = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLImageHeight"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryImageHorizontalResolution = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLImageHorizontalResolution"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryImageResolutionUnits = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLImageResolutionUnits"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryImageType = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLImageType"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryImageVerticalResolution = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLImageVerticalResolution"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryImageWidth = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLImageWidth"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryImportEMFFromFile = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLImportEMFFromFile"), GetType(DelegateIIWII)), DelegateIIWII)
                DebenuPDFLibraryInsertPages = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLInsertPages"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibraryInsertTableColumns = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLInsertTableColumns"), GetType(DelegateIIIII)), DelegateIIIII)
                DebenuPDFLibraryInsertTableRows = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLInsertTableRows"), GetType(DelegateIIIII)), DelegateIIIII)
                DebenuPDFLibraryIsAnnotFormField = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLIsAnnotFormField"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryIsTaggedPDF = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLIsTaggedPDF"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryLastErrorCode = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLLastErrorCode"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryLastRenderError = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLLastRenderError"), GetType(DelegateWI)), DelegateWI)
                DebenuPDFLibraryLibraryVersion = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLLibraryVersion"), GetType(DelegateWI)), DelegateWI)
                DebenuPDFLibraryLicenseInfo = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLLicenseInfo"), GetType(DelegateWI)), DelegateWI)
                DebenuPDFLibraryLinearized = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLLinearized"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryLoadFromCanvasDC = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLLoadFromCanvasDC"), GetType(DelegateIIDI)), DelegateIIDI)
                DebenuPDFLibraryLoadFromFile = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLLoadFromFile"), GetType(DelegateIIWW)), DelegateIIWW)
                DebenuPDFLibraryLoadFromString = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLLoadFromString"), GetType(DelegateIIBW)), DelegateIIBW)
                DebenuPDFLibraryLoadState = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLLoadState"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryMergeDocument = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLMergeDocument"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryMergeFileList = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLMergeFileList"), GetType(DelegateIIWW)), DelegateIIWW)
                DebenuPDFLibraryMergeFileListFast = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLMergeFileListFast"), GetType(DelegateIIWW)), DelegateIIWW)
                DebenuPDFLibraryMergeFiles = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLMergeFiles"), GetType(DelegateIIWWW)), DelegateIIWWW)
                DebenuPDFLibraryMergeTableCells = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLMergeTableCells"), GetType(DelegateIIIIIII)), DelegateIIIIIII)
                DebenuPDFLibraryMoveContentStream = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLMoveContentStream"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibraryMoveOutlineAfter = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLMoveOutlineAfter"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibraryMoveOutlineBefore = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLMoveOutlineBefore"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibraryMovePage = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLMovePage"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryMovePath = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLMovePath"), GetType(DelegateIIDD)), DelegateIIDD)
                DebenuPDFLibraryMultiplyScale = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLMultiplyScale"), GetType(DelegateIID)), DelegateIID)
                DebenuPDFLibraryNewChildFormField = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLNewChildFormField"), GetType(DelegateIIIWI)), DelegateIIIWI)
                DebenuPDFLibraryNewContentStream = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLNewContentStream"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryNewCustomPrinter = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLNewCustomPrinter"), GetType(DelegateWIW)), DelegateWIW)
                DebenuPDFLibraryNewDestination = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLNewDestination"), GetType(DelegateIIIIIDDDD)), DelegateIIIIIDDDD)
                DebenuPDFLibraryNewDocument = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLNewDocument"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryNewFormField = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLNewFormField"), GetType(DelegateIIWI)), DelegateIIWI)
                DebenuPDFLibraryNewInternalPrinterObject = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLNewInternalPrinterObject"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryNewNamedDestination = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLNewNamedDestination"), GetType(DelegateIIWI)), DelegateIIWI)
                DebenuPDFLibraryNewOptionalContentGroup = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLNewOptionalContentGroup"), GetType(DelegateIIW)), DelegateIIW)
                DebenuPDFLibraryNewOutline = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLNewOutline"), GetType(DelegateIIIWID)), DelegateIIIWID)
                DebenuPDFLibraryNewPage = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLNewPage"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryNewPageFromCanvasDC = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLNewPageFromCanvasDC"), GetType(DelegateIIDI)), DelegateIIDI)
                DebenuPDFLibraryNewPages = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLNewPages"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryNewPostScriptXObject = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLNewPostScriptXObject"), GetType(DelegateIIW)), DelegateIIW)
                DebenuPDFLibraryNewRGBAxialShader = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLNewRGBAxialShader"), GetType(DelegateIIWDDDDDDDDDDI)), DelegateIIWDDDDDDDDDDI)
                DebenuPDFLibraryNewSignProcessFromFile = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLNewSignProcessFromFile"), GetType(DelegateIIWW)), DelegateIIWW)
                DebenuPDFLibraryNewSignProcessFromString = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLNewSignProcessFromString"), GetType(DelegateIIBW)), DelegateIIBW)
                DebenuPDFLibraryNewStaticOutline = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLNewStaticOutline"), GetType(DelegateIIIW)), DelegateIIIW)
                DebenuPDFLibraryNewTilingPatternFromCapturedPage = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLNewTilingPatternFromCapturedPage"), GetType(DelegateIIWI)), DelegateIIWI)
                DebenuPDFLibraryNoEmbedFontListAdd = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLNoEmbedFontListAdd"), GetType(DelegateIIW)), DelegateIIW)
                DebenuPDFLibraryNoEmbedFontListCount = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLNoEmbedFontListCount"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryNoEmbedFontListGet = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLNoEmbedFontListGet"), GetType(DelegateWII)), DelegateWII)
                DebenuPDFLibraryNoEmbedFontListRemoveAll = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLNoEmbedFontListRemoveAll"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryNoEmbedFontListRemoveIndex = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLNoEmbedFontListRemoveIndex"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryNoEmbedFontListRemoveName = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLNoEmbedFontListRemoveName"), GetType(DelegateIIW)), DelegateIIW)
                DebenuPDFLibraryNormalizePage = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLNormalizePage"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryOpenOutline = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLOpenOutline"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryOptionalContentGroupCount = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLOptionalContentGroupCount"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryOutlineCount = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLOutlineCount"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryOutlineTitle = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLOutlineTitle"), GetType(DelegateWII)), DelegateWII)
                DebenuPDFLibraryPageCount = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLPageCount"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryPageHasFontResources = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLPageHasFontResources"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryPageHeight = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLPageHeight"), GetType(DelegateDI)), DelegateDI)
                DebenuPDFLibraryPageJavaScriptAction = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLPageJavaScriptAction"), GetType(DelegateIIWW)), DelegateIIWW)
                DebenuPDFLibraryPageRotation = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLPageRotation"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryPageWidth = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLPageWidth"), GetType(DelegateDI)), DelegateDI)
                DebenuPDFLibraryPrintDocument = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLPrintDocument"), GetType(DelegateIIWIII)), DelegateIIWIII)
                DebenuPDFLibraryPrintDocumentToFile = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLPrintDocumentToFile"), GetType(DelegateIIWIIIW)), DelegateIIWIIIW)
                DebenuPDFLibraryPrintOptions = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLPrintOptions"), GetType(DelegateIIIIW)), DelegateIIIIW)
                DebenuPDFLibraryPrintPages = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLPrintPages"), GetType(DelegateIIWWI)), DelegateIIWWI)
                DebenuPDFLibraryPrintPagesToFile = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLPrintPagesToFile"), GetType(DelegateIIWWIW)), DelegateIIWWIW)
                DebenuPDFLibraryReleaseBuffer = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLReleaseBuffer"), GetType(DelegateIIB)), DelegateIIB)
                DebenuPDFLibraryReleaseImage = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLReleaseImage"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryReleaseImageList = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLReleaseImageList"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryReleaseLibrary = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLReleaseLibrary"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryReleaseSignProcess = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLReleaseSignProcess"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryReleaseStringList = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLReleaseStringList"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryReleaseTextBlocks = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLReleaseTextBlocks"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryRemoveAppearanceStream = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLRemoveAppearanceStream"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryRemoveCustomInformation = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLRemoveCustomInformation"), GetType(DelegateIIW)), DelegateIIW)
                DebenuPDFLibraryRemoveDocument = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLRemoveDocument"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryRemoveEmbeddedFile = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLRemoveEmbeddedFile"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryRemoveFormFieldBackgroundColor = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLRemoveFormFieldBackgroundColor"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryRemoveFormFieldBorderColor = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLRemoveFormFieldBorderColor"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryRemoveFormFieldChoiceSub = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLRemoveFormFieldChoiceSub"), GetType(DelegateIIIW)), DelegateIIIW)
                DebenuPDFLibraryRemoveGlobalJavaScript = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLRemoveGlobalJavaScript"), GetType(DelegateIIW)), DelegateIIW)
                DebenuPDFLibraryRemoveOpenAction = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLRemoveOpenAction"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryRemoveOutline = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLRemoveOutline"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryRemovePageBox = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLRemovePageBox"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryRemoveSharedContentStreams = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLRemoveSharedContentStreams"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryRemoveStyle = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLRemoveStyle"), GetType(DelegateIIW)), DelegateIIW)
                DebenuPDFLibraryRemoveUsageRights = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLRemoveUsageRights"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryRemoveXFAEntries = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLRemoveXFAEntries"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryRenderAsMultipageTIFFToFile = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLRenderAsMultipageTIFFToFile"), GetType(DelegateIIDWIIW)), DelegateIIDWIIW)
                DebenuPDFLibraryRenderDocumentToFile = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLRenderDocumentToFile"), GetType(DelegateIIDIIIW)), DelegateIIDIIIW)
                DebenuPDFLibraryRenderPageToDC = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLRenderPageToDC"), GetType(DelegateIIDIC)), DelegateIIDIC)
                DebenuPDFLibraryRenderPageToFile = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLRenderPageToFile"), GetType(DelegateIIDIIW)), DelegateIIDIIW)
                DebenuPDFLibraryRenderPageToString = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLRenderPageToString"), GetType(DelegateBIDII)), DelegateBIDII)
                DebenuPDFLibraryReplaceFonts = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLReplaceFonts"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryReplaceImage = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLReplaceImage"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibraryReplaceTag = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLReplaceTag"), GetType(DelegateIIWW)), DelegateIIWW)
                DebenuPDFLibraryRequestPrinterStatus = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLRequestPrinterStatus"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryRetrieveCustomDataToFile = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLRetrieveCustomDataToFile"), GetType(DelegateIIWWI)), DelegateIIWWI)
                DebenuPDFLibraryRetrieveCustomDataToString = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLRetrieveCustomDataToString"), GetType(DelegateBISI)), DelegateBISI)
                DebenuPDFLibraryReverseImage = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLReverseImage"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryRotatePage = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLRotatePage"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibrarySaveFontToFile = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSaveFontToFile"), GetType(DelegateIIW)), DelegateIIW)
                DebenuPDFLibrarySaveImageListItemDataToFile = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSaveImageListItemDataToFile"), GetType(DelegateIIIIIW)), DelegateIIIIIW)
                DebenuPDFLibrarySaveImageToFile = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSaveImageToFile"), GetType(DelegateIIW)), DelegateIIW)
                DebenuPDFLibrarySaveImageToString = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSaveImageToString"), GetType(DelegateBI)), DelegateBI)
                DebenuPDFLibrarySaveState = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSaveState"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibrarySaveStyle = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSaveStyle"), GetType(DelegateIIW)), DelegateIIW)
                DebenuPDFLibrarySaveToFile = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSaveToFile"), GetType(DelegateIIW)), DelegateIIW)
                DebenuPDFLibrarySaveToString = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSaveToString"), GetType(DelegateBI)), DelegateBI)
                DebenuPDFLibrarySecurityInfo = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSecurityInfo"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibrarySelectContentStream = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSelectContentStream"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibrarySelectDocument = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSelectDocument"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibrarySelectFont = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSelectFont"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibrarySelectImage = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSelectImage"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibrarySelectPage = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSelectPage"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibrarySelectRenderer = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSelectRenderer"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibrarySelectedDocument = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSelectedDocument"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibrarySelectedFont = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSelectedFont"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibrarySelectedImage = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSelectedImage"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibrarySelectedPage = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSelectedPage"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibrarySetActionURL = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetActionURL"), GetType(DelegateIIIW)), DelegateIIIW)
                DebenuPDFLibrarySetAnnotBorderColor = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetAnnotBorderColor"), GetType(DelegateIIIDDD)), DelegateIIIDDD)
                DebenuPDFLibrarySetAnnotBorderStyle = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetAnnotBorderStyle"), GetType(DelegateIIIDIDD)), DelegateIIIDIDD)
                DebenuPDFLibrarySetAnnotContents = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetAnnotContents"), GetType(DelegateIIIW)), DelegateIIIW)
                DebenuPDFLibrarySetAnnotDblProperty = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetAnnotDblProperty"), GetType(DelegateIIIID)), DelegateIIIID)
                DebenuPDFLibrarySetAnnotIntProperty = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetAnnotIntProperty"), GetType(DelegateIIIII)), DelegateIIIII)
                DebenuPDFLibrarySetAnnotQuadPoints = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetAnnotQuadPoints"), GetType(DelegateIIIIDDDDDDDD)), DelegateIIIIDDDDDDDD)
                DebenuPDFLibrarySetAnnotRect = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetAnnotRect"), GetType(DelegateIIIDDDD)), DelegateIIIDDDD)
                DebenuPDFLibrarySetAnnotStrProperty = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetAnnotStrProperty"), GetType(DelegateIIIIW)), DelegateIIIIW)
                DebenuPDFLibrarySetAnsiMode = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetAnsiMode"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibrarySetBaseURL = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetBaseURL"), GetType(DelegateIIW)), DelegateIIW)
                DebenuPDFLibrarySetBlendMode = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetBlendMode"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibrarySetBreakString = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetBreakString"), GetType(DelegateIIW)), DelegateIIW)
                DebenuPDFLibrarySetCSDictEPSG = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetCSDictEPSG"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibrarySetCSDictType = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetCSDictType"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibrarySetCSDictWKT = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetCSDictWKT"), GetType(DelegateIIIW)), DelegateIIIW)
                DebenuPDFLibrarySetCairoFileName = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetCairoFileName"), GetType(DelegateIIW)), DelegateIIW)
                DebenuPDFLibrarySetCapturedPageOptional = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetCapturedPageOptional"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibrarySetCapturedPageTransparencyGroup = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetCapturedPageTransparencyGroup"), GetType(DelegateIIIIII)), DelegateIIIIII)
                DebenuPDFLibrarySetCatalogInformation = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetCatalogInformation"), GetType(DelegateIIWW)), DelegateIIWW)
                DebenuPDFLibrarySetCharWidth = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetCharWidth"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibrarySetClippingPath = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetClippingPath"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibrarySetClippingPathEvenOdd = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetClippingPathEvenOdd"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibrarySetCompatibility = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetCompatibility"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibrarySetContentStreamFromString = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetContentStreamFromString"), GetType(DelegateIIB)), DelegateIIB)
                DebenuPDFLibrarySetContentStreamOptional = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetContentStreamOptional"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibrarySetCropBox = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetCropBox"), GetType(DelegateIIDDDD)), DelegateIIDDDD)
                DebenuPDFLibrarySetCustomInformation = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetCustomInformation"), GetType(DelegateIIWW)), DelegateIIWW)
                DebenuPDFLibrarySetCustomLineDash = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetCustomLineDash"), GetType(DelegateIIWD)), DelegateIIWD)
                DebenuPDFLibrarySetDPLRFileName = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetDPLRFileName"), GetType(DelegateIIW)), DelegateIIW)
                DebenuPDFLibrarySetDestProperties = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetDestProperties"), GetType(DelegateIIIIIDDDD)), DelegateIIIIIDDDD)
                DebenuPDFLibrarySetDestValue = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetDestValue"), GetType(DelegateIIIID)), DelegateIIIID)
                DebenuPDFLibrarySetDocumentMetadata = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetDocumentMetadata"), GetType(DelegateIIW)), DelegateIIW)
                DebenuPDFLibrarySetEmbeddedFileStrProperty = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetEmbeddedFileStrProperty"), GetType(DelegateIIIIW)), DelegateIIIIW)
                DebenuPDFLibrarySetFillColor = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFillColor"), GetType(DelegateIIDDD)), DelegateIIDDD)
                DebenuPDFLibrarySetFillColorCMYK = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFillColorCMYK"), GetType(DelegateIIDDDD)), DelegateIIDDDD)
                DebenuPDFLibrarySetFillColorSep = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFillColorSep"), GetType(DelegateIIWD)), DelegateIIWD)
                DebenuPDFLibrarySetFillShader = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFillShader"), GetType(DelegateIIW)), DelegateIIW)
                DebenuPDFLibrarySetFillTilingPattern = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFillTilingPattern"), GetType(DelegateIIW)), DelegateIIW)
                DebenuPDFLibrarySetFindImagesMode = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFindImagesMode"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibrarySetFontEncoding = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFontEncoding"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibrarySetFontFlags = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFontFlags"), GetType(DelegateIIIIIIIIII)), DelegateIIIIIIIIII)
                DebenuPDFLibrarySetFormFieldAlignment = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFormFieldAlignment"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibrarySetFormFieldAnnotFlags = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFormFieldAnnotFlags"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibrarySetFormFieldBackgroundColor = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFormFieldBackgroundColor"), GetType(DelegateIIIDDD)), DelegateIIIDDD)
                DebenuPDFLibrarySetFormFieldBackgroundColorCMYK = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFormFieldBackgroundColorCMYK"), GetType(DelegateIIIDDDD)), DelegateIIIDDDD)
                DebenuPDFLibrarySetFormFieldBackgroundColorGray = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFormFieldBackgroundColorGray"), GetType(DelegateIIID)), DelegateIIID)
                DebenuPDFLibrarySetFormFieldBackgroundColorSep = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFormFieldBackgroundColorSep"), GetType(DelegateIIIWD)), DelegateIIIWD)
                DebenuPDFLibrarySetFormFieldBorderColor = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFormFieldBorderColor"), GetType(DelegateIIIDDD)), DelegateIIIDDD)
                DebenuPDFLibrarySetFormFieldBorderColorCMYK = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFormFieldBorderColorCMYK"), GetType(DelegateIIIDDDD)), DelegateIIIDDDD)
                DebenuPDFLibrarySetFormFieldBorderColorGray = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFormFieldBorderColorGray"), GetType(DelegateIIID)), DelegateIIID)
                DebenuPDFLibrarySetFormFieldBorderColorSep = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFormFieldBorderColorSep"), GetType(DelegateIIIWD)), DelegateIIIWD)
                DebenuPDFLibrarySetFormFieldBorderStyle = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFormFieldBorderStyle"), GetType(DelegateIIIDIDD)), DelegateIIIDIDD)
                DebenuPDFLibrarySetFormFieldBounds = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFormFieldBounds"), GetType(DelegateIIIDDDD)), DelegateIIIDDDD)
                DebenuPDFLibrarySetFormFieldCalcOrder = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFormFieldCalcOrder"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibrarySetFormFieldCaption = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFormFieldCaption"), GetType(DelegateIIIW)), DelegateIIIW)
                DebenuPDFLibrarySetFormFieldCheckStyle = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFormFieldCheckStyle"), GetType(DelegateIIIII)), DelegateIIIII)
                DebenuPDFLibrarySetFormFieldChildTitle = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFormFieldChildTitle"), GetType(DelegateIIIW)), DelegateIIIW)
                DebenuPDFLibrarySetFormFieldChoiceSub = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFormFieldChoiceSub"), GetType(DelegateIIIIWW)), DelegateIIIIWW)
                DebenuPDFLibrarySetFormFieldChoiceType = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFormFieldChoiceType"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibrarySetFormFieldColor = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFormFieldColor"), GetType(DelegateIIIDDD)), DelegateIIIDDD)
                DebenuPDFLibrarySetFormFieldColorCMYK = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFormFieldColorCMYK"), GetType(DelegateIIIDDDD)), DelegateIIIDDDD)
                DebenuPDFLibrarySetFormFieldColorSep = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFormFieldColorSep"), GetType(DelegateIIIWD)), DelegateIIIWD)
                DebenuPDFLibrarySetFormFieldComb = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFormFieldComb"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibrarySetFormFieldDefaultValue = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFormFieldDefaultValue"), GetType(DelegateIIIW)), DelegateIIIW)
                DebenuPDFLibrarySetFormFieldDescription = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFormFieldDescription"), GetType(DelegateIIIW)), DelegateIIIW)
                DebenuPDFLibrarySetFormFieldFlags = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFormFieldFlags"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibrarySetFormFieldFont = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFormFieldFont"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibrarySetFormFieldHighlightMode = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFormFieldHighlightMode"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibrarySetFormFieldIcon = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFormFieldIcon"), GetType(DelegateIIIII)), DelegateIIIII)
                DebenuPDFLibrarySetFormFieldIconStyle = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFormFieldIconStyle"), GetType(DelegateIIIIIIII)), DelegateIIIIIIII)
                DebenuPDFLibrarySetFormFieldMaxLen = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFormFieldMaxLen"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibrarySetFormFieldNoExport = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFormFieldNoExport"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibrarySetFormFieldOptional = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFormFieldOptional"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibrarySetFormFieldPage = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFormFieldPage"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibrarySetFormFieldPrintable = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFormFieldPrintable"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibrarySetFormFieldReadOnly = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFormFieldReadOnly"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibrarySetFormFieldRequired = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFormFieldRequired"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibrarySetFormFieldResetAction = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFormFieldResetAction"), GetType(DelegateIIIW)), DelegateIIIW)
                DebenuPDFLibrarySetFormFieldRichTextString = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFormFieldRichTextString"), GetType(DelegateIIIWW)), DelegateIIIWW)
                DebenuPDFLibrarySetFormFieldRotation = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFormFieldRotation"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibrarySetFormFieldSignatureImage = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFormFieldSignatureImage"), GetType(DelegateIIIII)), DelegateIIIII)
                DebenuPDFLibrarySetFormFieldStandardFont = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFormFieldStandardFont"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibrarySetFormFieldSubmitAction = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFormFieldSubmitAction"), GetType(DelegateIIIWW)), DelegateIIIWW)
                DebenuPDFLibrarySetFormFieldSubmitActionEx = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFormFieldSubmitActionEx"), GetType(DelegateIIIWWI)), DelegateIIIWWI)
                DebenuPDFLibrarySetFormFieldTabOrder = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFormFieldTabOrder"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibrarySetFormFieldTextFlags = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFormFieldTextFlags"), GetType(DelegateIIIIIIII)), DelegateIIIIIIII)
                DebenuPDFLibrarySetFormFieldTextSize = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFormFieldTextSize"), GetType(DelegateIIID)), DelegateIIID)
                DebenuPDFLibrarySetFormFieldTitle = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFormFieldTitle"), GetType(DelegateIIIW)), DelegateIIIW)
                DebenuPDFLibrarySetFormFieldValue = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFormFieldValue"), GetType(DelegateIIIW)), DelegateIIIW)
                DebenuPDFLibrarySetFormFieldValueByTitle = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFormFieldValueByTitle"), GetType(DelegateIIWW)), DelegateIIWW)
                DebenuPDFLibrarySetFormFieldVisible = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetFormFieldVisible"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibrarySetGDIPlusFileName = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetGDIPlusFileName"), GetType(DelegateIIW)), DelegateIIW)
                DebenuPDFLibrarySetGDIPlusOptions = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetGDIPlusOptions"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibrarySetHTMLBoldFont = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetHTMLBoldFont"), GetType(DelegateIIWI)), DelegateIIWI)
                DebenuPDFLibrarySetHTMLBoldItalicFont = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetHTMLBoldItalicFont"), GetType(DelegateIIWI)), DelegateIIWI)
                DebenuPDFLibrarySetHTMLItalicFont = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetHTMLItalicFont"), GetType(DelegateIIWI)), DelegateIIWI)
                DebenuPDFLibrarySetHTMLNormalFont = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetHTMLNormalFont"), GetType(DelegateIIWI)), DelegateIIWI)
                DebenuPDFLibrarySetHeaderCommentsFromString = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetHeaderCommentsFromString"), GetType(DelegateIIB)), DelegateIIB)
                DebenuPDFLibrarySetImageAsMask = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetImageAsMask"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibrarySetImageMask = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetImageMask"), GetType(DelegateIIDDDDDD)), DelegateIIDDDDDD)
                DebenuPDFLibrarySetImageMaskCMYK = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetImageMaskCMYK"), GetType(DelegateIIDDDDDDDD)), DelegateIIDDDDDDDD)
                DebenuPDFLibrarySetImageMaskFromImage = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetImageMaskFromImage"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibrarySetImageOptional = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetImageOptional"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibrarySetImageResolution = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetImageResolution"), GetType(DelegateIIIII)), DelegateIIIII)
                DebenuPDFLibrarySetInformation = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetInformation"), GetType(DelegateIIIW)), DelegateIIIW)
                DebenuPDFLibrarySetJPEGQuality = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetJPEGQuality"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibrarySetJavaScriptMode = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetJavaScriptMode"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibrarySetKerning = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetKerning"), GetType(DelegateIIWI)), DelegateIIWI)
                DebenuPDFLibrarySetLineCap = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetLineCap"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibrarySetLineColor = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetLineColor"), GetType(DelegateIIDDD)), DelegateIIDDD)
                DebenuPDFLibrarySetLineColorCMYK = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetLineColorCMYK"), GetType(DelegateIIDDDD)), DelegateIIDDDD)
                DebenuPDFLibrarySetLineColorSep = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetLineColorSep"), GetType(DelegateIIWD)), DelegateIIWD)
                DebenuPDFLibrarySetLineDash = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetLineDash"), GetType(DelegateIIDD)), DelegateIIDD)
                DebenuPDFLibrarySetLineDashEx = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetLineDashEx"), GetType(DelegateIIW)), DelegateIIW)
                DebenuPDFLibrarySetLineJoin = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetLineJoin"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibrarySetLineShader = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetLineShader"), GetType(DelegateIIW)), DelegateIIW)
                DebenuPDFLibrarySetLineWidth = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetLineWidth"), GetType(DelegateIID)), DelegateIID)
                DebenuPDFLibrarySetMarkupAnnotStyle = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetMarkupAnnotStyle"), GetType(DelegateIIIDDDD)), DelegateIIIDDDD)
                DebenuPDFLibrarySetMeasureDictBoundsCount = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetMeasureDictBoundsCount"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibrarySetMeasureDictBoundsItem = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetMeasureDictBoundsItem"), GetType(DelegateIIIID)), DelegateIIIID)
                DebenuPDFLibrarySetMeasureDictCoordinateSystem = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetMeasureDictCoordinateSystem"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibrarySetMeasureDictGPTSCount = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetMeasureDictGPTSCount"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibrarySetMeasureDictGPTSItem = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetMeasureDictGPTSItem"), GetType(DelegateIIIID)), DelegateIIIID)
                DebenuPDFLibrarySetMeasureDictLPTSCount = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetMeasureDictLPTSCount"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibrarySetMeasureDictLPTSItem = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetMeasureDictLPTSItem"), GetType(DelegateIIIID)), DelegateIIIID)
                DebenuPDFLibrarySetMeasureDictPDU = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetMeasureDictPDU"), GetType(DelegateIIIIII)), DelegateIIIIII)
                DebenuPDFLibrarySetMeasurementUnits = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetMeasurementUnits"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibrarySetNeedAppearances = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetNeedAppearances"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibrarySetObjectFromString = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetObjectFromString"), GetType(DelegateIIIB)), DelegateIIIB)
                DebenuPDFLibrarySetOpenActionDestination = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetOpenActionDestination"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibrarySetOpenActionDestinationFull = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetOpenActionDestinationFull"), GetType(DelegateIIIIIDDDD)), DelegateIIIIIDDDD)
                DebenuPDFLibrarySetOpenActionJavaScript = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetOpenActionJavaScript"), GetType(DelegateIIW)), DelegateIIW)
                DebenuPDFLibrarySetOpenActionMenu = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetOpenActionMenu"), GetType(DelegateIIW)), DelegateIIW)
                DebenuPDFLibrarySetOptionalContentConfigLocked = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetOptionalContentConfigLocked"), GetType(DelegateIIIII)), DelegateIIIII)
                DebenuPDFLibrarySetOptionalContentConfigState = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetOptionalContentConfigState"), GetType(DelegateIIIII)), DelegateIIIII)
                DebenuPDFLibrarySetOptionalContentGroupName = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetOptionalContentGroupName"), GetType(DelegateIIIW)), DelegateIIIW)
                DebenuPDFLibrarySetOptionalContentGroupPrintable = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetOptionalContentGroupPrintable"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibrarySetOptionalContentGroupVisible = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetOptionalContentGroupVisible"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibrarySetOrigin = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetOrigin"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibrarySetOutlineColor = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetOutlineColor"), GetType(DelegateIIIDDD)), DelegateIIIDDD)
                DebenuPDFLibrarySetOutlineDestination = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetOutlineDestination"), GetType(DelegateIIIID)), DelegateIIIID)
                DebenuPDFLibrarySetOutlineDestinationFull = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetOutlineDestinationFull"), GetType(DelegateIIIIIIDDDD)), DelegateIIIIIIDDDD)
                DebenuPDFLibrarySetOutlineDestinationZoom = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetOutlineDestinationZoom"), GetType(DelegateIIIIDI)), DelegateIIIIDI)
                DebenuPDFLibrarySetOutlineJavaScript = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetOutlineJavaScript"), GetType(DelegateIIIW)), DelegateIIIW)
                DebenuPDFLibrarySetOutlineNamedDestination = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetOutlineNamedDestination"), GetType(DelegateIIIW)), DelegateIIIW)
                DebenuPDFLibrarySetOutlineOpenFile = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetOutlineOpenFile"), GetType(DelegateIIIW)), DelegateIIIW)
                DebenuPDFLibrarySetOutlineRemoteDestination = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetOutlineRemoteDestination"), GetType(DelegateIIIWIIIDDDDI)), DelegateIIIWIIIDDDDI)
                DebenuPDFLibrarySetOutlineStyle = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetOutlineStyle"), GetType(DelegateIIIII)), DelegateIIIII)
                DebenuPDFLibrarySetOutlineTitle = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetOutlineTitle"), GetType(DelegateIIIW)), DelegateIIIW)
                DebenuPDFLibrarySetOutlineWebLink = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetOutlineWebLink"), GetType(DelegateIIIW)), DelegateIIIW)
                DebenuPDFLibrarySetOverprint = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetOverprint"), GetType(DelegateIIIII)), DelegateIIIII)
                DebenuPDFLibrarySetPDFAMode = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetPDFAMode"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibrarySetPNGTransparencyColor = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetPNGTransparencyColor"), GetType(DelegateIIIII)), DelegateIIIII)
                DebenuPDFLibrarySetPageActionMenu = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetPageActionMenu"), GetType(DelegateIIW)), DelegateIIW)
                DebenuPDFLibrarySetPageBox = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetPageBox"), GetType(DelegateIIIDDDD)), DelegateIIIDDDD)
                DebenuPDFLibrarySetPageContentFromString = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetPageContentFromString"), GetType(DelegateIIB)), DelegateIIB)
                DebenuPDFLibrarySetPageDimensions = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetPageDimensions"), GetType(DelegateIIDD)), DelegateIIDD)
                DebenuPDFLibrarySetPageLayout = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetPageLayout"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibrarySetPageMode = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetPageMode"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibrarySetPageSize = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetPageSize"), GetType(DelegateIIW)), DelegateIIW)
                DebenuPDFLibrarySetPageThumbnail = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetPageThumbnail"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibrarySetPageTransparencyGroup = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetPageTransparencyGroup"), GetType(DelegateIIIII)), DelegateIIIII)
                DebenuPDFLibrarySetPrecision = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetPrecision"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibrarySetPrinterDevModeFromString = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetPrinterDevModeFromString"), GetType(DelegateIIB)), DelegateIIB)
                DebenuPDFLibrarySetRenderCropType = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetRenderCropType"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibrarySetRenderDCErasePage = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetRenderDCErasePage"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibrarySetRenderDCOffset = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetRenderDCOffset"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibrarySetRenderOptions = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetRenderOptions"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibrarySetRenderScale = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetRenderScale"), GetType(DelegateIID)), DelegateIID)
                DebenuPDFLibrarySetScale = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetScale"), GetType(DelegateIID)), DelegateIID)
                DebenuPDFLibrarySetSignProcessField = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetSignProcessField"), GetType(DelegateIIIW)), DelegateIIIW)
                DebenuPDFLibrarySetSignProcessFieldBounds = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetSignProcessFieldBounds"), GetType(DelegateIIIDDDD)), DelegateIIIDDDD)
                DebenuPDFLibrarySetSignProcessFieldImageFromFile = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetSignProcessFieldImageFromFile"), GetType(DelegateIIIWI)), DelegateIIIWI)
                DebenuPDFLibrarySetSignProcessFieldPage = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetSignProcessFieldPage"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibrarySetSignProcessInfo = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetSignProcessInfo"), GetType(DelegateIIIWWW)), DelegateIIIWWW)
                DebenuPDFLibrarySetSignProcessKeyset = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetSignProcessKeyset"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibrarySetSignProcessPFXFromFile = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetSignProcessPFXFromFile"), GetType(DelegateIIIWW)), DelegateIIIWW)
                DebenuPDFLibrarySetSignProcessPassthrough = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetSignProcessPassthrough"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibrarySetSignProcessSubFilter = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetSignProcessSubFilter"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibrarySetTabOrderMode = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetTabOrderMode"), GetType(DelegateIIW)), DelegateIIW)
                DebenuPDFLibrarySetTableBorderColor = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetTableBorderColor"), GetType(DelegateIIIIDDD)), DelegateIIIIDDD)
                DebenuPDFLibrarySetTableBorderColorCMYK = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetTableBorderColorCMYK"), GetType(DelegateIIIIDDDD)), DelegateIIIIDDDD)
                DebenuPDFLibrarySetTableBorderWidth = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetTableBorderWidth"), GetType(DelegateIIIID)), DelegateIIIID)
                DebenuPDFLibrarySetTableCellAlignment = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetTableCellAlignment"), GetType(DelegateIIIIIIII)), DelegateIIIIIIII)
                DebenuPDFLibrarySetTableCellBackgroundColor = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetTableCellBackgroundColor"), GetType(DelegateIIIIIIIDDD)), DelegateIIIIIIIDDD)
                DebenuPDFLibrarySetTableCellBackgroundColorCMYK = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetTableCellBackgroundColorCMYK"), GetType(DelegateIIIIIIIDDDD)), DelegateIIIIIIIDDDD)
                DebenuPDFLibrarySetTableCellBorderColor = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetTableCellBorderColor"), GetType(DelegateIIIIIIIIDDD)), DelegateIIIIIIIIDDD)
                DebenuPDFLibrarySetTableCellBorderColorCMYK = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetTableCellBorderColorCMYK"), GetType(DelegateIIIIIIIIDDDD)), DelegateIIIIIIIIDDDD)
                DebenuPDFLibrarySetTableCellBorderWidth = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetTableCellBorderWidth"), GetType(DelegateIIIIIIIID)), DelegateIIIIIIIID)
                DebenuPDFLibrarySetTableCellContent = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetTableCellContent"), GetType(DelegateIIIIIW)), DelegateIIIIIW)
                DebenuPDFLibrarySetTableCellPadding = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetTableCellPadding"), GetType(DelegateIIIIIIIID)), DelegateIIIIIIIID)
                DebenuPDFLibrarySetTableCellTextColor = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetTableCellTextColor"), GetType(DelegateIIIIIIIDDD)), DelegateIIIIIIIDDD)
                DebenuPDFLibrarySetTableCellTextColorCMYK = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetTableCellTextColorCMYK"), GetType(DelegateIIIIIIIDDDD)), DelegateIIIIIIIDDDD)
                DebenuPDFLibrarySetTableCellTextSize = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetTableCellTextSize"), GetType(DelegateIIIIIIID)), DelegateIIIIIIID)
                DebenuPDFLibrarySetTableColumnWidth = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetTableColumnWidth"), GetType(DelegateIIIIID)), DelegateIIIIID)
                DebenuPDFLibrarySetTableRowHeight = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetTableRowHeight"), GetType(DelegateIIIIID)), DelegateIIIIID)
                DebenuPDFLibrarySetTableThinBorders = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetTableThinBorders"), GetType(DelegateIIIIDDD)), DelegateIIIIDDD)
                DebenuPDFLibrarySetTableThinBordersCMYK = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetTableThinBordersCMYK"), GetType(DelegateIIIIDDDD)), DelegateIIIIDDDD)
                DebenuPDFLibrarySetTempFile = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetTempFile"), GetType(DelegateIIW)), DelegateIIW)
                DebenuPDFLibrarySetTempPath = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetTempPath"), GetType(DelegateIIW)), DelegateIIW)
                DebenuPDFLibrarySetTextAlign = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetTextAlign"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibrarySetTextCharSpacing = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetTextCharSpacing"), GetType(DelegateIID)), DelegateIID)
                DebenuPDFLibrarySetTextColor = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetTextColor"), GetType(DelegateIIDDD)), DelegateIIDDD)
                DebenuPDFLibrarySetTextColorCMYK = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetTextColorCMYK"), GetType(DelegateIIDDDD)), DelegateIIDDDD)
                DebenuPDFLibrarySetTextColorSep = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetTextColorSep"), GetType(DelegateIIWD)), DelegateIIWD)
                DebenuPDFLibrarySetTextExtractionArea = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetTextExtractionArea"), GetType(DelegateIIDDDD)), DelegateIIDDDD)
                DebenuPDFLibrarySetTextExtractionOptions = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetTextExtractionOptions"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibrarySetTextExtractionScaling = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetTextExtractionScaling"), GetType(DelegateIIIDD)), DelegateIIIDD)
                DebenuPDFLibrarySetTextExtractionWordGap = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetTextExtractionWordGap"), GetType(DelegateIID)), DelegateIID)
                DebenuPDFLibrarySetTextHighlight = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetTextHighlight"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibrarySetTextHighlightColor = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetTextHighlightColor"), GetType(DelegateIIDDD)), DelegateIIDDD)
                DebenuPDFLibrarySetTextHighlightColorCMYK = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetTextHighlightColorCMYK"), GetType(DelegateIIDDDD)), DelegateIIDDDD)
                DebenuPDFLibrarySetTextHighlightColorSep = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetTextHighlightColorSep"), GetType(DelegateIIWD)), DelegateIIWD)
                DebenuPDFLibrarySetTextMode = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetTextMode"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibrarySetTextRise = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetTextRise"), GetType(DelegateIID)), DelegateIID)
                DebenuPDFLibrarySetTextScaling = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetTextScaling"), GetType(DelegateIID)), DelegateIID)
                DebenuPDFLibrarySetTextShader = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetTextShader"), GetType(DelegateIIW)), DelegateIIW)
                DebenuPDFLibrarySetTextSize = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetTextSize"), GetType(DelegateIID)), DelegateIID)
                DebenuPDFLibrarySetTextSpacing = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetTextSpacing"), GetType(DelegateIID)), DelegateIID)
                DebenuPDFLibrarySetTextUnderline = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetTextUnderline"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibrarySetTextUnderlineColor = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetTextUnderlineColor"), GetType(DelegateIIDDD)), DelegateIIDDD)
                DebenuPDFLibrarySetTextUnderlineColorCMYK = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetTextUnderlineColorCMYK"), GetType(DelegateIIDDDD)), DelegateIIDDDD)
                DebenuPDFLibrarySetTextUnderlineColorSep = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetTextUnderlineColorSep"), GetType(DelegateIIWD)), DelegateIIWD)
                DebenuPDFLibrarySetTextUnderlineCustomDash = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetTextUnderlineCustomDash"), GetType(DelegateIIWD)), DelegateIIWD)
                DebenuPDFLibrarySetTextUnderlineDash = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetTextUnderlineDash"), GetType(DelegateIIDD)), DelegateIIDD)
                DebenuPDFLibrarySetTextUnderlineDistance = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetTextUnderlineDistance"), GetType(DelegateIID)), DelegateIID)
                DebenuPDFLibrarySetTextUnderlineWidth = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetTextUnderlineWidth"), GetType(DelegateIID)), DelegateIID)
                DebenuPDFLibrarySetTextWordSpacing = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetTextWordSpacing"), GetType(DelegateIID)), DelegateIID)
                DebenuPDFLibrarySetTransparency = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetTransparency"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibrarySetViewerPreferences = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetViewerPreferences"), GetType(DelegateIIII)), DelegateIIII)
                DebenuPDFLibrarySetXFAFormFieldAccess = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetXFAFormFieldAccess"), GetType(DelegateIIWI)), DelegateIIWI)
                DebenuPDFLibrarySetXFAFormFieldBorderColor = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetXFAFormFieldBorderColor"), GetType(DelegateIIWDDD)), DelegateIIWDDD)
                DebenuPDFLibrarySetXFAFormFieldBorderPresence = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetXFAFormFieldBorderPresence"), GetType(DelegateIIWI)), DelegateIIWI)
                DebenuPDFLibrarySetXFAFormFieldBorderWidth = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetXFAFormFieldBorderWidth"), GetType(DelegateIIWD)), DelegateIIWD)
                DebenuPDFLibrarySetXFAFormFieldValue = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetXFAFormFieldValue"), GetType(DelegateIIWW)), DelegateIIWW)
                DebenuPDFLibrarySetXFAFromString = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetXFAFromString"), GetType(DelegateIIBI)), DelegateIIBI)
                DebenuPDFLibrarySetupCustomPrinter = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSetupCustomPrinter"), GetType(DelegateIIWII)), DelegateIIWII)
                DebenuPDFLibrarySignFile = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSignFile"), GetType(DelegateIIWWWWWWWWW)), DelegateIIWWWWWWWWW)
                DebenuPDFLibrarySplitPageText = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLSplitPageText"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryStartPath = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLStartPath"), GetType(DelegateIIDD)), DelegateIIDD)
                DebenuPDFLibraryStoreCustomDataFromFile = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLStoreCustomDataFromFile"), GetType(DelegateIIWWII)), DelegateIIWWII)
                DebenuPDFLibraryStoreCustomDataFromString = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLStoreCustomDataFromString"), GetType(DelegateIISBII)), DelegateIISBII)
                DebenuPDFLibraryStringResultLength = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLStringResultLength"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryTestTempPath = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLTestTempPath"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryTransformFile = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLTransformFile"), GetType(DelegateIIWWWII)), DelegateIIWWWII)
                DebenuPDFLibraryUnlockKey = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLUnlockKey"), GetType(DelegateIIW)), DelegateIIW)
                DebenuPDFLibraryUnlocked = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLUnlocked"), GetType(DelegateII)), DelegateII)
                DebenuPDFLibraryUpdateAndFlattenFormField = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLUpdateAndFlattenFormField"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryUpdateAppearanceStream = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLUpdateAppearanceStream"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryUpdateTrueTypeSubsettedFont = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLUpdateTrueTypeSubsettedFont"), GetType(DelegateIIW)), DelegateIIW)
                DebenuPDFLibraryUseKerning = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLUseKerning"), GetType(DelegateIII)), DelegateIII)
                DebenuPDFLibraryUseUnsafeContentStreams = DirectCast(Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllHandle, "DPLUseUnsafeContentStreams"), GetType(DelegateIII)), DelegateIII)
            End If
        End Sub

        Protected Overrides Sub Finalize()
            Try
                Release()
            Finally
                MyBase.Finalize()
            End Try
        End Sub

        Public Sub Release()
            If (dllHandle <> IntPtr.Zero) Then
                For Each instanceID As Integer In shutDownList
                    DebenuPDFLibraryReleaseLibrary(instanceID)
                Next
                FreeLibrary(dllHandle)
                dllHandle = IntPtr.Zero
            End If
        End Sub

        <DllImport("kernel32.dll", CharSet:=CharSet.Unicode, EntryPoint:="LoadLibraryW", SetLastError:=True)> _
        Public Shared Function LoadLibrary(ByVal dllName As String) As IntPtr
        End Function

        <DllImport("kernel32.dll", CharSet:=CharSet.Unicode, EntryPoint:="FreeLibrary", SetLastError:=True)> _
        Public Shared Function FreeLibrary(ByVal hModule As IntPtr) As Integer
        End Function

        <DllImport("kernel32.dll", CharSet:=CharSet.Ansi, EntryPoint:="GetProcAddress", SetLastError:=True)> _
        Public Shared Function GetProcAddress(ByVal hModule As IntPtr, ByVal procname As String) As IntPtr
        End Function
    End Class

    Public Class PDFLibrary
        Private dll As DLL = Nothing
        Private instanceID As Integer = 0

        Private Function SR(data As IntPtr) As String
            Dim size As Integer = dll.DebenuPDFLibraryStringResultLength(instanceID)
            Dim result As Byte() = New Byte(size * 2 - 1) {}
            Marshal.Copy(data, result, 0, size * 2)
            Return Encoding.Unicode.GetString(result)
        End Function

        Private Function USR(data As IntPtr) As String
            Dim size As Integer = dll.DebenuPDFLibraryStringResultLength(instanceID)
            Dim result As Byte() = New Byte(size - 1) {}
            Marshal.Copy(data, result, 0, size)
            Return Encoding.UTF8.GetString(result)
        End Function

        Public Sub New(ByVal dllFileName As String)
            dll = New DLL(dllFileName)
            If Not (dll.dllHandle = IntPtr.Zero) Then
                instanceID = dll.DebenuPDFLibraryCreateLibrary()
                dll.RegisterForShutdown(instanceID)
            Else
                dll = Nothing
            End If
        End Sub

        Public Function LibraryLoaded() As Boolean
            Return Not (dll Is Nothing)
        End Function

        Public Function AddArcToPath(ByVal CenterX As Double, ByVal CenterY As Double, _
            ByVal TotalAngle As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryAddArcToPath(instanceID, CenterX, CenterY, TotalAngle)
            End If
        End Function

        Public Function AddBoxToPath(ByVal Left As Double, ByVal Top As Double, _
            ByVal Width As Double, ByVal Height As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryAddBoxToPath(instanceID, Left, Top, Width, Height)
            End If
        End Function

        Public Function AddCJKFont(ByVal CJKFontID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryAddCJKFont(instanceID, CJKFontID)
            End If
        End Function

        Public Function AddCurveToPath(ByVal CtAX As Double, ByVal CtAY As Double, _
            ByVal CtBX As Double, ByVal CtBY As Double, ByVal EndX As Double, ByVal EndY As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryAddCurveToPath(instanceID, CtAX, CtAY, CtBX, CtBY, EndX, _
                    EndY)
            End If
        End Function

        Public Function AddEmbeddedFile(ByVal FileName As String, ByVal MIMEType As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryAddEmbeddedFile(instanceID, FileName, MIMEType)
            End If
        End Function

        Public Function AddFileAttachment(ByVal Title As String, ByVal EmbeddedFileID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryAddFileAttachment(instanceID, Title, EmbeddedFileID)
            End If
        End Function

        Public Function AddFormFieldChoiceSub(ByVal Index As Integer, ByVal SubName As String, _
            ByVal DisplayName As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryAddFormFieldChoiceSub(instanceID, Index, SubName, _
                    DisplayName)
            End If
        End Function

        Public Function AddFormFieldSub(ByVal Index As Integer, ByVal SubName As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryAddFormFieldSub(instanceID, Index, SubName)
            End If
        End Function

        Public Function AddFormFont(ByVal FontID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryAddFormFont(instanceID, FontID)
            End If
        End Function

        Public Function AddFreeTextAnnotation(ByVal Left As Double, ByVal Top As Double, _
            ByVal Width As Double, ByVal Height As Double, ByVal Text As String, _
            ByVal Angle As Integer, ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryAddFreeTextAnnotation(instanceID, Left, Top, Width, _
                    Height, Text, Angle, Options)
            End If
        End Function

        Public Function AddGlobalJavaScript(ByVal PackageName As String, ByVal JavaScript As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryAddGlobalJavaScript(instanceID, PackageName, JavaScript)
            End If
        End Function

        Public Function AddImageFromFile(ByVal FileName As String, ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryAddImageFromFile(instanceID, FileName, Options)
            End If
        End Function

        Public Function AddImageFromFileOffset(ByVal FileName As String, ByVal Offset As Integer, _
            ByVal DataLength As Integer, ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryAddImageFromFileOffset(instanceID, FileName, Offset, _
                    DataLength, Options)
            End If
        End Function

        Public Function AddImageFromString(ByVal Source As Byte(), ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Dim gch As GCHandle = GCHandle.Alloc(Source, GCHandleType.Pinned)
                Dim bufferID As IntPtr = dll.DebenuPDFLibraryCreateBuffer(instanceID, Source.Length)
                dll.DebenuPDFLibraryAddToBuffer(instanceID, bufferID, gch.AddrOfPinnedObject(), Source.Length)
                Dim result As Integer = dll.DebenuPDFLibraryAddImageFromString(instanceID, bufferID, _
                    Options)
                dll.DebenuPDFLibraryReleaseBuffer(instanceID, bufferID)
                gch.Free()
                Return result
            End If
        End Function

        Public Function AddLGIDictToPage(ByVal DictContent As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryAddLGIDictToPage(instanceID, DictContent)
            End If
        End Function

        Public Function AddLineToPath(ByVal EndX As Double, ByVal EndY As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryAddLineToPath(instanceID, EndX, EndY)
            End If
        End Function

        Public Function AddLinkToDestination(ByVal Left As Double, ByVal Top As Double, _
            ByVal Width As Double, ByVal Height As Double, ByVal DestID As Integer, _
            ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryAddLinkToDestination(instanceID, Left, Top, Width, Height, _
                    DestID, Options)
            End If
        End Function

        Public Function AddLinkToEmbeddedFile(ByVal Left As Double, ByVal Top As Double, _
            ByVal Width As Double, ByVal Height As Double, ByVal EmbeddedFileID As Integer, _
            ByVal Title As String, ByVal Contents As String, ByVal IconType As Integer, _
            ByVal Transpareny As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryAddLinkToEmbeddedFile(instanceID, Left, Top, Width, _
                    Height, EmbeddedFileID, Title, Contents, IconType, Transpareny)
            End If
        End Function

        Public Function AddLinkToFile(ByVal Left As Double, ByVal Top As Double, _
            ByVal Width As Double, ByVal Height As Double, ByVal FileName As String, _
            ByVal Page As Integer, ByVal Position As Double, ByVal NewWindow As Integer, _
            ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryAddLinkToFile(instanceID, Left, Top, Width, Height, _
                    FileName, Page, Position, NewWindow, Options)
            End If
        End Function

        Public Function AddLinkToFileDest(ByVal Left As Double, ByVal Top As Double, _
            ByVal Width As Double, ByVal Height As Double, ByVal FileName As String, _
            ByVal NamedDest As String, ByVal Position As Double, ByVal NewWindow As Integer, _
            ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryAddLinkToFileDest(instanceID, Left, Top, Width, Height, _
                    FileName, NamedDest, Position, NewWindow, Options)
            End If
        End Function

        Public Function AddLinkToFileEx(ByVal Left As Double, ByVal Top As Double, _
            ByVal Width As Double, ByVal Height As Double, ByVal FileName As String, _
            ByVal DestPage As Integer, ByVal NewWindow As Integer, ByVal Options As Integer, _
            ByVal Zoom As Integer, ByVal DestType As Integer, ByVal DestLeft As Double, _
            ByVal DestTop As Double, ByVal DestRight As Double, ByVal DestBottom As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryAddLinkToFileEx(instanceID, Left, Top, Width, Height, _
                    FileName, DestPage, NewWindow, Options, Zoom, DestType, DestLeft, DestTop, _
                    DestRight, DestBottom)
            End If
        End Function

        Public Function AddLinkToJavaScript(ByVal Left As Double, ByVal Top As Double, _
            ByVal Width As Double, ByVal Height As Double, ByVal JavaScript As String, _
            ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryAddLinkToJavaScript(instanceID, Left, Top, Width, Height, _
                    JavaScript, Options)
            End If
        End Function

        Public Function AddLinkToLocalFile(ByVal Left As Double, ByVal Top As Double, _
            ByVal Width As Double, ByVal Height As Double, ByVal FileName As String, _
            ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryAddLinkToLocalFile(instanceID, Left, Top, Width, Height, _
                    FileName, Options)
            End If
        End Function

        Public Function AddLinkToPage(ByVal Left As Double, ByVal Top As Double, _
            ByVal Width As Double, ByVal Height As Double, ByVal Page As Integer, _
            ByVal Position As Double, ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryAddLinkToPage(instanceID, Left, Top, Width, Height, Page, _
                    Position, Options)
            End If
        End Function

        Public Function AddLinkToWeb(ByVal Left As Double, ByVal Top As Double, _
            ByVal Width As Double, ByVal Height As Double, ByVal Link As String, _
            ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryAddLinkToWeb(instanceID, Left, Top, Width, Height, Link, _
                    Options)
            End If
        End Function

        Public Function AddNoteAnnotation(ByVal Left As Double, ByVal Top As Double, _
            ByVal AnnotType As Integer, ByVal PopupLeft As Double, ByVal PopupTop As Double, _
            ByVal PopupWidth As Double, ByVal PopupHeight As Double, ByVal Title As String, _
            ByVal Contents As String, ByVal Red As Double, ByVal Green As Double, _
            ByVal Blue As Double, ByVal Open As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryAddNoteAnnotation(instanceID, Left, Top, AnnotType, _
                    PopupLeft, PopupTop, PopupWidth, PopupHeight, Title, Contents, Red, Green, Blue, _
                    Open)
            End If
        End Function

        Public Function AddOpenTypeFontFromFile(ByVal FileName As String, ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryAddOpenTypeFontFromFile(instanceID, FileName, Options)
            End If
        End Function

        Public Function AddPageLabels(ByVal Start As Integer, ByVal Style As Integer, _
            ByVal Offset As Integer, ByVal Prefix As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryAddPageLabels(instanceID, Start, Style, Offset, Prefix)
            End If
        End Function

        Public Function AddSVGAnnotationFromFile(ByVal Left As Double, ByVal Top As Double, _
            ByVal Width As Double, ByVal Height As Double, ByVal FileName As String, _
            ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryAddSVGAnnotationFromFile(instanceID, Left, Top, Width, _
                    Height, FileName, Options)
            End If
        End Function

        Public Function AddSWFAnnotationFromFile(ByVal Left As Double, ByVal Top As Double, _
            ByVal Width As Double, ByVal Height As Double, ByVal FileName As String, _
            ByVal Title As String, ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryAddSWFAnnotationFromFile(instanceID, Left, Top, Width, _
                    Height, FileName, Title, Options)
            End If
        End Function

        Public Function AddSeparationColor(ByVal ColorName As String, ByVal C As Double, _
            ByVal M As Double, ByVal Y As Double, ByVal K As Double, ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryAddSeparationColor(instanceID, ColorName, C, M, Y, K, _
                    Options)
            End If
        End Function

        Public Function AddStampAnnotation(ByVal Left As Double, ByVal Top As Double, _
            ByVal Width As Double, ByVal Height As Double, ByVal StampType As Integer, _
            ByVal Title As String, ByVal Contents As String, ByVal Red As Double, _
            ByVal Green As Double, ByVal Blue As Double, ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryAddStampAnnotation(instanceID, Left, Top, Width, Height, _
                    StampType, Title, Contents, Red, Green, Blue, Options)
            End If
        End Function

        Public Function AddStampAnnotationFromImage(ByVal Left As Double, ByVal Top As Double, _
            ByVal Width As Double, ByVal Height As Double, ByVal FileName As String, _
            ByVal Title As String, ByVal Contents As String, ByVal Red As Double, _
            ByVal Green As Double, ByVal Blue As Double, ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryAddStampAnnotationFromImage(instanceID, Left, Top, Width, _
                    Height, FileName, Title, Contents, Red, Green, Blue, Options)
            End If
        End Function

        Public Function AddStandardFont(ByVal StandardFontID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryAddStandardFont(instanceID, StandardFontID)
            End If
        End Function

        Public Function AddSubsettedFont(ByVal FontName As String, ByVal CharsetIndex As Integer, _
            ByVal SubsetChars As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryAddSubsettedFont(instanceID, FontName, CharsetIndex, _
                    SubsetChars)
            End If
        End Function

        Public Function AddTextMarkupAnnotation(ByVal MarkupType As Integer, ByVal Left As Double, _
            ByVal Top As Double, ByVal Width As Double, ByVal Height As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryAddTextMarkupAnnotation(instanceID, MarkupType, Left, Top, _
                    Width, Height)
            End If
        End Function

        Public Function AddToFileList(ByVal ListName As String, ByVal FileName As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryAddToFileList(instanceID, ListName, FileName)
            End If
        End Function

        Public Function AddTrueTypeFont(ByVal FontName As String, ByVal Embed As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryAddTrueTypeFont(instanceID, FontName, Embed)
            End If
        End Function

        Public Function AddTrueTypeFontFromFile(ByVal FileName As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryAddTrueTypeFontFromFile(instanceID, FileName)
            End If
        End Function

        Public Function AddTrueTypeSubsettedFont(ByVal FontName As String, _
            ByVal SubsetChars As String, ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryAddTrueTypeSubsettedFont(instanceID, FontName, _
                    SubsetChars, Options)
            End If
        End Function

        Public Function AddType1Font(ByVal FileName As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryAddType1Font(instanceID, FileName)
            End If
        End Function

        Public Function AddU3DAnnotationFromFile(ByVal Left As Double, ByVal Top As Double, _
            ByVal Width As Double, ByVal Height As Double, ByVal FileName As String, _
            ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryAddU3DAnnotationFromFile(instanceID, Left, Top, Width, _
                    Height, FileName, Options)
            End If
        End Function

        Public Function AnalyseFile(ByVal InputFileName As String, ByVal Password As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryAnalyseFile(instanceID, InputFileName, Password)
            End If
        End Function

        Public Function AnnotationCount() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryAnnotationCount(instanceID)
            End If
        End Function

        Public Function AnsiStringResultLength() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryAnsiStringResultLength(instanceID)
            End If
        End Function

        Public Function AppendSpace(ByVal RelativeSpace As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryAppendSpace(instanceID, RelativeSpace)
            End If
        End Function

        Public Function AppendTableColumns(ByVal TableID As Integer, ByVal NewColumnCount As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryAppendTableColumns(instanceID, TableID, NewColumnCount)
            End If
        End Function

        Public Function AppendTableRows(ByVal TableID As Integer, ByVal NewRowCount As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryAppendTableRows(instanceID, TableID, NewRowCount)
            End If
        End Function

        Public Function AppendText(ByVal Text As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryAppendText(instanceID, Text)
            End If
        End Function

        Public Function AppendToFile(ByVal FileName As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryAppendToFile(instanceID, FileName)
            End If
        End Function

        Public Function ApplyStyle(ByVal StyleName As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryApplyStyle(instanceID, StyleName)
            End If
        End Function

        Public Function AttachAnnotToForm(ByVal Index As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryAttachAnnotToForm(instanceID, Index)
            End If
        End Function

        Public Function BalanceContentStream() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryBalanceContentStream(instanceID)
            End If
        End Function

        Public Function BalancePageTree(ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryBalancePageTree(instanceID, Options)
            End If
        End Function

        Public Function BeginPageUpdate() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryBeginPageUpdate(instanceID)
            End If
        End Function

        Public Function CapturePage(ByVal Page As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryCapturePage(instanceID, Page)
            End If
        End Function

        Public Function CapturePageEx(ByVal Page As Integer, ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryCapturePageEx(instanceID, Page, Options)
            End If
        End Function

        Public Function CharWidth(ByVal CharCode As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryCharWidth(instanceID, CharCode)
            End If
        End Function

        Public Function CheckFileCompliance(ByVal InputFileName As String, ByVal Password As String, _
            ByVal ComplianceTest As Integer, ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryCheckFileCompliance(instanceID, InputFileName, Password, _
                    ComplianceTest, Options)
            End If
        End Function

        Public Function CheckObjects() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryCheckObjects(instanceID)
            End If
        End Function

        Public Function CheckPageAnnots() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryCheckPageAnnots(instanceID)
            End If
        End Function

        Public Function CheckPassword(ByVal Password As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryCheckPassword(instanceID, Password)
            End If
        End Function

        Public Function ClearFileList(ByVal ListName As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryClearFileList(instanceID, ListName)
            End If
        End Function

        Public Function ClearImage(ByVal ImageID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryClearImage(instanceID, ImageID)
            End If
        End Function

        Public Function ClearPageLabels() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryClearPageLabels(instanceID)
            End If
        End Function

        Public Function ClearTextFormatting() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryClearTextFormatting(instanceID)
            End If
        End Function

        Public Function CloneOutlineAction(ByVal OutlineID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryCloneOutlineAction(instanceID, OutlineID)
            End If
        End Function

        Public Function ClonePages(ByVal StartPage As Integer, ByVal EndPage As Integer, _
            ByVal RepeatCount As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryClonePages(instanceID, StartPage, EndPage, RepeatCount)
            End If
        End Function

        Public Function CloseOutline(ByVal OutlineID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryCloseOutline(instanceID, OutlineID)
            End If
        End Function

        Public Function ClosePath() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryClosePath(instanceID)
            End If
        End Function

        Public Function CombineContentStreams() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryCombineContentStreams(instanceID)
            End If
        End Function

        Public Function CompareOutlines(ByVal FirstOutlineID As Integer, _
            ByVal SecondOutlineID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryCompareOutlines(instanceID, FirstOutlineID, _
                    SecondOutlineID)
            End If
        End Function

        Public Function CompressContent() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryCompressContent(instanceID)
            End If
        End Function

        Public Function CompressFonts(ByVal Compress As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryCompressFonts(instanceID, Compress)
            End If
        End Function

        Public Function CompressImages(ByVal Compress As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryCompressImages(instanceID, Compress)
            End If
        End Function

        Public Function CompressPage() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryCompressPage(instanceID)
            End If
        End Function

        Public Function ContentStreamCount() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryContentStreamCount(instanceID)
            End If
        End Function

        Public Function ContentStreamSafe() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryContentStreamSafe(instanceID)
            End If
        End Function

        Public Function CopyPageRanges(ByVal DocumentID As Integer, ByVal RangeList As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryCopyPageRanges(instanceID, DocumentID, RangeList)
            End If
        End Function

        Public Function CopyPageRangesEx(ByVal DocumentID As Integer, ByVal RangeList As String, _
            ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryCopyPageRangesEx(instanceID, DocumentID, RangeList, _
                    Options)
            End If
        End Function

        Public Function CreateNewObject() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryCreateNewObject(instanceID)
            End If
        End Function

        Public Function CreateTable(ByVal RowCount As Integer, ByVal ColumnCount As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryCreateTable(instanceID, RowCount, ColumnCount)
            End If
        End Function

        Public Function DAAppendFile(ByVal FileHandle As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDAAppendFile(instanceID, FileHandle)
            End If
        End Function

        Public Function DACapturePage(ByVal FileHandle As Integer, ByVal PageRef As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDACapturePage(instanceID, FileHandle, PageRef)
            End If
        End Function

        Public Function DACapturePageEx(ByVal FileHandle As Integer, ByVal PageRef As Integer, _
            ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDACapturePageEx(instanceID, FileHandle, PageRef, Options)
            End If
        End Function

        Public Function DACloseFile(ByVal FileHandle As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDACloseFile(instanceID, FileHandle)
            End If
        End Function

        Public Function DADrawCapturedPage(ByVal FileHandle As Integer, ByVal DACaptureID As Integer, _
            ByVal DestPageRef As Integer, ByVal PntLeft As Double, ByVal PntBottom As Double, _
            ByVal PntWidth As Double, ByVal PntHeight As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDADrawCapturedPage(instanceID, FileHandle, DACaptureID, _
                    DestPageRef, PntLeft, PntBottom, PntWidth, PntHeight)
            End If
        End Function

        Public Function DADrawRotatedCapturedPage(ByVal FileHandle As Integer, _
            ByVal DACaptureID As Integer, ByVal DestPageRef As Integer, ByVal PntLeft As Double, _
            ByVal PntBottom As Double, ByVal PntWidth As Double, ByVal PntHeight As Double, _
            ByVal Angle As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDADrawRotatedCapturedPage(instanceID, FileHandle, _
                    DACaptureID, DestPageRef, PntLeft, PntBottom, PntWidth, PntHeight, Angle)
            End If
        End Function

        Public Function DAEmbedFileStreams(ByVal FileHandle As Integer, ByVal RootPath As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDAEmbedFileStreams(instanceID, FileHandle, RootPath)
            End If
        End Function

        Public Function DAExtractPageText(ByVal FileHandle As Integer, ByVal PageRef As Integer, _
            ByVal Options As Integer) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryDAExtractPageText(instanceID, FileHandle, PageRef, _
                    Options))
            End If
        End Function

        Public Function DAExtractPageTextBlocks(ByVal FileHandle As Integer, _
            ByVal PageRef As Integer, ByVal ExtractOptions As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDAExtractPageTextBlocks(instanceID, FileHandle, PageRef, _
                    ExtractOptions)
            End If
        End Function

        Public Function DAFindPage(ByVal FileHandle As Integer, ByVal Page As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDAFindPage(instanceID, FileHandle, Page)
            End If
        End Function

        Public Function DAGetAnnotationCount(ByVal FileHandle As Integer, ByVal PageRef As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDAGetAnnotationCount(instanceID, FileHandle, PageRef)
            End If
        End Function

        Public Function DAGetFormFieldCount(ByVal FileHandle As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDAGetFormFieldCount(instanceID, FileHandle)
            End If
        End Function

        Public Function DAGetFormFieldTitle(ByVal FileHandle As Integer, ByVal FieldIndex As Integer) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryDAGetFormFieldTitle(instanceID, FileHandle, FieldIndex))
            End If
        End Function

        Public Function DAGetFormFieldValue(ByVal FileHandle As Integer, ByVal FieldIndex As Integer) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryDAGetFormFieldValue(instanceID, FileHandle, FieldIndex))
            End If
        End Function

        Public Function DAGetImageDataToString(ByVal FileHandle As Integer, _
            ByVal ImageListID As Integer, ByVal ImageIndex As Integer) As Byte()
            If (dll Is Nothing) Then
                Return New Byte(-1) {}
            Else
                Dim data As IntPtr = dll.DebenuPDFLibraryDAGetImageDataToString(instanceID, _
                    FileHandle, ImageListID, ImageIndex)
                Dim size As Integer = dll.DebenuPDFLibraryAnsiStringResultLength(instanceID)
                Dim result As Byte() = New Byte(size - 1) {}
                Marshal.Copy(data, result, 0, size)
                Return result
            End If
        End Function

        Public Function DAGetImageDblProperty(ByVal FileHandle As Integer, _
            ByVal ImageListID As Integer, ByVal ImageIndex As Integer, ByVal PropertyID As Integer) As Double
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDAGetImageDblProperty(instanceID, FileHandle, ImageListID, _
                    ImageIndex, PropertyID)
            End If
        End Function

        Public Function DAGetImageIntProperty(ByVal FileHandle As Integer, _
            ByVal ImageListID As Integer, ByVal ImageIndex As Integer, ByVal PropertyID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDAGetImageIntProperty(instanceID, FileHandle, ImageListID, _
                    ImageIndex, PropertyID)
            End If
        End Function

        Public Function DAGetImageListCount(ByVal FileHandle As Integer, _
            ByVal ImageListID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDAGetImageListCount(instanceID, FileHandle, ImageListID)
            End If
        End Function

        Public Function DAGetInformation(ByVal FileHandle As Integer, ByVal Key As String) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryDAGetInformation(instanceID, FileHandle, Key))
            End If
        End Function

        Public Function DAGetObjectCount(ByVal FileHandle As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDAGetObjectCount(instanceID, FileHandle)
            End If
        End Function

        Public Function DAGetObjectToString(ByVal FileHandle As Integer, _
            ByVal ObjectNumber As Integer) As Byte()
            If (dll Is Nothing) Then
                Return New Byte(-1) {}
            Else
                Dim data As IntPtr = dll.DebenuPDFLibraryDAGetObjectToString(instanceID, FileHandle, _
                    ObjectNumber)
                Dim size As Integer = dll.DebenuPDFLibraryAnsiStringResultLength(instanceID)
                Dim result As Byte() = New Byte(size - 1) {}
                Marshal.Copy(data, result, 0, size)
                Return result
            End If
        End Function

        Public Function DAGetPageBox(ByVal FileHandle As Integer, ByVal PageRef As Integer, _
            ByVal BoxIndex As Integer, ByVal Dimension As Integer) As Double
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDAGetPageBox(instanceID, FileHandle, PageRef, BoxIndex, _
                    Dimension)
            End If
        End Function

        Public Function DAGetPageContentToString(ByVal FileHandle As Integer, _
            ByVal PageRef As Integer) As Byte()
            If (dll Is Nothing) Then
                Return New Byte(-1) {}
            Else
                Dim data As IntPtr = dll.DebenuPDFLibraryDAGetPageContentToString(instanceID, _
                    FileHandle, PageRef)
                Dim size As Integer = dll.DebenuPDFLibraryAnsiStringResultLength(instanceID)
                Dim result As Byte() = New Byte(size - 1) {}
                Marshal.Copy(data, result, 0, size)
                Return result
            End If
        End Function

        Public Function DAGetPageCount(ByVal FileHandle As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDAGetPageCount(instanceID, FileHandle)
            End If
        End Function

        Public Function DAGetPageHeight(ByVal FileHandle As Integer, ByVal PageRef As Integer) As Double
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDAGetPageHeight(instanceID, FileHandle, PageRef)
            End If
        End Function

        Public Function DAGetPageImageList(ByVal FileHandle As Integer, ByVal PageRef As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDAGetPageImageList(instanceID, FileHandle, PageRef)
            End If
        End Function

        Public Function DAGetPageWidth(ByVal FileHandle As Integer, ByVal PageRef As Integer) As Double
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDAGetPageWidth(instanceID, FileHandle, PageRef)
            End If
        End Function

        Public Function DAGetTextBlockBound(ByVal TextBlockListID As Integer, ByVal Index As Integer, _
            ByVal BoundIndex As Integer) As Double
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDAGetTextBlockBound(instanceID, TextBlockListID, Index, _
                    BoundIndex)
            End If
        End Function

        Public Function DAGetTextBlockCharWidth(ByVal TextBlockListID As Integer, _
            ByVal Index As Integer, ByVal CharIndex As Integer) As Double
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDAGetTextBlockCharWidth(instanceID, TextBlockListID, _
                    Index, CharIndex)
            End If
        End Function

        Public Function DAGetTextBlockColor(ByVal TextBlockListID As Integer, ByVal Index As Integer, _
            ByVal ColorComponent As Integer) As Double
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDAGetTextBlockColor(instanceID, TextBlockListID, Index, _
                    ColorComponent)
            End If
        End Function

        Public Function DAGetTextBlockColorType(ByVal TextBlockListID As Integer, _
            ByVal Index As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDAGetTextBlockColorType(instanceID, TextBlockListID, _
                    Index)
            End If
        End Function

        Public Function DAGetTextBlockCount(ByVal TextBlockListID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDAGetTextBlockCount(instanceID, TextBlockListID)
            End If
        End Function

        Public Function DAGetTextBlockFontName(ByVal TextBlockListID As Integer, _
            ByVal Index As Integer) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryDAGetTextBlockFontName(instanceID, TextBlockListID, _
                    Index))
            End If
        End Function

        Public Function DAGetTextBlockFontSize(ByVal TextBlockListID As Integer, _
            ByVal Index As Integer) As Double
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDAGetTextBlockFontSize(instanceID, TextBlockListID, Index)
            End If
        End Function

        Public Function DAGetTextBlockText(ByVal TextBlockListID As Integer, ByVal Index As Integer) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryDAGetTextBlockText(instanceID, TextBlockListID, Index))
            End If
        End Function

        Public Function DAHasPageBox(ByVal FileHandle As Integer, ByVal PageRef As Integer, _
            ByVal BoxIndex As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDAHasPageBox(instanceID, FileHandle, PageRef, BoxIndex)
            End If
        End Function

        Public Function DAHidePage(ByVal FileHandle As Integer, ByVal PageRef As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDAHidePage(instanceID, FileHandle, PageRef)
            End If
        End Function

        Public Function DAMovePage(ByVal FileHandle As Integer, ByVal PageRef As Integer, _
            ByVal TargetPageRef As Integer, ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDAMovePage(instanceID, FileHandle, PageRef, TargetPageRef, _
                    Options)
            End If
        End Function

        Public Function DANewPage(ByVal FileHandle As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDANewPage(instanceID, FileHandle)
            End If
        End Function

        Public Function DANewPages(ByVal FileHandle As Integer, ByVal PageCount As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDANewPages(instanceID, FileHandle, PageCount)
            End If
        End Function

        Public Function DAOpenFile(ByVal InputFileName As String, ByVal Password As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDAOpenFile(instanceID, InputFileName, Password)
            End If
        End Function

        Public Function DAOpenFileReadOnly(ByVal InputFileName As String, ByVal Password As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDAOpenFileReadOnly(instanceID, InputFileName, Password)
            End If
        End Function

        Public Function DAPageRotation(ByVal FileHandle As Integer, ByVal PageRef As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDAPageRotation(instanceID, FileHandle, PageRef)
            End If
        End Function

        Public Function DAReleaseImageList(ByVal FileHandle As Integer, ByVal ImageListID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDAReleaseImageList(instanceID, FileHandle, ImageListID)
            End If
        End Function

        Public Function DAReleaseTextBlocks(ByVal TextBlockListID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDAReleaseTextBlocks(instanceID, TextBlockListID)
            End If
        End Function

        Public Function DARemoveUsageRights(ByVal FileHandle As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDARemoveUsageRights(instanceID, FileHandle)
            End If
        End Function

        Public Function DARenderPageToDC(ByVal FileHandle As Integer, ByVal PageRef As Integer, _
            ByVal DPI As Double, ByVal DC As IntPtr) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDARenderPageToDC(instanceID, FileHandle, PageRef, DPI, DC)
            End If
        End Function

        Public Function DARenderPageToFile(ByVal FileHandle As Integer, ByVal PageRef As Integer, _
            ByVal Options As Integer, ByVal DPI As Double, ByVal FileName As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDARenderPageToFile(instanceID, FileHandle, PageRef, _
                    Options, DPI, FileName)
            End If
        End Function

        Public Function DARenderPageToString(ByVal FileHandle As Integer, ByVal PageRef As Integer, _
            ByVal Options As Integer, ByVal DPI As Double) As Byte()
            If (dll Is Nothing) Then
                Return New Byte(-1) {}
            Else
                Dim data As IntPtr = dll.DebenuPDFLibraryDARenderPageToString(instanceID, FileHandle, _
                    PageRef, Options, DPI)
                Dim size As Integer = dll.DebenuPDFLibraryAnsiStringResultLength(instanceID)
                Dim result As Byte() = New Byte(size - 1) {}
                Marshal.Copy(data, result, 0, size)
                Return result
            End If
        End Function

        Public Function DARotatePage(ByVal FileHandle As Integer, ByVal PageRef As Integer, _
            ByVal Angle As Integer, ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDARotatePage(instanceID, FileHandle, PageRef, Angle, _
                    Options)
            End If
        End Function

        Public Function DASaveAsFile(ByVal FileHandle As Integer, ByVal OutputFileName As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDASaveAsFile(instanceID, FileHandle, OutputFileName)
            End If
        End Function

        Public Function DASaveImageDataToFile(ByVal FileHandle As Integer, _
            ByVal ImageListID As Integer, ByVal ImageIndex As Integer, ByVal ImageFileName As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDASaveImageDataToFile(instanceID, FileHandle, ImageListID, _
                    ImageIndex, ImageFileName)
            End If
        End Function

        Public Function DASetInformation(ByVal FileHandle As Integer, ByVal Key As String, _
            ByVal NewValue As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDASetInformation(instanceID, FileHandle, Key, NewValue)
            End If
        End Function

        Public Function DASetPageBox(ByVal FileHandle As Integer, ByVal PageRef As Integer, _
            ByVal BoxIndex As Integer, ByVal X1 As Double, ByVal Y1 As Double, ByVal X2 As Double, _
            ByVal Y2 As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDASetPageBox(instanceID, FileHandle, PageRef, BoxIndex, _
                    X1, Y1, X2, Y2)
            End If
        End Function

        Public Function DASetPageSize(ByVal FileHandle As Integer, ByVal PageRef As Integer, _
            ByVal PntWidth As Double, ByVal PntHeight As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDASetPageSize(instanceID, FileHandle, PageRef, PntWidth, _
                    PntHeight)
            End If
        End Function

        Public Function DASetTextExtractionArea(ByVal Left As Double, ByVal Top As Double, _
            ByVal Width As Double, ByVal Height As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDASetTextExtractionArea(instanceID, Left, Top, Width, _
                    Height)
            End If
        End Function

        Public Function DASetTextExtractionOptions(ByVal OptionID As Integer, _
            ByVal NewValue As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDASetTextExtractionOptions(instanceID, OptionID, NewValue)
            End If
        End Function

        Public Function DASetTextExtractionScaling(ByVal Options As Integer, _
            ByVal Horizontal As Double, ByVal Vertical As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDASetTextExtractionScaling(instanceID, Options, _
                    Horizontal, Vertical)
            End If
        End Function

        Public Function DASetTextExtractionWordGap(ByVal NewWordGap As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDASetTextExtractionWordGap(instanceID, NewWordGap)
            End If
        End Function

        Public Function DAShiftedHeader(ByVal FileHandle As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDAShiftedHeader(instanceID, FileHandle)
            End If
        End Function

        Public Function Decrypt() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDecrypt(instanceID)
            End If
        End Function

        Public Function DecryptFile(ByVal InputFileName As String, ByVal OutputFileName As String, _
            ByVal Password As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDecryptFile(instanceID, InputFileName, OutputFileName, _
                    Password)
            End If
        End Function

        Public Function DeleteAnalysis(ByVal AnalysisID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDeleteAnalysis(instanceID, AnalysisID)
            End If
        End Function

        Public Function DeleteAnnotation(ByVal Index As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDeleteAnnotation(instanceID, Index)
            End If
        End Function

        Public Function DeleteContentStream() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDeleteContentStream(instanceID)
            End If
        End Function

        Public Function DeleteFormField(ByVal Index As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDeleteFormField(instanceID, Index)
            End If
        End Function

        Public Function DeleteOptionalContentGroup(ByVal OptionalContentGroupID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDeleteOptionalContentGroup(instanceID, _
                    OptionalContentGroupID)
            End If
        End Function

        Public Function DeletePageLGIDict(ByVal DictIndex As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDeletePageLGIDict(instanceID, DictIndex)
            End If
        End Function

        Public Function DeletePages(ByVal StartPage As Integer, ByVal PageCount As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDeletePages(instanceID, StartPage, PageCount)
            End If
        End Function

        Public Function DocJavaScriptAction(ByVal ActionType As String, ByVal JavaScript As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDocJavaScriptAction(instanceID, ActionType, JavaScript)
            End If
        End Function

        Public Function DocumentCount() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDocumentCount(instanceID)
            End If
        End Function

        Public Function DrawArc(ByVal XPos As Double, ByVal YPos As Double, ByVal Radius As Double, _
            ByVal StartAngle As Double, ByVal EndAngle As Double, ByVal Pie As Integer, _
            ByVal DrawOptions As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDrawArc(instanceID, XPos, YPos, Radius, StartAngle, _
                    EndAngle, Pie, DrawOptions)
            End If
        End Function

        Public Function DrawBarcode(ByVal Left As Double, ByVal Top As Double, ByVal Width As Double, _
            ByVal Height As Double, ByVal Text As String, ByVal Barcode As Integer, _
            ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDrawBarcode(instanceID, Left, Top, Width, Height, Text, _
                    Barcode, Options)
            End If
        End Function

        Public Function DrawBox(ByVal Left As Double, ByVal Top As Double, ByVal Width As Double, _
            ByVal Height As Double, ByVal DrawOptions As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDrawBox(instanceID, Left, Top, Width, Height, DrawOptions)
            End If
        End Function

        Public Function DrawCapturedPage(ByVal CaptureID As Integer, ByVal Left As Double, _
            ByVal Top As Double, ByVal Width As Double, ByVal Height As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDrawCapturedPage(instanceID, CaptureID, Left, Top, Width, _
                    Height)
            End If
        End Function

        Public Function DrawCapturedPageMatrix(ByVal CaptureID As Integer, ByVal M11 As Double, _
            ByVal M12 As Double, ByVal M21 As Double, ByVal M22 As Double, ByVal MDX As Double, _
            ByVal MDY As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDrawCapturedPageMatrix(instanceID, CaptureID, M11, M12, _
                    M21, M22, MDX, MDY)
            End If
        End Function

        Public Function DrawCircle(ByVal XPos As Double, ByVal YPos As Double, _
            ByVal Radius As Double, ByVal DrawOptions As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDrawCircle(instanceID, XPos, YPos, Radius, DrawOptions)
            End If
        End Function

        Public Function DrawDataMatrixSymbol(ByVal Left As Double, ByVal Top As Double, _
            ByVal ModuleSize As Double, ByVal Text As String, ByVal Encoding As Integer, _
            ByVal SymbolSize As Integer, ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDrawDataMatrixSymbol(instanceID, Left, Top, ModuleSize, _
                    Text, Encoding, SymbolSize, Options)
            End If
        End Function

        Public Function DrawEllipse(ByVal XPos As Double, ByVal YPos As Double, _
            ByVal Width As Double, ByVal Height As Double, ByVal DrawOptions As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDrawEllipse(instanceID, XPos, YPos, Width, Height, _
                    DrawOptions)
            End If
        End Function

        Public Function DrawEllipticArc(ByVal XPos As Double, ByVal YPos As Double, _
            ByVal Width As Double, ByVal Height As Double, ByVal StartAngle As Double, _
            ByVal EndAngle As Double, ByVal Pie As Integer, ByVal DrawOptions As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDrawEllipticArc(instanceID, XPos, YPos, Width, Height, _
                    StartAngle, EndAngle, Pie, DrawOptions)
            End If
        End Function

        Public Function DrawHTMLText(ByVal Left As Double, ByVal Top As Double, _
            ByVal Width As Double, ByVal HTMLText As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDrawHTMLText(instanceID, Left, Top, Width, HTMLText)
            End If
        End Function

        Public Function DrawHTMLTextBox(ByVal Left As Double, ByVal Top As Double, _
            ByVal Width As Double, ByVal Height As Double, ByVal HTMLText As String) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryDrawHTMLTextBox(instanceID, Left, Top, Width, Height, _
                    HTMLText))
            End If
        End Function

        Public Function DrawHTMLTextBoxMatrix(ByVal Width As Double, ByVal Height As Double, _
            ByVal HTMLText As String, ByVal M11 As Double, ByVal M12 As Double, ByVal M21 As Double, _
            ByVal M22 As Double, ByVal MDX As Double, ByVal MDY As Double) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryDrawHTMLTextBoxMatrix(instanceID, Width, Height, _
                    HTMLText, M11, M12, M21, M22, MDX, MDY))
            End If
        End Function

        Public Function DrawHTMLTextMatrix(ByVal Width As Double, ByVal HTMLText As String, _
            ByVal M11 As Double, ByVal M12 As Double, ByVal M21 As Double, ByVal M22 As Double, _
            ByVal MDX As Double, ByVal MDY As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDrawHTMLTextMatrix(instanceID, Width, HTMLText, M11, M12, _
                    M21, M22, MDX, MDY)
            End If
        End Function

        Public Function DrawImage(ByVal Left As Double, ByVal Top As Double, ByVal Width As Double, _
            ByVal Height As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDrawImage(instanceID, Left, Top, Width, Height)
            End If
        End Function

        Public Function DrawImageMatrix(ByVal M11 As Double, ByVal M12 As Double, _
            ByVal M21 As Double, ByVal M22 As Double, ByVal MDX As Double, ByVal MDY As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDrawImageMatrix(instanceID, M11, M12, M21, M22, MDX, MDY)
            End If
        End Function

        Public Function DrawIntelligentMailBarcode(ByVal Left As Double, ByVal Top As Double, _
            ByVal BarWidth As Double, ByVal FullBarHeight As Double, ByVal TrackerHeight As Double, _
            ByVal SpaceWidth As Double, ByVal BarcodeData As String, ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDrawIntelligentMailBarcode(instanceID, Left, Top, _
                    BarWidth, FullBarHeight, TrackerHeight, SpaceWidth, BarcodeData, Options)
            End If
        End Function

        Public Function DrawLine(ByVal StartX As Double, ByVal StartY As Double, _
            ByVal EndX As Double, ByVal EndY As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDrawLine(instanceID, StartX, StartY, EndX, EndY)
            End If
        End Function

        Public Function DrawMultiLineText(ByVal XPos As Double, ByVal YPos As Double, _
            ByVal Delimiter As String, ByVal Text As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDrawMultiLineText(instanceID, XPos, YPos, Delimiter, Text)
            End If
        End Function

        Public Function DrawPDF417Symbol(ByVal Left As Double, ByVal Top As Double, _
            ByVal Text As String, ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDrawPDF417Symbol(instanceID, Left, Top, Text, Options)
            End If
        End Function

        Public Function DrawPDF417SymbolEx(ByVal Left As Double, ByVal Top As Double, _
            ByVal Text As String, ByVal Options As Integer, ByVal FixedColumns As Integer, _
            ByVal FixedRows As Integer, ByVal ErrorLevel As Integer, ByVal ModuleSize As Double, _
            ByVal HeightWidthRatio As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDrawPDF417SymbolEx(instanceID, Left, Top, Text, Options, _
                    FixedColumns, FixedRows, ErrorLevel, ModuleSize, HeightWidthRatio)
            End If
        End Function

        Public Function DrawPath(ByVal PathOptions As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDrawPath(instanceID, PathOptions)
            End If
        End Function

        Public Function DrawPathEvenOdd(ByVal PathOptions As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDrawPathEvenOdd(instanceID, PathOptions)
            End If
        End Function

        Public Function DrawPostScriptXObject(ByVal PSRef As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDrawPostScriptXObject(instanceID, PSRef)
            End If
        End Function

        Public Function DrawQRCode(ByVal Left As Double, ByVal Top As Double, _
            ByVal SymbolSize As Double, ByVal Text As String, ByVal EncodeOptions As Integer, _
            ByVal DrawOptions As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDrawQRCode(instanceID, Left, Top, SymbolSize, Text, _
                    EncodeOptions, DrawOptions)
            End If
        End Function

        Public Function DrawRotatedBox(ByVal Left As Double, ByVal Bottom As Double, _
            ByVal Width As Double, ByVal Height As Double, ByVal Angle As Double, _
            ByVal DrawOptions As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDrawRotatedBox(instanceID, Left, Bottom, Width, Height, _
                    Angle, DrawOptions)
            End If
        End Function

        Public Function DrawRotatedCapturedPage(ByVal CaptureID As Integer, ByVal Left As Double, _
            ByVal Bottom As Double, ByVal Width As Double, ByVal Height As Double, _
            ByVal Angle As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDrawRotatedCapturedPage(instanceID, CaptureID, Left, _
                    Bottom, Width, Height, Angle)
            End If
        End Function

        Public Function DrawRotatedImage(ByVal Left As Double, ByVal Bottom As Double, _
            ByVal Width As Double, ByVal Height As Double, ByVal Angle As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDrawRotatedImage(instanceID, Left, Bottom, Width, Height, _
                    Angle)
            End If
        End Function

        Public Function DrawRotatedMultiLineText(ByVal XPos As Double, ByVal YPos As Double, _
            ByVal Angle As Double, ByVal Delimiter As String, ByVal Text As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDrawRotatedMultiLineText(instanceID, XPos, YPos, Angle, _
                    Delimiter, Text)
            End If
        End Function

        Public Function DrawRotatedText(ByVal XPos As Double, ByVal YPos As Double, _
            ByVal Angle As Double, ByVal Text As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDrawRotatedText(instanceID, XPos, YPos, Angle, Text)
            End If
        End Function

        Public Function DrawRotatedTextBox(ByVal Left As Double, ByVal Top As Double, _
            ByVal Width As Double, ByVal Height As Double, ByVal Angle As Double, _
            ByVal Text As String, ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDrawRotatedTextBox(instanceID, Left, Top, Width, Height, _
                    Angle, Text, Options)
            End If
        End Function

        Public Function DrawRotatedTextBoxEx(ByVal Left As Double, ByVal Top As Double, _
            ByVal Width As Double, ByVal Height As Double, ByVal Angle As Double, _
            ByVal Text As String, ByVal Options As Integer, ByVal Border As Integer, _
            ByVal Radius As Integer, ByVal DrawOptions As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDrawRotatedTextBoxEx(instanceID, Left, Top, Width, Height, _
                    Angle, Text, Options, Border, Radius, DrawOptions)
            End If
        End Function

        Public Function DrawRoundedBox(ByVal Left As Double, ByVal Top As Double, _
            ByVal Width As Double, ByVal Height As Double, ByVal Radius As Double, _
            ByVal DrawOptions As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDrawRoundedBox(instanceID, Left, Top, Width, Height, _
                    Radius, DrawOptions)
            End If
        End Function

        Public Function DrawRoundedRotatedBox(ByVal Left As Double, ByVal Bottom As Double, _
            ByVal Width As Double, ByVal Height As Double, ByVal Radius As Double, _
            ByVal Angle As Double, ByVal DrawOptions As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDrawRoundedRotatedBox(instanceID, Left, Bottom, Width, _
                    Height, Radius, Angle, DrawOptions)
            End If
        End Function

        Public Function DrawScaledImage(ByVal Left As Double, ByVal Top As Double, _
            ByVal Scale As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDrawScaledImage(instanceID, Left, Top, Scale)
            End If
        End Function

        Public Function DrawSpacedText(ByVal XPos As Double, ByVal YPos As Double, _
            ByVal Spacing As Double, ByVal Text As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDrawSpacedText(instanceID, XPos, YPos, Spacing, Text)
            End If
        End Function

        Public Function DrawTableRows(ByVal TableID As Integer, ByVal Left As Double, _
            ByVal Top As Double, ByVal Height As Double, ByVal FirstRow As Integer, _
            ByVal LastRow As Integer) As Double
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDrawTableRows(instanceID, TableID, Left, Top, Height, _
                    FirstRow, LastRow)
            End If
        End Function

        Public Function DrawText(ByVal XPos As Double, ByVal YPos As Double, ByVal Text As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDrawText(instanceID, XPos, YPos, Text)
            End If
        End Function

        Public Function DrawTextArc(ByVal XPos As Double, ByVal YPos As Double, _
            ByVal Radius As Double, ByVal Angle As Double, ByVal Text As String, _
            ByVal DrawOptions As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDrawTextArc(instanceID, XPos, YPos, Radius, Angle, Text, _
                    DrawOptions)
            End If
        End Function

        Public Function DrawTextBox(ByVal Left As Double, ByVal Top As Double, ByVal Width As Double, _
            ByVal Height As Double, ByVal Text As String, ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDrawTextBox(instanceID, Left, Top, Width, Height, Text, _
                    Options)
            End If
        End Function

        Public Function DrawTextBoxMatrix(ByVal Width As Double, ByVal Height As Double, _
            ByVal Text As String, ByVal Options As Integer, ByVal M11 As Double, ByVal M12 As Double, _
            ByVal M21 As Double, ByVal M22 As Double, ByVal MDX As Double, ByVal MDY As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDrawTextBoxMatrix(instanceID, Width, Height, Text, _
                    Options, M11, M12, M21, M22, MDX, MDY)
            End If
        End Function

        Public Function DrawWrappedText(ByVal XPos As Double, ByVal YPos As Double, _
            ByVal Width As Double, ByVal Text As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryDrawWrappedText(instanceID, XPos, YPos, Width, Text)
            End If
        End Function

        Public Function EditableContentStream() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryEditableContentStream(instanceID)
            End If
        End Function

        Public Function EmbedFile(ByVal Title As String, ByVal FileName As String, _
            ByVal MIMEType As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryEmbedFile(instanceID, Title, FileName, MIMEType)
            End If
        End Function

        Public Function EmbeddedFileCount() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryEmbeddedFileCount(instanceID)
            End If
        End Function

        Public Function EncapsulateContentStream() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryEncapsulateContentStream(instanceID)
            End If
        End Function

        Public Function EncodePermissions(ByVal CanPrint As Integer, ByVal CanCopy As Integer, _
            ByVal CanChange As Integer, ByVal CanAddNotes As Integer, ByVal CanFillFields As Integer, _
            ByVal CanCopyAccess As Integer, ByVal CanAssemble As Integer, _
            ByVal CanPrintFull As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryEncodePermissions(instanceID, CanPrint, CanCopy, _
                    CanChange, CanAddNotes, CanFillFields, CanCopyAccess, CanAssemble, CanPrintFull)
            End If
        End Function

        Public Function Encrypt(ByVal Owner As String, ByVal User As String, _
            ByVal Strength As Integer, ByVal Permissions As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryEncrypt(instanceID, Owner, User, Strength, Permissions)
            End If
        End Function

        Public Function EncryptFile(ByVal InputFileName As String, ByVal OutputFileName As String, _
            ByVal Owner As String, ByVal User As String, ByVal Strength As Integer, _
            ByVal Permissions As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryEncryptFile(instanceID, InputFileName, OutputFileName, _
                    Owner, User, Strength, Permissions)
            End If
        End Function

        Public Function EncryptWithFingerprint(ByVal Fingerprint As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryEncryptWithFingerprint(instanceID, Fingerprint)
            End If
        End Function

        Public Function EncryptionAlgorithm() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryEncryptionAlgorithm(instanceID)
            End If
        End Function

        Public Function EncryptionStatus() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryEncryptionStatus(instanceID)
            End If
        End Function

        Public Function EncryptionStrength() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryEncryptionStrength(instanceID)
            End If
        End Function

        Public Function EndPageUpdate() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryEndPageUpdate(instanceID)
            End If
        End Function

        Public Function EndSignProcessToFile(ByVal SignProcessID As Integer, _
            ByVal OutputFile As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryEndSignProcessToFile(instanceID, SignProcessID, _
                    OutputFile)
            End If
        End Function

        Public Function EndSignProcessToString(ByVal SignProcessID As Integer) As Byte()
            If (dll Is Nothing) Then
                Return New Byte(-1) {}
            Else
                Dim data As IntPtr = dll.DebenuPDFLibraryEndSignProcessToString(instanceID, _
                    SignProcessID)
                Dim size As Integer = dll.DebenuPDFLibraryAnsiStringResultLength(instanceID)
                Dim result As Byte() = New Byte(size - 1) {}
                Marshal.Copy(data, result, 0, size)
                Return result
            End If
        End Function

        Public Function ExtractFilePageContentToString(ByVal InputFileName As String, _
            ByVal Password As String, ByVal Page As Integer) As Byte()
            If (dll Is Nothing) Then
                Return New Byte(-1) {}
            Else
                Dim data As IntPtr = dll.DebenuPDFLibraryExtractFilePageContentToString(instanceID, _
                    InputFileName, Password, Page)
                Dim size As Integer = dll.DebenuPDFLibraryAnsiStringResultLength(instanceID)
                Dim result As Byte() = New Byte(size - 1) {}
                Marshal.Copy(data, result, 0, size)
                Return result
            End If
        End Function

        Public Function ExtractFilePageText(ByVal InputFileName As String, ByVal Password As String, _
            ByVal Page As Integer, ByVal Options As Integer) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryExtractFilePageText(instanceID, InputFileName, _
                    Password, Page, Options))
            End If
        End Function

        Public Function ExtractFilePageTextBlocks(ByVal InputFileName As String, _
            ByVal Password As String, ByVal Page As Integer, ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryExtractFilePageTextBlocks(instanceID, InputFileName, _
                    Password, Page, Options)
            End If
        End Function

        Public Function ExtractFilePages(ByVal InputFileName As String, ByVal Password As String, _
            ByVal OutputFileName As String, ByVal RangeList As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryExtractFilePages(instanceID, InputFileName, Password, _
                    OutputFileName, RangeList)
            End If
        End Function

        Public Function ExtractFilePagesEx(ByVal InputFileName As String, ByVal Password As String, _
            ByVal OutputFileName As String, ByVal RangeList As String, ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryExtractFilePagesEx(instanceID, InputFileName, Password, _
                    OutputFileName, RangeList, Options)
            End If
        End Function

        Public Function ExtractPageRanges(ByVal RangeList As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryExtractPageRanges(instanceID, RangeList)
            End If
        End Function

        Public Function ExtractPageTextBlocks(ByVal ExtractOptions As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryExtractPageTextBlocks(instanceID, ExtractOptions)
            End If
        End Function

        Public Function ExtractPages(ByVal StartPage As Integer, ByVal PageCount As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryExtractPages(instanceID, StartPage, PageCount)
            End If
        End Function

        Public Function FileListCount(ByVal ListName As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryFileListCount(instanceID, ListName)
            End If
        End Function

        Public Function FileListItem(ByVal ListName As String, ByVal Index As Integer) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryFileListItem(instanceID, ListName, Index))
            End If
        End Function

        Public Function FindFonts() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryFindFonts(instanceID)
            End If
        End Function

        Public Function FindFormFieldByTitle(ByVal Title As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryFindFormFieldByTitle(instanceID, Title)
            End If
        End Function

        Public Function FindImages() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryFindImages(instanceID)
            End If
        End Function

        Public Function FitImage(ByVal Left As Double, ByVal Top As Double, ByVal Width As Double, _
            ByVal Height As Double, ByVal HAlign As Integer, ByVal VAlign As Integer, _
            ByVal Rotate As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryFitImage(instanceID, Left, Top, Width, Height, HAlign, _
                    VAlign, Rotate)
            End If
        End Function

        Public Function FitRotatedTextBox(ByVal Left As Double, ByVal Top As Double, _
            ByVal Width As Double, ByVal Height As Double, ByVal Angle As Double, _
            ByVal Text As String, ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryFitRotatedTextBox(instanceID, Left, Top, Width, Height, _
                    Angle, Text, Options)
            End If
        End Function

        Public Function FitTextBox(ByVal Left As Double, ByVal Top As Double, ByVal Width As Double, _
            ByVal Height As Double, ByVal Text As String, ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryFitTextBox(instanceID, Left, Top, Width, Height, Text, _
                    Options)
            End If
        End Function

        Public Function FlattenAnnot(ByVal Index As Integer, ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryFlattenAnnot(instanceID, Index, Options)
            End If
        End Function

        Public Function FlattenFormField(ByVal Index As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryFlattenFormField(instanceID, Index)
            End If
        End Function

        Public Function FontCount() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryFontCount(instanceID)
            End If
        End Function

        Public Function FontFamily() As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryFontFamily(instanceID))
            End If
        End Function

        Public Function FontHasKerning() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryFontHasKerning(instanceID)
            End If
        End Function

        Public Function FontName() As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryFontName(instanceID))
            End If
        End Function

        Public Function FontReference() As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryFontReference(instanceID))
            End If
        End Function

        Public Function FontSize() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryFontSize(instanceID)
            End If
        End Function

        Public Function FontType() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryFontType(instanceID)
            End If
        End Function

        Public Function FormFieldCount() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryFormFieldCount(instanceID)
            End If
        End Function

        Public Function FormFieldHasParent(ByVal Index As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryFormFieldHasParent(instanceID, Index)
            End If
        End Function

        Public Function FormFieldJavaScriptAction(ByVal Index As Integer, ByVal ActionType As String, _
            ByVal JavaScript As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryFormFieldJavaScriptAction(instanceID, Index, ActionType, _
                    JavaScript)
            End If
        End Function

        Public Function FormFieldWebLinkAction(ByVal Index As Integer, ByVal ActionType As String, _
            ByVal Link As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryFormFieldWebLinkAction(instanceID, Index, ActionType, _
                    Link)
            End If
        End Function

        Public Function GetActionDest(ByVal ActionID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetActionDest(instanceID, ActionID)
            End If
        End Function

        Public Function GetActionType(ByVal ActionID As Integer) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetActionType(instanceID, ActionID))
            End If
        End Function

        Public Function GetActionURL(ByVal ActionID As Integer) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetActionURL(instanceID, ActionID))
            End If
        End Function

        Public Function GetAnalysisInfo(ByVal AnalysisID As Integer, ByVal AnalysisItem As Integer) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetAnalysisInfo(instanceID, AnalysisID, AnalysisItem))
            End If
        End Function

        Public Function GetAnnotActionID(ByVal Index As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetAnnotActionID(instanceID, Index)
            End If
        End Function

        Public Function GetAnnotDblProperty(ByVal Index As Integer, ByVal Tag As Integer) As Double
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetAnnotDblProperty(instanceID, Index, Tag)
            End If
        End Function

        Public Function GetAnnotDest(ByVal Index As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetAnnotDest(instanceID, Index)
            End If
        End Function

        Public Function GetAnnotEmbeddedFileName(ByVal Index As Integer, ByVal Options As Integer) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetAnnotEmbeddedFileName(instanceID, Index, Options))
            End If
        End Function

        Public Function GetAnnotEmbeddedFileToFile(ByVal Index As Integer, ByVal Options As Integer, _
            ByVal FileName As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetAnnotEmbeddedFileToFile(instanceID, Index, Options, _
                    FileName)
            End If
        End Function

        Public Function GetAnnotEmbeddedFileToString(ByVal Index As Integer, _
            ByVal Options As Integer) As Byte()
            If (dll Is Nothing) Then
                Return New Byte(-1) {}
            Else
                Dim data As IntPtr = dll.DebenuPDFLibraryGetAnnotEmbeddedFileToString(instanceID, _
                    Index, Options)
                Dim size As Integer = dll.DebenuPDFLibraryAnsiStringResultLength(instanceID)
                Dim result As Byte() = New Byte(size - 1) {}
                Marshal.Copy(data, result, 0, size)
                Return result
            End If
        End Function

        Public Function GetAnnotIntProperty(ByVal Index As Integer, ByVal Tag As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetAnnotIntProperty(instanceID, Index, Tag)
            End If
        End Function

        Public Function GetAnnotQuadCount(ByVal Index As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetAnnotQuadCount(instanceID, Index)
            End If
        End Function

        Public Function GetAnnotQuadPoints(ByVal Index As Integer, ByVal QuadNumber As Integer, _
            ByVal PointNumber As Integer) As Double
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetAnnotQuadPoints(instanceID, Index, QuadNumber, _
                    PointNumber)
            End If
        End Function

        Public Function GetAnnotSoundToFile(ByVal Index As Integer, ByVal Options As Integer, _
            ByVal SoundFileName As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetAnnotSoundToFile(instanceID, Index, Options, _
                    SoundFileName)
            End If
        End Function

        Public Function GetAnnotSoundToString(ByVal Index As Integer, ByVal Options As Integer) As Byte()
            If (dll Is Nothing) Then
                Return New Byte(-1) {}
            Else
                Dim data As IntPtr = dll.DebenuPDFLibraryGetAnnotSoundToString(instanceID, Index, _
                    Options)
                Dim size As Integer = dll.DebenuPDFLibraryAnsiStringResultLength(instanceID)
                Dim result As Byte() = New Byte(size - 1) {}
                Marshal.Copy(data, result, 0, size)
                Return result
            End If
        End Function

        Public Function GetAnnotStrProperty(ByVal Index As Integer, ByVal Tag As Integer) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetAnnotStrProperty(instanceID, Index, Tag))
            End If
        End Function

        Public Function GetBarcodeWidth(ByVal NominalWidth As Double, ByVal Text As String, _
            ByVal Barcode As Integer) As Double
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetBarcodeWidth(instanceID, NominalWidth, Text, Barcode)
            End If
        End Function

        Public Function GetBaseURL() As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetBaseURL(instanceID))
            End If
        End Function

        Public Function GetCSDictEPSG(ByVal CSDictID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetCSDictEPSG(instanceID, CSDictID)
            End If
        End Function

        Public Function GetCSDictType(ByVal CSDictID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetCSDictType(instanceID, CSDictID)
            End If
        End Function

        Public Function GetCSDictWKT(ByVal CSDictID As Integer) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetCSDictWKT(instanceID, CSDictID))
            End If
        End Function

        Public Function GetCanvasDC(ByVal CanvasWidth As Integer, ByVal CanvasHeight As Integer) As IntPtr
            If (dll Is Nothing) Then
                Return IntPtr.Zero
            Else
                Return dll.DebenuPDFLibraryGetCanvasDC(instanceID, CanvasWidth, CanvasHeight)
            End If
        End Function

        Public Function GetCatalogInformation(ByVal Key As String) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetCatalogInformation(instanceID, Key))
            End If
        End Function

        Public Function GetContentStreamToString() As Byte()
            If (dll Is Nothing) Then
                Return New Byte(-1) {}
            Else
                Dim data As IntPtr = dll.DebenuPDFLibraryGetContentStreamToString(instanceID)
                Dim size As Integer = dll.DebenuPDFLibraryAnsiStringResultLength(instanceID)
                Dim result As Byte() = New Byte(size - 1) {}
                Marshal.Copy(data, result, 0, size)
                Return result
            End If
        End Function

        Public Function GetCustomInformation(ByVal Key As String) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetCustomInformation(instanceID, Key))
            End If
        End Function

        Public Function GetCustomKeys(ByVal Location As Integer) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetCustomKeys(instanceID, Location))
            End If
        End Function

        Public Function GetDefaultPrinterName() As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetDefaultPrinterName(instanceID))
            End If
        End Function

        Public Function GetDestName(ByVal DestID As Integer) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetDestName(instanceID, DestID))
            End If
        End Function

        Public Function GetDestPage(ByVal DestID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetDestPage(instanceID, DestID)
            End If
        End Function

        Public Function GetDestType(ByVal DestID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetDestType(instanceID, DestID)
            End If
        End Function

        Public Function GetDestValue(ByVal DestID As Integer, ByVal ValueKey As Integer) As Double
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetDestValue(instanceID, DestID, ValueKey)
            End If
        End Function

        Public Function GetDocJavaScript(ByVal ActionType As String) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetDocJavaScript(instanceID, ActionType))
            End If
        End Function

        Public Function GetDocumentFileName() As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetDocumentFileName(instanceID))
            End If
        End Function

        Public Function GetDocumentFileSize() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetDocumentFileSize(instanceID)
            End If
        End Function

        Public Function GetDocumentID(ByVal Index As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetDocumentID(instanceID, Index)
            End If
        End Function

        Public Function GetDocumentIdentifier(ByVal Part As Integer, ByVal Options As Integer) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetDocumentIdentifier(instanceID, Part, Options))
            End If
        End Function

        Public Function GetDocumentMetadata() As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetDocumentMetadata(instanceID))
            End If
        End Function

        Public Function GetDocumentRepaired() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetDocumentRepaired(instanceID)
            End If
        End Function

        Public Function GetDocumentResourceList() As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetDocumentResourceList(instanceID))
            End If
        End Function

        Public Function GetEmbeddedFileContentToFile(ByVal Index As Integer, _
            ByVal FileName As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetEmbeddedFileContentToFile(instanceID, Index, FileName)
            End If
        End Function

        Public Function GetEmbeddedFileContentToString(ByVal Index As Integer) As Byte()
            If (dll Is Nothing) Then
                Return New Byte(-1) {}
            Else
                Dim data As IntPtr = dll.DebenuPDFLibraryGetEmbeddedFileContentToString(instanceID, _
                    Index)
                Dim size As Integer = dll.DebenuPDFLibraryAnsiStringResultLength(instanceID)
                Dim result As Byte() = New Byte(size - 1) {}
                Marshal.Copy(data, result, 0, size)
                Return result
            End If
        End Function

        Public Function GetEmbeddedFileID(ByVal Index As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetEmbeddedFileID(instanceID, Index)
            End If
        End Function

        Public Function GetEmbeddedFileIntProperty(ByVal Index As Integer, ByVal Tag As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetEmbeddedFileIntProperty(instanceID, Index, Tag)
            End If
        End Function

        Public Function GetEmbeddedFileStrProperty(ByVal Index As Integer, ByVal Tag As Integer) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetEmbeddedFileStrProperty(instanceID, Index, Tag))
            End If
        End Function

        Public Function GetEncryptionFingerprint() As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetEncryptionFingerprint(instanceID))
            End If
        End Function

        Public Function GetFileMetadata(ByVal InputFileName As String, ByVal Password As String) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetFileMetadata(instanceID, InputFileName, Password))
            End If
        End Function

        Public Function GetFirstChildOutline(ByVal OutlineID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetFirstChildOutline(instanceID, OutlineID)
            End If
        End Function

        Public Function GetFirstOutline() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetFirstOutline(instanceID)
            End If
        End Function

        Public Function GetFontEncoding() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetFontEncoding(instanceID)
            End If
        End Function

        Public Function GetFontFlags(ByVal FontFlagItemID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetFontFlags(instanceID, FontFlagItemID)
            End If
        End Function

        Public Function GetFontID(ByVal Index As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetFontID(instanceID, Index)
            End If
        End Function

        Public Function GetFontIsEmbedded() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetFontIsEmbedded(instanceID)
            End If
        End Function

        Public Function GetFontIsSubsetted() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetFontIsSubsetted(instanceID)
            End If
        End Function

        Public Function GetFontMetrics(ByVal MetricType As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetFontMetrics(instanceID, MetricType)
            End If
        End Function

        Public Function GetFontObjectNumber() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetFontObjectNumber(instanceID)
            End If
        End Function

        Public Function GetFormFieldActionID(ByVal Index As Integer, ByVal TriggerEvent As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetFormFieldActionID(instanceID, Index, TriggerEvent)
            End If
        End Function

        Public Function GetFormFieldAlignment(ByVal Index As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetFormFieldAlignment(instanceID, Index)
            End If
        End Function

        Public Function GetFormFieldAnnotFlags(ByVal Index As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetFormFieldAnnotFlags(instanceID, Index)
            End If
        End Function

        Public Function GetFormFieldBackgroundColor(ByVal Index As Integer, _
            ByVal ColorComponent As Integer) As Double
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetFormFieldBackgroundColor(instanceID, Index, _
                    ColorComponent)
            End If
        End Function

        Public Function GetFormFieldBackgroundColorType(ByVal Index As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetFormFieldBackgroundColorType(instanceID, Index)
            End If
        End Function

        Public Function GetFormFieldBorderColor(ByVal Index As Integer, _
            ByVal ColorComponent As Integer) As Double
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetFormFieldBorderColor(instanceID, Index, ColorComponent)
            End If
        End Function

        Public Function GetFormFieldBorderColorType(ByVal Index As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetFormFieldBorderColorType(instanceID, Index)
            End If
        End Function

        Public Function GetFormFieldBorderProperty(ByVal Index As Integer, ByVal PropKey As Integer) As Double
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetFormFieldBorderProperty(instanceID, Index, PropKey)
            End If
        End Function

        Public Function GetFormFieldBorderStyle(ByVal Index As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetFormFieldBorderStyle(instanceID, Index)
            End If
        End Function

        Public Function GetFormFieldBound(ByVal Index As Integer, ByVal Edge As Integer) As Double
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetFormFieldBound(instanceID, Index, Edge)
            End If
        End Function

        Public Function GetFormFieldCaption(ByVal Index As Integer) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetFormFieldCaption(instanceID, Index))
            End If
        End Function

        Public Function GetFormFieldCheckStyle(ByVal Index As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetFormFieldCheckStyle(instanceID, Index)
            End If
        End Function

        Public Function GetFormFieldChildTitle(ByVal Index As Integer) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetFormFieldChildTitle(instanceID, Index))
            End If
        End Function

        Public Function GetFormFieldChoiceType(ByVal Index As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetFormFieldChoiceType(instanceID, Index)
            End If
        End Function

        Public Function GetFormFieldColor(ByVal Index As Integer, ByVal ColorComponent As Integer) As Double
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetFormFieldColor(instanceID, Index, ColorComponent)
            End If
        End Function

        Public Function GetFormFieldComb(ByVal Index As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetFormFieldComb(instanceID, Index)
            End If
        End Function

        Public Function GetFormFieldDefaultValue(ByVal Index As Integer) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetFormFieldDefaultValue(instanceID, Index))
            End If
        End Function

        Public Function GetFormFieldDescription(ByVal Index As Integer) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetFormFieldDescription(instanceID, Index))
            End If
        End Function

        Public Function GetFormFieldFlags(ByVal Index As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetFormFieldFlags(instanceID, Index)
            End If
        End Function

        Public Function GetFormFieldFontName(ByVal Index As Integer) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetFormFieldFontName(instanceID, Index))
            End If
        End Function

        Public Function GetFormFieldJavaScript(ByVal Index As Integer, ByVal ActionType As String) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetFormFieldJavaScript(instanceID, Index, ActionType))
            End If
        End Function

        Public Function GetFormFieldKidCount(ByVal Index As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetFormFieldKidCount(instanceID, Index)
            End If
        End Function

        Public Function GetFormFieldKidTempIndex(ByVal Index As Integer, ByVal SubIndex As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetFormFieldKidTempIndex(instanceID, Index, SubIndex)
            End If
        End Function

        Public Function GetFormFieldMaxLen(ByVal Index As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetFormFieldMaxLen(instanceID, Index)
            End If
        End Function

        Public Function GetFormFieldNoExport(ByVal Index As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetFormFieldNoExport(instanceID, Index)
            End If
        End Function

        Public Function GetFormFieldPage(ByVal Index As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetFormFieldPage(instanceID, Index)
            End If
        End Function

        Public Function GetFormFieldPrintable(ByVal Index As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetFormFieldPrintable(instanceID, Index)
            End If
        End Function

        Public Function GetFormFieldReadOnly(ByVal Index As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetFormFieldReadOnly(instanceID, Index)
            End If
        End Function

        Public Function GetFormFieldRequired(ByVal Index As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetFormFieldRequired(instanceID, Index)
            End If
        End Function

        Public Function GetFormFieldRichTextString(ByVal Index As Integer, ByVal Key As String) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetFormFieldRichTextString(instanceID, Index, Key))
            End If
        End Function

        Public Function GetFormFieldRotation(ByVal Index As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetFormFieldRotation(instanceID, Index)
            End If
        End Function

        Public Function GetFormFieldSubCount(ByVal Index As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetFormFieldSubCount(instanceID, Index)
            End If
        End Function

        Public Function GetFormFieldSubDisplayName(ByVal Index As Integer, ByVal SubIndex As Integer) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetFormFieldSubDisplayName(instanceID, Index, SubIndex))
            End If
        End Function

        Public Function GetFormFieldSubName(ByVal Index As Integer, ByVal SubIndex As Integer) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetFormFieldSubName(instanceID, Index, SubIndex))
            End If
        End Function

        Public Function GetFormFieldSubmitActionString(ByVal Index As Integer, _
            ByVal ActionType As String) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetFormFieldSubmitActionString(instanceID, Index, _
                    ActionType))
            End If
        End Function

        Public Function GetFormFieldTabOrder(ByVal Index As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetFormFieldTabOrder(instanceID, Index)
            End If
        End Function

        Public Function GetFormFieldTabOrderEx(ByVal Index As Integer, ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetFormFieldTabOrderEx(instanceID, Index, Options)
            End If
        End Function

        Public Function GetFormFieldTextFlags(ByVal Index As Integer, ByVal ValueKey As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetFormFieldTextFlags(instanceID, Index, ValueKey)
            End If
        End Function

        Public Function GetFormFieldTextSize(ByVal Index As Integer) As Double
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetFormFieldTextSize(instanceID, Index)
            End If
        End Function

        Public Function GetFormFieldTitle(ByVal Index As Integer) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetFormFieldTitle(instanceID, Index))
            End If
        End Function

        Public Function GetFormFieldType(ByVal Index As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetFormFieldType(instanceID, Index)
            End If
        End Function

        Public Function GetFormFieldValue(ByVal Index As Integer) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetFormFieldValue(instanceID, Index))
            End If
        End Function

        Public Function GetFormFieldValueByTitle(ByVal Title As String) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetFormFieldValueByTitle(instanceID, Title))
            End If
        End Function

        Public Function GetFormFieldVisible(ByVal Index As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetFormFieldVisible(instanceID, Index)
            End If
        End Function

        Public Function GetFormFieldWebLink(ByVal Index As Integer, ByVal ActionType As String) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetFormFieldWebLink(instanceID, Index, ActionType))
            End If
        End Function

        Public Function GetFormFontCount() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetFormFontCount(instanceID)
            End If
        End Function

        Public Function GetFormFontName(ByVal FontIndex As Integer) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetFormFontName(instanceID, FontIndex))
            End If
        End Function

        Public Function GetGlobalJavaScript(ByVal PackageName As String) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetGlobalJavaScript(instanceID, PackageName))
            End If
        End Function

        Public Function GetHTMLTextHeight(ByVal Width As Double, ByVal HTMLText As String) As Double
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetHTMLTextHeight(instanceID, Width, HTMLText)
            End If
        End Function

        Public Function GetHTMLTextLineCount(ByVal Width As Double, ByVal HTMLText As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetHTMLTextLineCount(instanceID, Width, HTMLText)
            End If
        End Function

        Public Function GetHTMLTextWidth(ByVal MaxWidth As Double, ByVal HTMLText As String) As Double
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetHTMLTextWidth(instanceID, MaxWidth, HTMLText)
            End If
        End Function

        Public Function GetImageID(ByVal Index As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetImageID(instanceID, Index)
            End If
        End Function

        Public Function GetImageListCount(ByVal ImageListID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetImageListCount(instanceID, ImageListID)
            End If
        End Function

        Public Function GetImageListItemDataToString(ByVal ImageListID As Integer, _
            ByVal ImageIndex As Integer, ByVal Options As Integer) As Byte()
            If (dll Is Nothing) Then
                Return New Byte(-1) {}
            Else
                Dim data As IntPtr = dll.DebenuPDFLibraryGetImageListItemDataToString(instanceID, _
                    ImageListID, ImageIndex, Options)
                Dim size As Integer = dll.DebenuPDFLibraryAnsiStringResultLength(instanceID)
                Dim result As Byte() = New Byte(size - 1) {}
                Marshal.Copy(data, result, 0, size)
                Return result
            End If
        End Function

        Public Function GetImageListItemDblProperty(ByVal ImageListID As Integer, _
            ByVal ImageIndex As Integer, ByVal PropertyID As Integer) As Double
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetImageListItemDblProperty(instanceID, ImageListID, _
                    ImageIndex, PropertyID)
            End If
        End Function

        Public Function GetImageListItemIntProperty(ByVal ImageListID As Integer, _
            ByVal ImageIndex As Integer, ByVal PropertyID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetImageListItemIntProperty(instanceID, ImageListID, _
                    ImageIndex, PropertyID)
            End If
        End Function

        Public Function GetImageMeasureDict() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetImageMeasureDict(instanceID)
            End If
        End Function

        Public Function GetImagePageCount(ByVal FileName As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetImagePageCount(instanceID, FileName)
            End If
        End Function

        Public Function GetImagePageCountFromString(ByVal Source As Byte()) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Dim gch As GCHandle = GCHandle.Alloc(Source, GCHandleType.Pinned)
                Dim bufferID As IntPtr = dll.DebenuPDFLibraryCreateBuffer(instanceID, Source.Length)
                dll.DebenuPDFLibraryAddToBuffer(instanceID, bufferID, gch.AddrOfPinnedObject(), Source.Length)
                Dim result As Integer = dll.DebenuPDFLibraryGetImagePageCountFromString(instanceID, _
                    bufferID)
                dll.DebenuPDFLibraryReleaseBuffer(instanceID, bufferID)
                gch.Free()
                Return result
            End If
        End Function

        Public Function GetImagePtDataDict() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetImagePtDataDict(instanceID)
            End If
        End Function

        Public Function GetInformation(ByVal Key As Integer) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetInformation(instanceID, Key))
            End If
        End Function

        Public Function GetInstalledFontsByCharset(ByVal CharsetIndex As Integer, _
            ByVal Options As Integer) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetInstalledFontsByCharset(instanceID, CharsetIndex, _
                    Options))
            End If
        End Function

        Public Function GetInstalledFontsByCodePage(ByVal CodePage As Integer, _
            ByVal Options As Integer) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetInstalledFontsByCodePage(instanceID, CodePage, _
                    Options))
            End If
        End Function

        Public Function GetKerning(ByVal CharPair As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetKerning(instanceID, CharPair)
            End If
        End Function

        Public Function GetLatestPrinterNames() As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetLatestPrinterNames(instanceID))
            End If
        End Function

        Public Function GetMaxObjectNumber() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetMaxObjectNumber(instanceID)
            End If
        End Function

        Public Function GetMeasureDictBoundsCount(ByVal MeasureDictID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetMeasureDictBoundsCount(instanceID, MeasureDictID)
            End If
        End Function

        Public Function GetMeasureDictBoundsItem(ByVal MeasureDictID As Integer, _
            ByVal ItemIndex As Integer) As Double
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetMeasureDictBoundsItem(instanceID, MeasureDictID, _
                    ItemIndex)
            End If
        End Function

        Public Function GetMeasureDictCoordinateSystem(ByVal MeasureDictID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetMeasureDictCoordinateSystem(instanceID, MeasureDictID)
            End If
        End Function

        Public Function GetMeasureDictDCSDict(ByVal MeasureDictID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetMeasureDictDCSDict(instanceID, MeasureDictID)
            End If
        End Function

        Public Function GetMeasureDictGCSDict(ByVal MeasureDictID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetMeasureDictGCSDict(instanceID, MeasureDictID)
            End If
        End Function

        Public Function GetMeasureDictGPTSCount(ByVal MeasureDictID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetMeasureDictGPTSCount(instanceID, MeasureDictID)
            End If
        End Function

        Public Function GetMeasureDictGPTSItem(ByVal MeasureDictID As Integer, _
            ByVal ItemIndex As Integer) As Double
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetMeasureDictGPTSItem(instanceID, MeasureDictID, _
                    ItemIndex)
            End If
        End Function

        Public Function GetMeasureDictLPTSCount(ByVal MeasureDictID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetMeasureDictLPTSCount(instanceID, MeasureDictID)
            End If
        End Function

        Public Function GetMeasureDictLPTSItem(ByVal MeasureDictID As Integer, _
            ByVal ItemIndex As Integer) As Double
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetMeasureDictLPTSItem(instanceID, MeasureDictID, _
                    ItemIndex)
            End If
        End Function

        Public Function GetMeasureDictPDU(ByVal MeasureDictID As Integer, ByVal UnitIndex As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetMeasureDictPDU(instanceID, MeasureDictID, UnitIndex)
            End If
        End Function

        Public Function GetNamedDestination(ByVal DestName As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetNamedDestination(instanceID, DestName)
            End If
        End Function

        Public Function GetNextOutline(ByVal OutlineID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetNextOutline(instanceID, OutlineID)
            End If
        End Function

        Public Function GetObjectCount() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetObjectCount(instanceID)
            End If
        End Function

        Public Function GetObjectDecodeError(ByVal ObjectNumber As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetObjectDecodeError(instanceID, ObjectNumber)
            End If
        End Function

        Public Function GetObjectToString(ByVal ObjectNumber As Integer) As Byte()
            If (dll Is Nothing) Then
                Return New Byte(-1) {}
            Else
                Dim data As IntPtr = dll.DebenuPDFLibraryGetObjectToString(instanceID, ObjectNumber)
                Dim size As Integer = dll.DebenuPDFLibraryAnsiStringResultLength(instanceID)
                Dim result As Byte() = New Byte(size - 1) {}
                Marshal.Copy(data, result, 0, size)
                Return result
            End If
        End Function

        Public Function GetOpenActionDestination() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetOpenActionDestination(instanceID)
            End If
        End Function

        Public Function GetOpenActionJavaScript() As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetOpenActionJavaScript(instanceID))
            End If
        End Function

        Public Function GetOptionalContentConfigCount() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetOptionalContentConfigCount(instanceID)
            End If
        End Function

        Public Function GetOptionalContentConfigLocked(ByVal OptionalContentConfigID As Integer, _
            ByVal OptionalContentGroupID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetOptionalContentConfigLocked(instanceID, _
                    OptionalContentConfigID, OptionalContentGroupID)
            End If
        End Function

        Public Function GetOptionalContentConfigOrderCount(ByVal OptionalContentConfigID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetOptionalContentConfigOrderCount(instanceID, _
                    OptionalContentConfigID)
            End If
        End Function

        Public Function GetOptionalContentConfigOrderItemID(ByVal OptionalContentConfigID As Integer, _
            ByVal ItemIndex As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetOptionalContentConfigOrderItemID(instanceID, _
                    OptionalContentConfigID, ItemIndex)
            End If
        End Function

        Public Function GetOptionalContentConfigOrderItemLabel( _
            ByVal OptionalContentConfigID As Integer, ByVal ItemIndex As Integer) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetOptionalContentConfigOrderItemLabel(instanceID, _
                    OptionalContentConfigID, ItemIndex))
            End If
        End Function

        Public Function GetOptionalContentConfigOrderItemLevel( _
            ByVal OptionalContentConfigID As Integer, ByVal ItemIndex As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetOptionalContentConfigOrderItemLevel(instanceID, _
                    OptionalContentConfigID, ItemIndex)
            End If
        End Function

        Public Function GetOptionalContentConfigOrderItemType( _
            ByVal OptionalContentConfigID As Integer, ByVal ItemIndex As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetOptionalContentConfigOrderItemType(instanceID, _
                    OptionalContentConfigID, ItemIndex)
            End If
        End Function

        Public Function GetOptionalContentConfigState(ByVal OptionalContentConfigID As Integer, _
            ByVal OptionalContentGroupID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetOptionalContentConfigState(instanceID, _
                    OptionalContentConfigID, OptionalContentGroupID)
            End If
        End Function

        Public Function GetOptionalContentGroupID(ByVal Index As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetOptionalContentGroupID(instanceID, Index)
            End If
        End Function

        Public Function GetOptionalContentGroupName(ByVal OptionalContentGroupID As Integer) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetOptionalContentGroupName(instanceID, _
                    OptionalContentGroupID))
            End If
        End Function

        Public Function GetOptionalContentGroupPrintable(ByVal OptionalContentGroupID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetOptionalContentGroupPrintable(instanceID, _
                    OptionalContentGroupID)
            End If
        End Function

        Public Function GetOptionalContentGroupVisible(ByVal OptionalContentGroupID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetOptionalContentGroupVisible(instanceID, _
                    OptionalContentGroupID)
            End If
        End Function

        Public Function GetOrigin() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetOrigin(instanceID)
            End If
        End Function

        Public Function GetOutlineActionID(ByVal OutlineID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetOutlineActionID(instanceID, OutlineID)
            End If
        End Function

        Public Function GetOutlineColor(ByVal OutlineID As Integer, ByVal ColorComponent As Integer) As Double
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetOutlineColor(instanceID, OutlineID, ColorComponent)
            End If
        End Function

        Public Function GetOutlineDest(ByVal OutlineID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetOutlineDest(instanceID, OutlineID)
            End If
        End Function

        Public Function GetOutlineID(ByVal Index As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetOutlineID(instanceID, Index)
            End If
        End Function

        Public Function GetOutlineJavaScript(ByVal OutlineID As Integer) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetOutlineJavaScript(instanceID, OutlineID))
            End If
        End Function

        Public Function GetOutlineObjectNumber(ByVal OutlineID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetOutlineObjectNumber(instanceID, OutlineID)
            End If
        End Function

        Public Function GetOutlineOpenFile(ByVal OutlineID As Integer) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetOutlineOpenFile(instanceID, OutlineID))
            End If
        End Function

        Public Function GetOutlinePage(ByVal OutlineID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetOutlinePage(instanceID, OutlineID)
            End If
        End Function

        Public Function GetOutlineStyle(ByVal OutlineID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetOutlineStyle(instanceID, OutlineID)
            End If
        End Function

        Public Function GetOutlineWebLink(ByVal OutlineID As Integer) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetOutlineWebLink(instanceID, OutlineID))
            End If
        End Function

        Public Function GetPageBox(ByVal BoxType As Integer, ByVal Dimension As Integer) As Double
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetPageBox(instanceID, BoxType, Dimension)
            End If
        End Function

        Public Function GetPageColorSpaces(ByVal Options As Integer) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetPageColorSpaces(instanceID, Options))
            End If
        End Function

        Public Function GetPageContentToString() As Byte()
            If (dll Is Nothing) Then
                Return New Byte(-1) {}
            Else
                Dim data As IntPtr = dll.DebenuPDFLibraryGetPageContentToString(instanceID)
                Dim size As Integer = dll.DebenuPDFLibraryAnsiStringResultLength(instanceID)
                Dim result As Byte() = New Byte(size - 1) {}
                Marshal.Copy(data, result, 0, size)
                Return result
            End If
        End Function

        Public Function GetPageImageList(ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetPageImageList(instanceID, Options)
            End If
        End Function

        Public Function GetPageJavaScript(ByVal ActionType As String) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetPageJavaScript(instanceID, ActionType))
            End If
        End Function

        Public Function GetPageLGIDictContent(ByVal DictIndex As Integer) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetPageLGIDictContent(instanceID, DictIndex))
            End If
        End Function

        Public Function GetPageLGIDictCount() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetPageLGIDictCount(instanceID)
            End If
        End Function

        Public Function GetPageLabel(ByVal Page As Integer) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetPageLabel(instanceID, Page))
            End If
        End Function

        Public Function GetPageLayout() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetPageLayout(instanceID)
            End If
        End Function

        Public Function GetPageMetricsToString(ByVal StartPage As Integer, ByVal EndPage As Integer, _
            ByVal Options As Integer) As Byte()
            If (dll Is Nothing) Then
                Return New Byte(-1) {}
            Else
                Dim data As IntPtr = dll.DebenuPDFLibraryGetPageMetricsToString(instanceID, _
                    StartPage, EndPage, Options)
                Dim size As Integer = dll.DebenuPDFLibraryAnsiStringResultLength(instanceID)
                Dim result As Byte() = New Byte(size - 1) {}
                Marshal.Copy(data, result, 0, size)
                Return result
            End If
        End Function

        Public Function GetPageMode() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetPageMode(instanceID)
            End If
        End Function

        Public Function GetPageText(ByVal ExtractOptions As Integer) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetPageText(instanceID, ExtractOptions))
            End If
        End Function

        Public Function GetPageViewPortCount() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetPageViewPortCount(instanceID)
            End If
        End Function

        Public Function GetPageViewPortID(ByVal Index As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetPageViewPortID(instanceID, Index)
            End If
        End Function

        Public Function GetParentOutline(ByVal OutlineID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetParentOutline(instanceID, OutlineID)
            End If
        End Function

        Public Function GetPrevOutline(ByVal OutlineID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetPrevOutline(instanceID, OutlineID)
            End If
        End Function

        Public Function GetPrintPreviewBitmapToString(ByVal PrinterName As String, _
            ByVal PreviewPage As Integer, ByVal PrintOptions As Integer, _
            ByVal MaxDimension As Integer, ByVal PreviewOptions As Integer) As Byte()
            If (dll Is Nothing) Then
                Return New Byte(-1) {}
            Else
                Dim data As IntPtr = dll.DebenuPDFLibraryGetPrintPreviewBitmapToString(instanceID, _
                    PrinterName, PreviewPage, PrintOptions, MaxDimension, PreviewOptions)
                Dim size As Integer = dll.DebenuPDFLibraryAnsiStringResultLength(instanceID)
                Dim result As Byte() = New Byte(size - 1) {}
                Marshal.Copy(data, result, 0, size)
                Return result
            End If
        End Function

        Public Function GetPrinterBins(ByVal PrinterName As String) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetPrinterBins(instanceID, PrinterName))
            End If
        End Function

        Public Function GetPrinterDevModeToString(ByVal PrinterName As String) As Byte()
            If (dll Is Nothing) Then
                Return New Byte(-1) {}
            Else
                Dim data As IntPtr = dll.DebenuPDFLibraryGetPrinterDevModeToString(instanceID, _
                    PrinterName)
                Dim size As Integer = dll.DebenuPDFLibraryAnsiStringResultLength(instanceID)
                Dim result As Byte() = New Byte(size - 1) {}
                Marshal.Copy(data, result, 0, size)
                Return result
            End If
        End Function

        Public Function GetPrinterMediaTypes(ByVal PrinterName As String) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetPrinterMediaTypes(instanceID, PrinterName))
            End If
        End Function

        Public Function GetPrinterNames() As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetPrinterNames(instanceID))
            End If
        End Function

        Public Function GetRenderScale() As Double
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetRenderScale(instanceID)
            End If
        End Function

        Public Function GetSignProcessByteRange(ByVal SignProcessID As Integer, _
            ByVal ArrayPosition As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetSignProcessByteRange(instanceID, SignProcessID, _
                    ArrayPosition)
            End If
        End Function

        Public Function GetSignProcessResult(ByVal SignProcessID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetSignProcessResult(instanceID, SignProcessID)
            End If
        End Function

        Public Function GetStringListCount(ByVal StringListID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetStringListCount(instanceID, StringListID)
            End If
        End Function

        Public Function GetStringListItem(ByVal StringListID As Integer, ByVal ItemIndex As Integer) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetStringListItem(instanceID, StringListID, ItemIndex))
            End If
        End Function

        Public Function GetTabOrderMode() As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetTabOrderMode(instanceID))
            End If
        End Function

        Public Function GetTableCellDblProperty(ByVal TableID As Integer, ByVal RowNumber As Integer, _
            ByVal ColumnNumber As Integer, ByVal Tag As Integer) As Double
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetTableCellDblProperty(instanceID, TableID, RowNumber, _
                    ColumnNumber, Tag)
            End If
        End Function

        Public Function GetTableCellIntProperty(ByVal TableID As Integer, ByVal RowNumber As Integer, _
            ByVal ColumnNumber As Integer, ByVal Tag As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetTableCellIntProperty(instanceID, TableID, RowNumber, _
                    ColumnNumber, Tag)
            End If
        End Function

        Public Function GetTableCellStrProperty(ByVal TableID As Integer, ByVal RowNumber As Integer, _
            ByVal ColumnNumber As Integer, ByVal Tag As Integer) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetTableCellStrProperty(instanceID, TableID, RowNumber, _
                    ColumnNumber, Tag))
            End If
        End Function

        Public Function GetTableColumnCount(ByVal TableID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetTableColumnCount(instanceID, TableID)
            End If
        End Function

        Public Function GetTableLastDrawnRow(ByVal TableID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetTableLastDrawnRow(instanceID, TableID)
            End If
        End Function

        Public Function GetTableRowCount(ByVal TableID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetTableRowCount(instanceID, TableID)
            End If
        End Function

        Public Function GetTempPath() As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetTempPath(instanceID))
            End If
        End Function

        Public Function GetTextAscent() As Double
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetTextAscent(instanceID)
            End If
        End Function

        Public Function GetTextBlockBound(ByVal TextBlockListID As Integer, ByVal Index As Integer, _
            ByVal BoundIndex As Integer) As Double
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetTextBlockBound(instanceID, TextBlockListID, Index, _
                    BoundIndex)
            End If
        End Function

        Public Function GetTextBlockCharWidth(ByVal TextBlockListID As Integer, _
            ByVal Index As Integer, ByVal CharIndex As Integer) As Double
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetTextBlockCharWidth(instanceID, TextBlockListID, Index, _
                    CharIndex)
            End If
        End Function

        Public Function GetTextBlockColor(ByVal TextBlockListID As Integer, ByVal Index As Integer, _
            ByVal ColorComponent As Integer) As Double
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetTextBlockColor(instanceID, TextBlockListID, Index, _
                    ColorComponent)
            End If
        End Function

        Public Function GetTextBlockColorType(ByVal TextBlockListID As Integer, _
            ByVal Index As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetTextBlockColorType(instanceID, TextBlockListID, Index)
            End If
        End Function

        Public Function GetTextBlockCount(ByVal TextBlockListID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetTextBlockCount(instanceID, TextBlockListID)
            End If
        End Function

        Public Function GetTextBlockFontName(ByVal TextBlockListID As Integer, _
            ByVal Index As Integer) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetTextBlockFontName(instanceID, TextBlockListID, _
                    Index))
            End If
        End Function

        Public Function GetTextBlockFontSize(ByVal TextBlockListID As Integer, _
            ByVal Index As Integer) As Double
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetTextBlockFontSize(instanceID, TextBlockListID, Index)
            End If
        End Function

        Public Function GetTextBlockText(ByVal TextBlockListID As Integer, ByVal Index As Integer) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetTextBlockText(instanceID, TextBlockListID, Index))
            End If
        End Function

        Public Function GetTextBound(ByVal Edge As Integer) As Double
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetTextBound(instanceID, Edge)
            End If
        End Function

        Public Function GetTextDescent() As Double
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetTextDescent(instanceID)
            End If
        End Function

        Public Function GetTextHeight() As Double
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetTextHeight(instanceID)
            End If
        End Function

        Public Function GetTextSize() As Double
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetTextSize(instanceID)
            End If
        End Function

        Public Function GetTextWidth(ByVal Text As String) As Double
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetTextWidth(instanceID, Text)
            End If
        End Function

        Public Function GetUnicodeCharactersFromEncoding(ByVal Encoding As Integer) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetUnicodeCharactersFromEncoding(instanceID, Encoding))
            End If
        End Function

        Public Function GetViewPortBBox(ByVal ViewPortID As Integer, ByVal Dimension As Integer) As Double
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetViewPortBBox(instanceID, ViewPortID, Dimension)
            End If
        End Function

        Public Function GetViewPortMeasureDict(ByVal ViewPortID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetViewPortMeasureDict(instanceID, ViewPortID)
            End If
        End Function

        Public Function GetViewPortName(ByVal ViewPortID As Integer) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetViewPortName(instanceID, ViewPortID))
            End If
        End Function

        Public Function GetViewPortPtDataDict(ByVal ViewPortID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetViewPortPtDataDict(instanceID, ViewPortID)
            End If
        End Function

        Public Function GetViewerPreferences(ByVal iOption As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetViewerPreferences(instanceID, iOption)
            End If
        End Function

        Public Function GetWrappedText(ByVal Width As Double, ByVal Delimiter As String, _
            ByVal Text As String) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetWrappedText(instanceID, Width, Delimiter, Text))
            End If
        End Function

        Public Function GetWrappedTextBreakString(ByVal Width As Double, ByVal Delimiter As String, _
            ByVal Text As String) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetWrappedTextBreakString(instanceID, Width, Delimiter, _
                    Text))
            End If
        End Function

        Public Function GetWrappedTextHeight(ByVal Width As Double, ByVal Text As String) As Double
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetWrappedTextHeight(instanceID, Width, Text)
            End If
        End Function

        Public Function GetWrappedTextLineCount(ByVal Width As Double, ByVal Text As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetWrappedTextLineCount(instanceID, Width, Text)
            End If
        End Function

        Public Function GetXFAFormFieldCount() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGetXFAFormFieldCount(instanceID)
            End If
        End Function

        Public Function GetXFAFormFieldName(ByVal Index As Integer) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetXFAFormFieldName(instanceID, Index))
            End If
        End Function

        Public Function GetXFAFormFieldNames(ByVal Delimiter As String) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetXFAFormFieldNames(instanceID, Delimiter))
            End If
        End Function

        Public Function GetXFAFormFieldValue(ByVal XFAFieldName As String) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGetXFAFormFieldValue(instanceID, XFAFieldName))
            End If
        End Function

        Public Function GetXFAToString(ByVal Options As Integer) As Byte()
            If (dll Is Nothing) Then
                Return New Byte(-1) {}
            Else
                Dim data As IntPtr = dll.DebenuPDFLibraryGetXFAToString(instanceID, Options)
                Dim size As Integer = dll.DebenuPDFLibraryAnsiStringResultLength(instanceID)
                Dim result As Byte() = New Byte(size - 1) {}
                Marshal.Copy(data, result, 0, size)
                Return result
            End If
        End Function

        Public Function GlobalJavaScriptCount() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryGlobalJavaScriptCount(instanceID)
            End If
        End Function

        Public Function GlobalJavaScriptPackageName(ByVal Index As Integer) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryGlobalJavaScriptPackageName(instanceID, Index))
            End If
        End Function

        Public Function HasFontResources() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryHasFontResources(instanceID)
            End If
        End Function

        Public Function HasPageBox(ByVal BoxType As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryHasPageBox(instanceID, BoxType)
            End If
        End Function

        Public Function HidePage() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryHidePage(instanceID)
            End If
        End Function

        Public Function ImageCount() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryImageCount(instanceID)
            End If
        End Function

        Public Function ImageFillColor() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryImageFillColor(instanceID)
            End If
        End Function

        Public Function ImageHeight() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryImageHeight(instanceID)
            End If
        End Function

        Public Function ImageHorizontalResolution() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryImageHorizontalResolution(instanceID)
            End If
        End Function

        Public Function ImageResolutionUnits() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryImageResolutionUnits(instanceID)
            End If
        End Function

        Public Function ImageType() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryImageType(instanceID)
            End If
        End Function

        Public Function ImageVerticalResolution() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryImageVerticalResolution(instanceID)
            End If
        End Function

        Public Function ImageWidth() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryImageWidth(instanceID)
            End If
        End Function

        Public Function ImportEMFFromFile(ByVal FileName As String, ByVal FontOptions As Integer, _
            ByVal GeneralOptions As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryImportEMFFromFile(instanceID, FileName, FontOptions, _
                    GeneralOptions)
            End If
        End Function

        Public Function InsertPages(ByVal StartPage As Integer, ByVal PageCount As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryInsertPages(instanceID, StartPage, PageCount)
            End If
        End Function

        Public Function InsertTableColumns(ByVal TableID As Integer, ByVal Position As Integer, _
            ByVal NewColumnCount As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryInsertTableColumns(instanceID, TableID, Position, _
                    NewColumnCount)
            End If
        End Function

        Public Function InsertTableRows(ByVal TableID As Integer, ByVal Position As Integer, _
            ByVal NewRowCount As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryInsertTableRows(instanceID, TableID, Position, _
                    NewRowCount)
            End If
        End Function

        Public Function IsAnnotFormField(ByVal Index As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryIsAnnotFormField(instanceID, Index)
            End If
        End Function

        Public Function IsTaggedPDF() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryIsTaggedPDF(instanceID)
            End If
        End Function

        Public Function LastErrorCode() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryLastErrorCode(instanceID)
            End If
        End Function

        Public Function LastRenderError() As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryLastRenderError(instanceID))
            End If
        End Function

        Public Function LibraryVersion() As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryLibraryVersion(instanceID))
            End If
        End Function

        Public Function LicenseInfo() As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryLicenseInfo(instanceID))
            End If
        End Function

        Public Function Linearized() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryLinearized(instanceID)
            End If
        End Function

        Public Function LoadFromCanvasDC(ByVal DPI As Double, ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryLoadFromCanvasDC(instanceID, DPI, Options)
            End If
        End Function

        Public Function LoadFromFile(ByVal FileName As String, ByVal Password As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryLoadFromFile(instanceID, FileName, Password)
            End If
        End Function

        Public Function LoadFromString(ByVal Source As Byte(), ByVal Password As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Dim gch As GCHandle = GCHandle.Alloc(Source, GCHandleType.Pinned)
                Dim bufferID As IntPtr = dll.DebenuPDFLibraryCreateBuffer(instanceID, Source.Length)
                dll.DebenuPDFLibraryAddToBuffer(instanceID, bufferID, gch.AddrOfPinnedObject(), Source.Length)
                Dim result As Integer = dll.DebenuPDFLibraryLoadFromString(instanceID, bufferID, _
                    Password)
                dll.DebenuPDFLibraryReleaseBuffer(instanceID, bufferID)
                gch.Free()
                Return result
            End If
        End Function

        Public Function LoadState() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryLoadState(instanceID)
            End If
        End Function

        Public Function MergeDocument(ByVal DocumentID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryMergeDocument(instanceID, DocumentID)
            End If
        End Function

        Public Function MergeFileList(ByVal ListName As String, ByVal OutputFileName As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryMergeFileList(instanceID, ListName, OutputFileName)
            End If
        End Function

        Public Function MergeFileListFast(ByVal ListName As String, ByVal OutputFileName As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryMergeFileListFast(instanceID, ListName, OutputFileName)
            End If
        End Function

        Public Function MergeFiles(ByVal FirstFileName As String, ByVal SecondFileName As String, _
            ByVal OutputFileName As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryMergeFiles(instanceID, FirstFileName, SecondFileName, _
                    OutputFileName)
            End If
        End Function

        Public Function MergeTableCells(ByVal TableID As Integer, ByVal FirstRow As Integer, _
            ByVal FirstColumn As Integer, ByVal LastRow As Integer, ByVal LastColumn As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryMergeTableCells(instanceID, TableID, FirstRow, _
                    FirstColumn, LastRow, LastColumn)
            End If
        End Function

        Public Function MoveContentStream(ByVal FromPosition As Integer, ByVal ToPosition As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryMoveContentStream(instanceID, FromPosition, ToPosition)
            End If
        End Function

        Public Function MoveOutlineAfter(ByVal OutlineID As Integer, ByVal SiblingID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryMoveOutlineAfter(instanceID, OutlineID, SiblingID)
            End If
        End Function

        Public Function MoveOutlineBefore(ByVal OutlineID As Integer, ByVal SiblingID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryMoveOutlineBefore(instanceID, OutlineID, SiblingID)
            End If
        End Function

        Public Function MovePage(ByVal NewPosition As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryMovePage(instanceID, NewPosition)
            End If
        End Function

        Public Function MovePath(ByVal NewX As Double, ByVal NewY As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryMovePath(instanceID, NewX, NewY)
            End If
        End Function

        Public Function MultiplyScale(ByVal MultScaleBy As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryMultiplyScale(instanceID, MultScaleBy)
            End If
        End Function

        Public Function NewChildFormField(ByVal Index As Integer, ByVal Title As String, _
            ByVal FieldType As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryNewChildFormField(instanceID, Index, Title, FieldType)
            End If
        End Function

        Public Function NewContentStream() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryNewContentStream(instanceID)
            End If
        End Function

        Public Function NewCustomPrinter(ByVal OriginalPrinterName As String) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryNewCustomPrinter(instanceID, OriginalPrinterName))
            End If
        End Function

        Public Function NewDestination(ByVal DestPage As Integer, ByVal Zoom As Integer, _
            ByVal DestType As Integer, ByVal Left As Double, ByVal Top As Double, _
            ByVal Right As Double, ByVal Bottom As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryNewDestination(instanceID, DestPage, Zoom, DestType, Left, _
                    Top, Right, Bottom)
            End If
        End Function

        Public Function NewDocument() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryNewDocument(instanceID)
            End If
        End Function

        Public Function NewFormField(ByVal Title As String, ByVal FieldType As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryNewFormField(instanceID, Title, FieldType)
            End If
        End Function

        Public Function NewInternalPrinterObject(ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryNewInternalPrinterObject(instanceID, Options)
            End If
        End Function

        Public Function NewNamedDestination(ByVal DestName As String, ByVal DestID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryNewNamedDestination(instanceID, DestName, DestID)
            End If
        End Function

        Public Function NewOptionalContentGroup(ByVal GroupName As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryNewOptionalContentGroup(instanceID, GroupName)
            End If
        End Function

        Public Function NewOutline(ByVal Parent As Integer, ByVal Title As String, _
            ByVal DestPage As Integer, ByVal DestPosition As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryNewOutline(instanceID, Parent, Title, DestPage, _
                    DestPosition)
            End If
        End Function

        Public Function NewPage() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryNewPage(instanceID)
            End If
        End Function

        Public Function NewPageFromCanvasDC(ByVal DPI As Double, ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryNewPageFromCanvasDC(instanceID, DPI, Options)
            End If
        End Function

        Public Function NewPages(ByVal PageCount As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryNewPages(instanceID, PageCount)
            End If
        End Function

        Public Function NewPostScriptXObject(ByVal PS As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryNewPostScriptXObject(instanceID, PS)
            End If
        End Function

        Public Function NewRGBAxialShader(ByVal ShaderName As String, ByVal StartX As Double, _
            ByVal StartY As Double, ByVal StartRed As Double, ByVal StartGreen As Double, _
            ByVal StartBlue As Double, ByVal EndX As Double, ByVal EndY As Double, _
            ByVal EndRed As Double, ByVal EndGreen As Double, ByVal EndBlue As Double, _
            ByVal Extend As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryNewRGBAxialShader(instanceID, ShaderName, StartX, StartY, _
                    StartRed, StartGreen, StartBlue, EndX, EndY, EndRed, EndGreen, EndBlue, Extend)
            End If
        End Function

        Public Function NewSignProcessFromFile(ByVal InputFile As String, ByVal Password As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryNewSignProcessFromFile(instanceID, InputFile, Password)
            End If
        End Function

        Public Function NewSignProcessFromString(ByVal Source As Byte(), ByVal Password As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Dim gch As GCHandle = GCHandle.Alloc(Source, GCHandleType.Pinned)
                Dim bufferID As IntPtr = dll.DebenuPDFLibraryCreateBuffer(instanceID, Source.Length)
                dll.DebenuPDFLibraryAddToBuffer(instanceID, bufferID, gch.AddrOfPinnedObject(), Source.Length)
                Dim result As Integer = dll.DebenuPDFLibraryNewSignProcessFromString(instanceID, _
                    bufferID, Password)
                dll.DebenuPDFLibraryReleaseBuffer(instanceID, bufferID)
                gch.Free()
                Return result
            End If
        End Function

        Public Function NewStaticOutline(ByVal Parent As Integer, ByVal Title As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryNewStaticOutline(instanceID, Parent, Title)
            End If
        End Function

        Public Function NewTilingPatternFromCapturedPage(ByVal PatternName As String, _
            ByVal CaptureID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryNewTilingPatternFromCapturedPage(instanceID, PatternName, _
                    CaptureID)
            End If
        End Function

        Public Function NoEmbedFontListAdd(ByVal FontName As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryNoEmbedFontListAdd(instanceID, FontName)
            End If
        End Function

        Public Function NoEmbedFontListCount() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryNoEmbedFontListCount(instanceID)
            End If
        End Function

        Public Function NoEmbedFontListGet(ByVal Index As Integer) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryNoEmbedFontListGet(instanceID, Index))
            End If
        End Function

        Public Function NoEmbedFontListRemoveAll() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryNoEmbedFontListRemoveAll(instanceID)
            End If
        End Function

        Public Function NoEmbedFontListRemoveIndex(ByVal Index As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryNoEmbedFontListRemoveIndex(instanceID, Index)
            End If
        End Function

        Public Function NoEmbedFontListRemoveName(ByVal FontName As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryNoEmbedFontListRemoveName(instanceID, FontName)
            End If
        End Function

        Public Function NormalizePage(ByVal NormalizeOptions As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryNormalizePage(instanceID, NormalizeOptions)
            End If
        End Function

        Public Function OpenOutline(ByVal OutlineID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryOpenOutline(instanceID, OutlineID)
            End If
        End Function

        Public Function OptionalContentGroupCount() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryOptionalContentGroupCount(instanceID)
            End If
        End Function

        Public Function OutlineCount() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryOutlineCount(instanceID)
            End If
        End Function

        Public Function OutlineTitle(ByVal OutlineID As Integer) As String
            if (dll Is Nothing) Then
                Return ""
            Else
                Return SR(dll.DebenuPDFLibraryOutlineTitle(instanceID, OutlineID))
            End If
        End Function

        Public Function PageCount() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryPageCount(instanceID)
            End If
        End Function

        Public Function PageHasFontResources(ByVal PageNumber As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryPageHasFontResources(instanceID, PageNumber)
            End If
        End Function

        Public Function PageHeight() As Double
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryPageHeight(instanceID)
            End If
        End Function

        Public Function PageJavaScriptAction(ByVal ActionType As String, ByVal JavaScript As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryPageJavaScriptAction(instanceID, ActionType, JavaScript)
            End If
        End Function

        Public Function PageRotation() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryPageRotation(instanceID)
            End If
        End Function

        Public Function PageWidth() As Double
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryPageWidth(instanceID)
            End If
        End Function

        Public Function PrintDocument(ByVal PrinterName As String, ByVal StartPage As Integer, _
            ByVal EndPage As Integer, ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryPrintDocument(instanceID, PrinterName, StartPage, EndPage, _
                    Options)
            End If
        End Function

        Public Function PrintDocumentToFile(ByVal PrinterName As String, ByVal StartPage As Integer, _
            ByVal EndPage As Integer, ByVal Options As Integer, ByVal FileName As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryPrintDocumentToFile(instanceID, PrinterName, StartPage, _
                    EndPage, Options, FileName)
            End If
        End Function

        Public Function PrintOptions(ByVal PageScaling As Integer, ByVal AutoRotateCenter As Integer, _
            ByVal Title As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryPrintOptions(instanceID, PageScaling, AutoRotateCenter, _
                    Title)
            End If
        End Function

        Public Function PrintPages(ByVal PrinterName As String, ByVal PageRanges As String, _
            ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryPrintPages(instanceID, PrinterName, PageRanges, Options)
            End If
        End Function

        Public Function PrintPagesToFile(ByVal PrinterName As String, ByVal PageRanges As String, _
            ByVal Options As Integer, ByVal FileName As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryPrintPagesToFile(instanceID, PrinterName, PageRanges, _
                    Options, FileName)
            End If
        End Function

        Public Function ReleaseImage(ByVal ImageID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryReleaseImage(instanceID, ImageID)
            End If
        End Function

        Public Function ReleaseImageList(ByVal ImageListID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryReleaseImageList(instanceID, ImageListID)
            End If
        End Function

        Public Function ReleaseSignProcess(ByVal SignProcessID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryReleaseSignProcess(instanceID, SignProcessID)
            End If
        End Function

        Public Function ReleaseStringList(ByVal StringListID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryReleaseStringList(instanceID, StringListID)
            End If
        End Function

        Public Function ReleaseTextBlocks(ByVal TextBlockListID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryReleaseTextBlocks(instanceID, TextBlockListID)
            End If
        End Function

        Public Function RemoveAppearanceStream(ByVal Index As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryRemoveAppearanceStream(instanceID, Index)
            End If
        End Function

        Public Function RemoveCustomInformation(ByVal Key As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryRemoveCustomInformation(instanceID, Key)
            End If
        End Function

        Public Function RemoveDocument(ByVal DocumentID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryRemoveDocument(instanceID, DocumentID)
            End If
        End Function

        Public Function RemoveEmbeddedFile(ByVal Index As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryRemoveEmbeddedFile(instanceID, Index)
            End If
        End Function

        Public Function RemoveFormFieldBackgroundColor(ByVal Index As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryRemoveFormFieldBackgroundColor(instanceID, Index)
            End If
        End Function

        Public Function RemoveFormFieldBorderColor(ByVal Index As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryRemoveFormFieldBorderColor(instanceID, Index)
            End If
        End Function

        Public Function RemoveFormFieldChoiceSub(ByVal Index As Integer, ByVal Subname As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryRemoveFormFieldChoiceSub(instanceID, Index, Subname)
            End If
        End Function

        Public Function RemoveGlobalJavaScript(ByVal PackageName As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryRemoveGlobalJavaScript(instanceID, PackageName)
            End If
        End Function

        Public Function RemoveOpenAction() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryRemoveOpenAction(instanceID)
            End If
        End Function

        Public Function RemoveOutline(ByVal OutlineID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryRemoveOutline(instanceID, OutlineID)
            End If
        End Function

        Public Function RemovePageBox(ByVal BoxType As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryRemovePageBox(instanceID, BoxType)
            End If
        End Function

        Public Function RemoveSharedContentStreams() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryRemoveSharedContentStreams(instanceID)
            End If
        End Function

        Public Function RemoveStyle(ByVal StyleName As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryRemoveStyle(instanceID, StyleName)
            End If
        End Function

        Public Function RemoveUsageRights() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryRemoveUsageRights(instanceID)
            End If
        End Function

        Public Function RemoveXFAEntries(ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryRemoveXFAEntries(instanceID, Options)
            End If
        End Function

        Public Function RenderAsMultipageTIFFToFile(ByVal DPI As Double, ByVal PageRanges As String, _
            ByVal ImageOptions As Integer, ByVal OutputOptions As Integer, ByVal FileName As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryRenderAsMultipageTIFFToFile(instanceID, DPI, PageRanges, _
                    ImageOptions, OutputOptions, FileName)
            End If
        End Function

        Public Function RenderDocumentToFile(ByVal DPI As Double, ByVal StartPage As Integer, _
            ByVal EndPage As Integer, ByVal Options As Integer, ByVal FileName As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryRenderDocumentToFile(instanceID, DPI, StartPage, EndPage, _
                    Options, FileName)
            End If
        End Function

        Public Function RenderPageToDC(ByVal DPI As Double, ByVal Page As Integer, _
            ByVal DC As IntPtr) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryRenderPageToDC(instanceID, DPI, Page, DC)
            End If
        End Function

        Public Function RenderPageToFile(ByVal DPI As Double, ByVal Page As Integer, _
            ByVal Options As Integer, ByVal FileName As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryRenderPageToFile(instanceID, DPI, Page, Options, FileName)
            End If
        End Function

        Public Function RenderPageToString(ByVal DPI As Double, ByVal Page As Integer, _
            ByVal Options As Integer) As Byte()
            If (dll Is Nothing) Then
                Return New Byte(-1) {}
            Else
                Dim data As IntPtr = dll.DebenuPDFLibraryRenderPageToString(instanceID, DPI, Page, _
                    Options)
                Dim size As Integer = dll.DebenuPDFLibraryAnsiStringResultLength(instanceID)
                Dim result As Byte() = New Byte(size - 1) {}
                Marshal.Copy(data, result, 0, size)
                Return result
            End If
        End Function

        Public Function ReplaceFonts() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryReplaceFonts(instanceID)
            End If
        End Function

        Public Function ReplaceImage(ByVal OriginalImageID As Integer, ByVal NewImageID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryReplaceImage(instanceID, OriginalImageID, NewImageID)
            End If
        End Function

        Public Function ReplaceTag(ByVal Tag As String, ByVal NewValue As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryReplaceTag(instanceID, Tag, NewValue)
            End If
        End Function

        Public Function RequestPrinterStatus(ByVal StatusCommand As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryRequestPrinterStatus(instanceID, StatusCommand)
            End If
        End Function

        Public Function RetrieveCustomDataToFile(ByVal Key As String, ByVal FileName As String, _
            ByVal Location As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryRetrieveCustomDataToFile(instanceID, Key, FileName, _
                    Location)
            End If
        End Function

        Public Function RetrieveCustomDataToString(ByVal Key As String, ByVal Location As Integer) As Byte()
            If (dll Is Nothing) Then
                Return New Byte(-1) {}
            Else
                Dim data As IntPtr = dll.DebenuPDFLibraryRetrieveCustomDataToString(instanceID, Key, _
                    Location)
                Dim size As Integer = dll.DebenuPDFLibraryAnsiStringResultLength(instanceID)
                Dim result As Byte() = New Byte(size - 1) {}
                Marshal.Copy(data, result, 0, size)
                Return result
            End If
        End Function

        Public Function ReverseImage(ByVal Reset As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryReverseImage(instanceID, Reset)
            End If
        End Function

        Public Function RotatePage(ByVal PageRotation As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryRotatePage(instanceID, PageRotation)
            End If
        End Function

        Public Function SaveFontToFile(ByVal FileName As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySaveFontToFile(instanceID, FileName)
            End If
        End Function

        Public Function SaveImageListItemDataToFile(ByVal ImageListID As Integer, _
            ByVal ImageIndex As Integer, ByVal Options As Integer, ByVal ImageFileName As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySaveImageListItemDataToFile(instanceID, ImageListID, _
                    ImageIndex, Options, ImageFileName)
            End If
        End Function

        Public Function SaveImageToFile(ByVal FileName As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySaveImageToFile(instanceID, FileName)
            End If
        End Function

        Public Function SaveImageToString() As Byte()
            If (dll Is Nothing) Then
                Return New Byte(-1) {}
            Else
                Dim data As IntPtr = dll.DebenuPDFLibrarySaveImageToString(instanceID)
                Dim size As Integer = dll.DebenuPDFLibraryAnsiStringResultLength(instanceID)
                Dim result As Byte() = New Byte(size - 1) {}
                Marshal.Copy(data, result, 0, size)
                Return result
            End If
        End Function

        Public Function SaveState() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySaveState(instanceID)
            End If
        End Function

        Public Function SaveStyle(ByVal StyleName As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySaveStyle(instanceID, StyleName)
            End If
        End Function

        Public Function SaveToFile(ByVal FileName As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySaveToFile(instanceID, FileName)
            End If
        End Function

        Public Function SaveToString() As Byte()
            If (dll Is Nothing) Then
                Return New Byte(-1) {}
            Else
                Dim data As IntPtr = dll.DebenuPDFLibrarySaveToString(instanceID)
                Dim size As Integer = dll.DebenuPDFLibraryAnsiStringResultLength(instanceID)
                Dim result As Byte() = New Byte(size - 1) {}
                Marshal.Copy(data, result, 0, size)
                Return result
            End If
        End Function

        Public Function SecurityInfo(ByVal SecurityItem As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySecurityInfo(instanceID, SecurityItem)
            End If
        End Function

        Public Function SelectContentStream(ByVal NewIndex As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySelectContentStream(instanceID, NewIndex)
            End If
        End Function

        Public Function SelectDocument(ByVal DocumentID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySelectDocument(instanceID, DocumentID)
            End If
        End Function

        Public Function SelectFont(ByVal FontID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySelectFont(instanceID, FontID)
            End If
        End Function

        Public Function SelectImage(ByVal ImageID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySelectImage(instanceID, ImageID)
            End If
        End Function

        Public Function SelectPage(ByVal PageNumber As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySelectPage(instanceID, PageNumber)
            End If
        End Function

        Public Function SelectRenderer(ByVal RendererID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySelectRenderer(instanceID, RendererID)
            End If
        End Function

        Public Function SelectedDocument() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySelectedDocument(instanceID)
            End If
        End Function

        Public Function SelectedFont() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySelectedFont(instanceID)
            End If
        End Function

        Public Function SelectedImage() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySelectedImage(instanceID)
            End If
        End Function

        Public Function SelectedPage() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySelectedPage(instanceID)
            End If
        End Function

        Public Function SetActionURL(ByVal ActionID As Integer, ByVal NewURL As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetActionURL(instanceID, ActionID, NewURL)
            End If
        End Function

        Public Function SetAnnotBorderColor(ByVal Index As Integer, ByVal Red As Double, _
            ByVal Green As Double, ByVal Blue As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetAnnotBorderColor(instanceID, Index, Red, Green, Blue)
            End If
        End Function

        Public Function SetAnnotBorderStyle(ByVal Index As Integer, ByVal Width As Double, _
            ByVal Style As Integer, ByVal DashOn As Double, ByVal DashOff As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetAnnotBorderStyle(instanceID, Index, Width, Style, _
                    DashOn, DashOff)
            End If
        End Function

        Public Function SetAnnotContents(ByVal Index As Integer, ByVal NewContents As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetAnnotContents(instanceID, Index, NewContents)
            End If
        End Function

        Public Function SetAnnotDblProperty(ByVal Index As Integer, ByVal Tag As Integer, _
            ByVal NewValue As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetAnnotDblProperty(instanceID, Index, Tag, NewValue)
            End If
        End Function

        Public Function SetAnnotIntProperty(ByVal Index As Integer, ByVal Tag As Integer, _
            ByVal NewValue As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetAnnotIntProperty(instanceID, Index, Tag, NewValue)
            End If
        End Function

        Public Function SetAnnotQuadPoints(ByVal Index As Integer, ByVal QuadNumber As Integer, _
            ByVal X1 As Double, ByVal Y1 As Double, ByVal X2 As Double, ByVal Y2 As Double, _
            ByVal X3 As Double, ByVal Y3 As Double, ByVal X4 As Double, ByVal Y4 As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetAnnotQuadPoints(instanceID, Index, QuadNumber, X1, Y1, _
                    X2, Y2, X3, Y3, X4, Y4)
            End If
        End Function

        Public Function SetAnnotRect(ByVal Index As Integer, ByVal Left As Double, _
            ByVal Top As Double, ByVal Width As Double, ByVal Height As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetAnnotRect(instanceID, Index, Left, Top, Width, Height)
            End If
        End Function

        Public Function SetAnnotStrProperty(ByVal Index As Integer, ByVal Tag As Integer, _
            ByVal NewValue As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetAnnotStrProperty(instanceID, Index, Tag, NewValue)
            End If
        End Function

        Public Function SetAnsiMode(ByVal NewAnsiMode As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetAnsiMode(instanceID, NewAnsiMode)
            End If
        End Function

        Public Function SetBaseURL(ByVal NewBaseURL As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetBaseURL(instanceID, NewBaseURL)
            End If
        End Function

        Public Function SetBlendMode(ByVal BlendMode As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetBlendMode(instanceID, BlendMode)
            End If
        End Function

        Public Function SetBreakString(ByVal NewBreakString As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetBreakString(instanceID, NewBreakString)
            End If
        End Function

        Public Function SetCSDictEPSG(ByVal CSDictID As Integer, ByVal NewEPSG As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetCSDictEPSG(instanceID, CSDictID, NewEPSG)
            End If
        End Function

        Public Function SetCSDictType(ByVal CSDictID As Integer, ByVal NewDictType As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetCSDictType(instanceID, CSDictID, NewDictType)
            End If
        End Function

        Public Function SetCSDictWKT(ByVal CSDictID As Integer, ByVal NewWKT As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetCSDictWKT(instanceID, CSDictID, NewWKT)
            End If
        End Function

        Public Function SetCairoFileName(ByVal FileName As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetCairoFileName(instanceID, FileName)
            End If
        End Function

        Public Function SetCapturedPageOptional(ByVal CaptureID As Integer, _
            ByVal OptionalContentGroupID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetCapturedPageOptional(instanceID, CaptureID, _
                    OptionalContentGroupID)
            End If
        End Function

        Public Function SetCapturedPageTransparencyGroup(ByVal CaptureID As Integer, _
            ByVal CS As Integer, ByVal Isolate As Integer, ByVal Knockout As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetCapturedPageTransparencyGroup(instanceID, CaptureID, _
                    CS, Isolate, Knockout)
            End If
        End Function

        Public Function SetCatalogInformation(ByVal Key As String, ByVal NewValue As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetCatalogInformation(instanceID, Key, NewValue)
            End If
        End Function

        Public Function SetCharWidth(ByVal CharCode As Integer, ByVal NewWidth As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetCharWidth(instanceID, CharCode, NewWidth)
            End If
        End Function

        Public Function SetClippingPath() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetClippingPath(instanceID)
            End If
        End Function

        Public Function SetClippingPathEvenOdd() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetClippingPathEvenOdd(instanceID)
            End If
        End Function

        Public Function SetCompatibility(ByVal CompatibilityItem As Integer, _
            ByVal CompatibilityMode As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetCompatibility(instanceID, CompatibilityItem, _
                    CompatibilityMode)
            End If
        End Function

        Public Function SetContentStreamFromString(ByVal Source As Byte()) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Dim gch As GCHandle = GCHandle.Alloc(Source, GCHandleType.Pinned)
                Dim bufferID As IntPtr = dll.DebenuPDFLibraryCreateBuffer(instanceID, Source.Length)
                dll.DebenuPDFLibraryAddToBuffer(instanceID, bufferID, gch.AddrOfPinnedObject(), Source.Length)
                Dim result As Integer = dll.DebenuPDFLibrarySetContentStreamFromString(instanceID, _
                    bufferID)
                dll.DebenuPDFLibraryReleaseBuffer(instanceID, bufferID)
                gch.Free()
                Return result
            End If
        End Function

        Public Function SetContentStreamOptional(ByVal OptionalContentGroupID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetContentStreamOptional(instanceID, _
                    OptionalContentGroupID)
            End If
        End Function

        Public Function SetCropBox(ByVal Left As Double, ByVal Top As Double, ByVal Width As Double, _
            ByVal Height As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetCropBox(instanceID, Left, Top, Width, Height)
            End If
        End Function

        Public Function SetCustomInformation(ByVal Key As String, ByVal NewValue As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetCustomInformation(instanceID, Key, NewValue)
            End If
        End Function

        Public Function SetCustomLineDash(ByVal DashPattern As String, ByVal DashPhase As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetCustomLineDash(instanceID, DashPattern, DashPhase)
            End If
        End Function

        Public Function SetDPLRFileName(ByVal FileName As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetDPLRFileName(instanceID, FileName)
            End If
        End Function

        Public Function SetDestProperties(ByVal DestID As Integer, ByVal Zoom As Integer, _
            ByVal DestType As Integer, ByVal Left As Double, ByVal Top As Double, _
            ByVal Right As Double, ByVal Bottom As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetDestProperties(instanceID, DestID, Zoom, DestType, _
                    Left, Top, Right, Bottom)
            End If
        End Function

        Public Function SetDestValue(ByVal DestID As Integer, ByVal ValueKey As Integer, _
            ByVal NewValue As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetDestValue(instanceID, DestID, ValueKey, NewValue)
            End If
        End Function

        Public Function SetDocumentMetadata(ByVal XMP As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetDocumentMetadata(instanceID, XMP)
            End If
        End Function

        Public Function SetEmbeddedFileStrProperty(ByVal Index As Integer, ByVal Tag As Integer, _
            ByVal NewValue As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetEmbeddedFileStrProperty(instanceID, Index, Tag, _
                    NewValue)
            End If
        End Function

        Public Function SetFillColor(ByVal Red As Double, ByVal Green As Double, _
            ByVal Blue As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFillColor(instanceID, Red, Green, Blue)
            End If
        End Function

        Public Function SetFillColorCMYK(ByVal C As Double, ByVal M As Double, ByVal Y As Double, _
            ByVal K As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFillColorCMYK(instanceID, C, M, Y, K)
            End If
        End Function

        Public Function SetFillColorSep(ByVal ColorName As String, ByVal Tint As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFillColorSep(instanceID, ColorName, Tint)
            End If
        End Function

        Public Function SetFillShader(ByVal ShaderName As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFillShader(instanceID, ShaderName)
            End If
        End Function

        Public Function SetFillTilingPattern(ByVal PatternName As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFillTilingPattern(instanceID, PatternName)
            End If
        End Function

        Public Function SetFindImagesMode(ByVal NewFindImagesMode As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFindImagesMode(instanceID, NewFindImagesMode)
            End If
        End Function

        Public Function SetFontEncoding(ByVal Encoding As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFontEncoding(instanceID, Encoding)
            End If
        End Function

        Public Function SetFontFlags(ByVal Fixed As Integer, ByVal Serif As Integer, _
            ByVal Symbolic As Integer, ByVal Script As Integer, ByVal Italic As Integer, _
            ByVal AllCap As Integer, ByVal SmallCap As Integer, ByVal ForceBold As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFontFlags(instanceID, Fixed, Serif, Symbolic, Script, _
                    Italic, AllCap, SmallCap, ForceBold)
            End If
        End Function

        Public Function SetFormFieldAlignment(ByVal Index As Integer, ByVal Alignment As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFormFieldAlignment(instanceID, Index, Alignment)
            End If
        End Function

        Public Function SetFormFieldAnnotFlags(ByVal Index As Integer, ByVal NewFlags As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFormFieldAnnotFlags(instanceID, Index, NewFlags)
            End If
        End Function

        Public Function SetFormFieldBackgroundColor(ByVal Index As Integer, ByVal Red As Double, _
            ByVal Green As Double, ByVal Blue As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFormFieldBackgroundColor(instanceID, Index, Red, Green, _
                    Blue)
            End If
        End Function

        Public Function SetFormFieldBackgroundColorCMYK(ByVal Index As Integer, ByVal C As Double, _
            ByVal M As Double, ByVal Y As Double, ByVal K As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFormFieldBackgroundColorCMYK(instanceID, Index, C, M, _
                    Y, K)
            End If
        End Function

        Public Function SetFormFieldBackgroundColorGray(ByVal Index As Integer, ByVal Gray As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFormFieldBackgroundColorGray(instanceID, Index, Gray)
            End If
        End Function

        Public Function SetFormFieldBackgroundColorSep(ByVal Index As Integer, _
            ByVal ColorName As String, ByVal Tint As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFormFieldBackgroundColorSep(instanceID, Index, _
                    ColorName, Tint)
            End If
        End Function

        Public Function SetFormFieldBorderColor(ByVal Index As Integer, ByVal Red As Double, _
            ByVal Green As Double, ByVal Blue As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFormFieldBorderColor(instanceID, Index, Red, Green, _
                    Blue)
            End If
        End Function

        Public Function SetFormFieldBorderColorCMYK(ByVal Index As Integer, ByVal C As Double, _
            ByVal M As Double, ByVal Y As Double, ByVal K As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFormFieldBorderColorCMYK(instanceID, Index, C, M, Y, K)
            End If
        End Function

        Public Function SetFormFieldBorderColorGray(ByVal Index As Integer, ByVal Gray As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFormFieldBorderColorGray(instanceID, Index, Gray)
            End If
        End Function

        Public Function SetFormFieldBorderColorSep(ByVal Index As Integer, ByVal ColorName As String, _
            ByVal Tint As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFormFieldBorderColorSep(instanceID, Index, ColorName, _
                    Tint)
            End If
        End Function

        Public Function SetFormFieldBorderStyle(ByVal Index As Integer, ByVal Width As Double, _
            ByVal Style As Integer, ByVal DashOn As Double, ByVal DashOff As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFormFieldBorderStyle(instanceID, Index, Width, Style, _
                    DashOn, DashOff)
            End If
        End Function

        Public Function SetFormFieldBounds(ByVal Index As Integer, ByVal Left As Double, _
            ByVal Top As Double, ByVal Width As Double, ByVal Height As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFormFieldBounds(instanceID, Index, Left, Top, Width, _
                    Height)
            End If
        End Function

        Public Function SetFormFieldCalcOrder(ByVal Index As Integer, ByVal Order As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFormFieldCalcOrder(instanceID, Index, Order)
            End If
        End Function

        Public Function SetFormFieldCaption(ByVal Index As Integer, ByVal NewCaption As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFormFieldCaption(instanceID, Index, NewCaption)
            End If
        End Function

        Public Function SetFormFieldCheckStyle(ByVal Index As Integer, ByVal CheckStyle As Integer, _
            ByVal Position As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFormFieldCheckStyle(instanceID, Index, CheckStyle, _
                    Position)
            End If
        End Function

        Public Function SetFormFieldChildTitle(ByVal Index As Integer, ByVal NewTitle As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFormFieldChildTitle(instanceID, Index, NewTitle)
            End If
        End Function

        Public Function SetFormFieldChoiceSub(ByVal Index As Integer, ByVal SubIndex As Integer, _
            ByVal SubName As String, ByVal DisplayName As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFormFieldChoiceSub(instanceID, Index, SubIndex, _
                    SubName, DisplayName)
            End If
        End Function

        Public Function SetFormFieldChoiceType(ByVal Index As Integer, ByVal ChoiceType As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFormFieldChoiceType(instanceID, Index, ChoiceType)
            End If
        End Function

        Public Function SetFormFieldColor(ByVal Index As Integer, ByVal Red As Double, _
            ByVal Green As Double, ByVal Blue As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFormFieldColor(instanceID, Index, Red, Green, Blue)
            End If
        End Function

        Public Function SetFormFieldColorCMYK(ByVal Index As Integer, ByVal C As Double, _
            ByVal M As Double, ByVal Y As Double, ByVal K As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFormFieldColorCMYK(instanceID, Index, C, M, Y, K)
            End If
        End Function

        Public Function SetFormFieldColorSep(ByVal Index As Integer, ByVal ColorName As String, _
            ByVal Tint As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFormFieldColorSep(instanceID, Index, ColorName, Tint)
            End If
        End Function

        Public Function SetFormFieldComb(ByVal Index As Integer, ByVal Comb As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFormFieldComb(instanceID, Index, Comb)
            End If
        End Function

        Public Function SetFormFieldDefaultValue(ByVal Index As Integer, _
            ByVal NewDefaultValue As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFormFieldDefaultValue(instanceID, Index, _
                    NewDefaultValue)
            End If
        End Function

        Public Function SetFormFieldDescription(ByVal Index As Integer, _
            ByVal NewDescription As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFormFieldDescription(instanceID, Index, NewDescription)
            End If
        End Function

        Public Function SetFormFieldFlags(ByVal Index As Integer, ByVal NewFlags As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFormFieldFlags(instanceID, Index, NewFlags)
            End If
        End Function

        Public Function SetFormFieldFont(ByVal Index As Integer, ByVal FontIndex As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFormFieldFont(instanceID, Index, FontIndex)
            End If
        End Function

        Public Function SetFormFieldHighlightMode(ByVal Index As Integer, ByVal NewMode As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFormFieldHighlightMode(instanceID, Index, NewMode)
            End If
        End Function

        Public Function SetFormFieldIcon(ByVal Index As Integer, ByVal IconType As Integer, _
            ByVal CaptureID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFormFieldIcon(instanceID, Index, IconType, CaptureID)
            End If
        End Function

        Public Function SetFormFieldIconStyle(ByVal Index As Integer, ByVal Placement As Integer, _
            ByVal Scale As Integer, ByVal ScaleType As Integer, ByVal HorizontalShift As Integer, _
            ByVal VerticalShift As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFormFieldIconStyle(instanceID, Index, Placement, Scale, _
                    ScaleType, HorizontalShift, VerticalShift)
            End If
        End Function

        Public Function SetFormFieldMaxLen(ByVal Index As Integer, ByVal NewMaxLen As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFormFieldMaxLen(instanceID, Index, NewMaxLen)
            End If
        End Function

        Public Function SetFormFieldNoExport(ByVal Index As Integer, ByVal NoExport As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFormFieldNoExport(instanceID, Index, NoExport)
            End If
        End Function

        Public Function SetFormFieldOptional(ByVal Index As Integer, _
            ByVal OptionalContentGroupID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFormFieldOptional(instanceID, Index, _
                    OptionalContentGroupID)
            End If
        End Function

        Public Function SetFormFieldPage(ByVal Index As Integer, ByVal NewPage As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFormFieldPage(instanceID, Index, NewPage)
            End If
        End Function

        Public Function SetFormFieldPrintable(ByVal Index As Integer, ByVal Printable As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFormFieldPrintable(instanceID, Index, Printable)
            End If
        End Function

        Public Function SetFormFieldReadOnly(ByVal Index As Integer, ByVal iReadOnly As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFormFieldReadOnly(instanceID, Index, iReadOnly)
            End If
        End Function

        Public Function SetFormFieldRequired(ByVal Index As Integer, ByVal Required As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFormFieldRequired(instanceID, Index, Required)
            End If
        End Function

        Public Function SetFormFieldResetAction(ByVal Index As Integer, ByVal ActionType As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFormFieldResetAction(instanceID, Index, ActionType)
            End If
        End Function

        Public Function SetFormFieldRichTextString(ByVal Index As Integer, ByVal Key As String, _
            ByVal NewValue As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFormFieldRichTextString(instanceID, Index, Key, _
                    NewValue)
            End If
        End Function

        Public Function SetFormFieldRotation(ByVal Index As Integer, ByVal Angle As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFormFieldRotation(instanceID, Index, Angle)
            End If
        End Function

        Public Function SetFormFieldSignatureImage(ByVal Index As Integer, ByVal ImageID As Integer, _
            ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFormFieldSignatureImage(instanceID, Index, ImageID, _
                    Options)
            End If
        End Function

        Public Function SetFormFieldStandardFont(ByVal Index As Integer, _
            ByVal StandardFontID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFormFieldStandardFont(instanceID, Index, _
                    StandardFontID)
            End If
        End Function

        Public Function SetFormFieldSubmitAction(ByVal Index As Integer, ByVal ActionType As String, _
            ByVal Link As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFormFieldSubmitAction(instanceID, Index, ActionType, _
                    Link)
            End If
        End Function

        Public Function SetFormFieldSubmitActionEx(ByVal Index As Integer, _
            ByVal ActionType As String, ByVal Link As String, ByVal Flags As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFormFieldSubmitActionEx(instanceID, Index, ActionType, _
                    Link, Flags)
            End If
        End Function

        Public Function SetFormFieldTabOrder(ByVal Index As Integer, ByVal Order As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFormFieldTabOrder(instanceID, Index, Order)
            End If
        End Function

        Public Function SetFormFieldTextFlags(ByVal Index As Integer, ByVal Multiline As Integer, _
            ByVal Password As Integer, ByVal FileSelect As Integer, ByVal DoNotSpellCheck As Integer, _
            ByVal DoNotScroll As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFormFieldTextFlags(instanceID, Index, Multiline, _
                    Password, FileSelect, DoNotSpellCheck, DoNotScroll)
            End If
        End Function

        Public Function SetFormFieldTextSize(ByVal Index As Integer, ByVal NewTextSize As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFormFieldTextSize(instanceID, Index, NewTextSize)
            End If
        End Function

        Public Function SetFormFieldTitle(ByVal Index As Integer, ByVal NewTitle As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFormFieldTitle(instanceID, Index, NewTitle)
            End If
        End Function

        Public Function SetFormFieldValue(ByVal Index As Integer, ByVal NewValue As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFormFieldValue(instanceID, Index, NewValue)
            End If
        End Function

        Public Function SetFormFieldValueByTitle(ByVal Title As String, ByVal NewValue As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFormFieldValueByTitle(instanceID, Title, NewValue)
            End If
        End Function

        Public Function SetFormFieldVisible(ByVal Index As Integer, ByVal Visible As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetFormFieldVisible(instanceID, Index, Visible)
            End If
        End Function

        Public Function SetGDIPlusFileName(ByVal DLLFileName As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetGDIPlusFileName(instanceID, DLLFileName)
            End If
        End Function

        Public Function SetGDIPlusOptions(ByVal OptionID As Integer, ByVal NewValue As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetGDIPlusOptions(instanceID, OptionID, NewValue)
            End If
        End Function

        Public Function SetHTMLBoldFont(ByVal FontSet As String, ByVal FontID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetHTMLBoldFont(instanceID, FontSet, FontID)
            End If
        End Function

        Public Function SetHTMLBoldItalicFont(ByVal FontSet As String, ByVal FontID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetHTMLBoldItalicFont(instanceID, FontSet, FontID)
            End If
        End Function

        Public Function SetHTMLItalicFont(ByVal FontSet As String, ByVal FontID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetHTMLItalicFont(instanceID, FontSet, FontID)
            End If
        End Function

        Public Function SetHTMLNormalFont(ByVal FontSet As String, ByVal FontID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetHTMLNormalFont(instanceID, FontSet, FontID)
            End If
        End Function

        Public Function SetHeaderCommentsFromString(ByVal Source As Byte()) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Dim gch As GCHandle = GCHandle.Alloc(Source, GCHandleType.Pinned)
                Dim bufferID As IntPtr = dll.DebenuPDFLibraryCreateBuffer(instanceID, Source.Length)
                dll.DebenuPDFLibraryAddToBuffer(instanceID, bufferID, gch.AddrOfPinnedObject(), Source.Length)
                Dim result As Integer = dll.DebenuPDFLibrarySetHeaderCommentsFromString(instanceID, _
                    bufferID)
                dll.DebenuPDFLibraryReleaseBuffer(instanceID, bufferID)
                gch.Free()
                Return result
            End If
        End Function

        Public Function SetImageAsMask(ByVal MaskType As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetImageAsMask(instanceID, MaskType)
            End If
        End Function

        Public Function SetImageMask(ByVal FromRed As Double, ByVal FromGreen As Double, _
            ByVal FromBlue As Double, ByVal ToRed As Double, ByVal ToGreen As Double, _
            ByVal ToBlue As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetImageMask(instanceID, FromRed, FromGreen, FromBlue, _
                    ToRed, ToGreen, ToBlue)
            End If
        End Function

        Public Function SetImageMaskCMYK(ByVal FromC As Double, ByVal FromM As Double, _
            ByVal FromY As Double, ByVal FromK As Double, ByVal ToC As Double, ByVal ToM As Double, _
            ByVal ToY As Double, ByVal ToK As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetImageMaskCMYK(instanceID, FromC, FromM, FromY, FromK, _
                    ToC, ToM, ToY, ToK)
            End If
        End Function

        Public Function SetImageMaskFromImage(ByVal ImageID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetImageMaskFromImage(instanceID, ImageID)
            End If
        End Function

        Public Function SetImageOptional(ByVal OptionalContentGroupID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetImageOptional(instanceID, OptionalContentGroupID)
            End If
        End Function

        Public Function SetImageResolution(ByVal Horizontal As Integer, ByVal Vertical As Integer, _
            ByVal Units As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetImageResolution(instanceID, Horizontal, Vertical, _
                    Units)
            End If
        End Function

        Public Function SetInformation(ByVal Key As Integer, ByVal NewValue As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetInformation(instanceID, Key, NewValue)
            End If
        End Function

        Public Function SetJPEGQuality(ByVal Quality As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetJPEGQuality(instanceID, Quality)
            End If
        End Function

        Public Function SetJavaScriptMode(ByVal JSMode As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetJavaScriptMode(instanceID, JSMode)
            End If
        End Function

        Public Function SetKerning(ByVal CharPair As String, ByVal Adjustment As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetKerning(instanceID, CharPair, Adjustment)
            End If
        End Function

        Public Function SetLineCap(ByVal LineCap As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetLineCap(instanceID, LineCap)
            End If
        End Function

        Public Function SetLineColor(ByVal Red As Double, ByVal Green As Double, _
            ByVal Blue As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetLineColor(instanceID, Red, Green, Blue)
            End If
        End Function

        Public Function SetLineColorCMYK(ByVal C As Double, ByVal M As Double, ByVal Y As Double, _
            ByVal K As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetLineColorCMYK(instanceID, C, M, Y, K)
            End If
        End Function

        Public Function SetLineColorSep(ByVal ColorName As String, ByVal Tint As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetLineColorSep(instanceID, ColorName, Tint)
            End If
        End Function

        Public Function SetLineDash(ByVal DashOn As Double, ByVal DashOff As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetLineDash(instanceID, DashOn, DashOff)
            End If
        End Function

        Public Function SetLineDashEx(ByVal DashValues As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetLineDashEx(instanceID, DashValues)
            End If
        End Function

        Public Function SetLineJoin(ByVal LineJoin As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetLineJoin(instanceID, LineJoin)
            End If
        End Function

        Public Function SetLineShader(ByVal ShaderName As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetLineShader(instanceID, ShaderName)
            End If
        End Function

        Public Function SetLineWidth(ByVal LineWidth As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetLineWidth(instanceID, LineWidth)
            End If
        End Function

        Public Function SetMarkupAnnotStyle(ByVal Index As Integer, ByVal Red As Double, _
            ByVal Green As Double, ByVal Blue As Double, ByVal Transparency As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetMarkupAnnotStyle(instanceID, Index, Red, Green, Blue, _
                    Transparency)
            End If
        End Function

        Public Function SetMeasureDictBoundsCount(ByVal MeasureDictID As Integer, _
            ByVal NewCount As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetMeasureDictBoundsCount(instanceID, MeasureDictID, _
                    NewCount)
            End If
        End Function

        Public Function SetMeasureDictBoundsItem(ByVal MeasureDictID As Integer, _
            ByVal ItemIndex As Integer, ByVal NewValue As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetMeasureDictBoundsItem(instanceID, MeasureDictID, _
                    ItemIndex, NewValue)
            End If
        End Function

        Public Function SetMeasureDictCoordinateSystem(ByVal MeasureDictID As Integer, _
            ByVal CoordinateSystemID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetMeasureDictCoordinateSystem(instanceID, MeasureDictID, _
                    CoordinateSystemID)
            End If
        End Function

        Public Function SetMeasureDictGPTSCount(ByVal MeasureDictID As Integer, _
            ByVal NewCount As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetMeasureDictGPTSCount(instanceID, MeasureDictID, _
                    NewCount)
            End If
        End Function

        Public Function SetMeasureDictGPTSItem(ByVal MeasureDictID As Integer, _
            ByVal ItemIndex As Integer, ByVal NewValue As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetMeasureDictGPTSItem(instanceID, MeasureDictID, _
                    ItemIndex, NewValue)
            End If
        End Function

        Public Function SetMeasureDictLPTSCount(ByVal MeasureDictID As Integer, _
            ByVal NewCount As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetMeasureDictLPTSCount(instanceID, MeasureDictID, _
                    NewCount)
            End If
        End Function

        Public Function SetMeasureDictLPTSItem(ByVal MeasureDictID As Integer, _
            ByVal ItemIndex As Integer, ByVal NewValue As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetMeasureDictLPTSItem(instanceID, MeasureDictID, _
                    ItemIndex, NewValue)
            End If
        End Function

        Public Function SetMeasureDictPDU(ByVal MeasureDictID As Integer, _
            ByVal LinearUnit As Integer, ByVal AreaUnit As Integer, ByVal AngularUnit As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetMeasureDictPDU(instanceID, MeasureDictID, LinearUnit, _
                    AreaUnit, AngularUnit)
            End If
        End Function

        Public Function SetMeasurementUnits(ByVal MeasurementUnits As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetMeasurementUnits(instanceID, MeasurementUnits)
            End If
        End Function

        Public Function SetNeedAppearances(ByVal NewValue As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetNeedAppearances(instanceID, NewValue)
            End If
        End Function

        Public Function SetObjectFromString(ByVal ObjectNumber As Integer, ByVal Source As Byte()) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Dim gch As GCHandle = GCHandle.Alloc(Source, GCHandleType.Pinned)
                Dim bufferID As IntPtr = dll.DebenuPDFLibraryCreateBuffer(instanceID, Source.Length)
                dll.DebenuPDFLibraryAddToBuffer(instanceID, bufferID, gch.AddrOfPinnedObject(), Source.Length)
                Dim result As Integer = dll.DebenuPDFLibrarySetObjectFromString(instanceID, _
                    ObjectNumber, bufferID)
                dll.DebenuPDFLibraryReleaseBuffer(instanceID, bufferID)
                gch.Free()
                Return result
            End If
        End Function

        Public Function SetOpenActionDestination(ByVal OpenPage As Integer, ByVal Zoom As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetOpenActionDestination(instanceID, OpenPage, Zoom)
            End If
        End Function

        Public Function SetOpenActionDestinationFull(ByVal OpenPage As Integer, _
            ByVal Zoom As Integer, ByVal DestType As Integer, ByVal Left As Double, _
            ByVal Top As Double, ByVal Right As Double, ByVal Bottom As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetOpenActionDestinationFull(instanceID, OpenPage, Zoom, _
                    DestType, Left, Top, Right, Bottom)
            End If
        End Function

        Public Function SetOpenActionJavaScript(ByVal JavaScript As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetOpenActionJavaScript(instanceID, JavaScript)
            End If
        End Function

        Public Function SetOpenActionMenu(ByVal MenuItem As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetOpenActionMenu(instanceID, MenuItem)
            End If
        End Function

        Public Function SetOptionalContentConfigLocked(ByVal OptionalContentConfigID As Integer, _
            ByVal OptionalContentGroupID As Integer, ByVal NewLocked As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetOptionalContentConfigLocked(instanceID, _
                    OptionalContentConfigID, OptionalContentGroupID, NewLocked)
            End If
        End Function

        Public Function SetOptionalContentConfigState(ByVal OptionalContentConfigID As Integer, _
            ByVal OptionalContentGroupID As Integer, ByVal NewState As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetOptionalContentConfigState(instanceID, _
                    OptionalContentConfigID, OptionalContentGroupID, NewState)
            End If
        End Function

        Public Function SetOptionalContentGroupName(ByVal OptionalContentGroupID As Integer, _
            ByVal NewGroupName As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetOptionalContentGroupName(instanceID, _
                    OptionalContentGroupID, NewGroupName)
            End If
        End Function

        Public Function SetOptionalContentGroupPrintable(ByVal OptionalContentGroupID As Integer, _
            ByVal Printable As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetOptionalContentGroupPrintable(instanceID, _
                    OptionalContentGroupID, Printable)
            End If
        End Function

        Public Function SetOptionalContentGroupVisible(ByVal OptionalContentGroupID As Integer, _
            ByVal Visible As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetOptionalContentGroupVisible(instanceID, _
                    OptionalContentGroupID, Visible)
            End If
        End Function

        Public Function SetOrigin(ByVal Origin As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetOrigin(instanceID, Origin)
            End If
        End Function

        Public Function SetOutlineColor(ByVal OutlineID As Integer, ByVal Red As Double, _
            ByVal Green As Double, ByVal Blue As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetOutlineColor(instanceID, OutlineID, Red, Green, Blue)
            End If
        End Function

        Public Function SetOutlineDestination(ByVal OutlineID As Integer, ByVal DestPage As Integer, _
            ByVal DestPosition As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetOutlineDestination(instanceID, OutlineID, DestPage, _
                    DestPosition)
            End If
        End Function

        Public Function SetOutlineDestinationFull(ByVal OutlineID As Integer, _
            ByVal DestPage As Integer, ByVal Zoom As Integer, ByVal DestType As Integer, _
            ByVal Left As Double, ByVal Top As Double, ByVal Right As Double, ByVal Bottom As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetOutlineDestinationFull(instanceID, OutlineID, DestPage, _
                    Zoom, DestType, Left, Top, Right, Bottom)
            End If
        End Function

        Public Function SetOutlineDestinationZoom(ByVal OutlineID As Integer, _
            ByVal DestPage As Integer, ByVal DestPosition As Double, ByVal Zoom As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetOutlineDestinationZoom(instanceID, OutlineID, DestPage, _
                    DestPosition, Zoom)
            End If
        End Function

        Public Function SetOutlineJavaScript(ByVal OutlineID As Integer, ByVal JavaScript As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetOutlineJavaScript(instanceID, OutlineID, JavaScript)
            End If
        End Function

        Public Function SetOutlineNamedDestination(ByVal OutlineID As Integer, _
            ByVal DestName As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetOutlineNamedDestination(instanceID, OutlineID, _
                    DestName)
            End If
        End Function

        Public Function SetOutlineOpenFile(ByVal OutlineID As Integer, ByVal FileName As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetOutlineOpenFile(instanceID, OutlineID, FileName)
            End If
        End Function

        Public Function SetOutlineRemoteDestination(ByVal OutlineID As Integer, _
            ByVal FileName As String, ByVal OpenPage As Integer, ByVal Zoom As Integer, _
            ByVal DestType As Integer, ByVal PntLeft As Double, ByVal PntTop As Double, _
            ByVal PntRight As Double, ByVal PntBottom As Double, ByVal NewWindow As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetOutlineRemoteDestination(instanceID, OutlineID, _
                    FileName, OpenPage, Zoom, DestType, PntLeft, PntTop, PntRight, PntBottom, _
                    NewWindow)
            End If
        End Function

        Public Function SetOutlineStyle(ByVal OutlineID As Integer, ByVal SetItalic As Integer, _
            ByVal SetBold As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetOutlineStyle(instanceID, OutlineID, SetItalic, SetBold)
            End If
        End Function

        Public Function SetOutlineTitle(ByVal OutlineID As Integer, ByVal NewTitle As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetOutlineTitle(instanceID, OutlineID, NewTitle)
            End If
        End Function

        Public Function SetOutlineWebLink(ByVal OutlineID As Integer, ByVal Link As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetOutlineWebLink(instanceID, OutlineID, Link)
            End If
        End Function

        Public Function SetOverprint(ByVal StrokingOverprint As Integer, _
            ByVal OtherOverprint As Integer, ByVal OverprintMode As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetOverprint(instanceID, StrokingOverprint, _
                    OtherOverprint, OverprintMode)
            End If
        End Function

        Public Function SetPDFAMode(ByVal NewMode As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetPDFAMode(instanceID, NewMode)
            End If
        End Function

        Public Function SetPNGTransparencyColor(ByVal RedByte As Integer, ByVal GreenByte As Integer, _
            ByVal BlueByte As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetPNGTransparencyColor(instanceID, RedByte, GreenByte, _
                    BlueByte)
            End If
        End Function

        Public Function SetPageActionMenu(ByVal MenuItem As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetPageActionMenu(instanceID, MenuItem)
            End If
        End Function

        Public Function SetPageBox(ByVal BoxType As Integer, ByVal Left As Double, _
            ByVal Top As Double, ByVal Width As Double, ByVal Height As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetPageBox(instanceID, BoxType, Left, Top, Width, Height)
            End If
        End Function

        Public Function SetPageContentFromString(ByVal Source As Byte()) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Dim gch As GCHandle = GCHandle.Alloc(Source, GCHandleType.Pinned)
                Dim bufferID As IntPtr = dll.DebenuPDFLibraryCreateBuffer(instanceID, Source.Length)
                dll.DebenuPDFLibraryAddToBuffer(instanceID, bufferID, gch.AddrOfPinnedObject(), Source.Length)
                Dim result As Integer = dll.DebenuPDFLibrarySetPageContentFromString(instanceID, _
                    bufferID)
                dll.DebenuPDFLibraryReleaseBuffer(instanceID, bufferID)
                gch.Free()
                Return result
            End If
        End Function

        Public Function SetPageDimensions(ByVal NewPageWidth As Double, _
            ByVal NewPageHeight As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetPageDimensions(instanceID, NewPageWidth, NewPageHeight)
            End If
        End Function

        Public Function SetPageLayout(ByVal NewPageLayout As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetPageLayout(instanceID, NewPageLayout)
            End If
        End Function

        Public Function SetPageMode(ByVal NewPageMode As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetPageMode(instanceID, NewPageMode)
            End If
        End Function

        Public Function SetPageSize(ByVal PaperName As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetPageSize(instanceID, PaperName)
            End If
        End Function

        Public Function SetPageThumbnail() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetPageThumbnail(instanceID)
            End If
        End Function

        Public Function SetPageTransparencyGroup(ByVal CS As Integer, ByVal Isolate As Integer, _
            ByVal Knockout As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetPageTransparencyGroup(instanceID, CS, Isolate, _
                    Knockout)
            End If
        End Function

        Public Function SetPrecision(ByVal NewPrecision As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetPrecision(instanceID, NewPrecision)
            End If
        End Function

        Public Function SetPrinterDevModeFromString(ByVal Source As Byte()) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Dim gch As GCHandle = GCHandle.Alloc(Source, GCHandleType.Pinned)
                Dim bufferID As IntPtr = dll.DebenuPDFLibraryCreateBuffer(instanceID, Source.Length)
                dll.DebenuPDFLibraryAddToBuffer(instanceID, bufferID, gch.AddrOfPinnedObject(), Source.Length)
                Dim result As Integer = dll.DebenuPDFLibrarySetPrinterDevModeFromString(instanceID, _
                    bufferID)
                dll.DebenuPDFLibraryReleaseBuffer(instanceID, bufferID)
                gch.Free()
                Return result
            End If
        End Function

        Public Function SetRenderCropType(ByVal NewCropType As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetRenderCropType(instanceID, NewCropType)
            End If
        End Function

        Public Function SetRenderDCErasePage(ByVal NewErasePage As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetRenderDCErasePage(instanceID, NewErasePage)
            End If
        End Function

        Public Function SetRenderDCOffset(ByVal NewOffsetX As Integer, ByVal NewOffsetY As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetRenderDCOffset(instanceID, NewOffsetX, NewOffsetY)
            End If
        End Function

        Public Function SetRenderOptions(ByVal OptionID As Integer, ByVal NewValue As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetRenderOptions(instanceID, OptionID, NewValue)
            End If
        End Function

        Public Function SetRenderScale(ByVal NewScale As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetRenderScale(instanceID, NewScale)
            End If
        End Function

        Public Function SetScale(ByVal NewScale As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetScale(instanceID, NewScale)
            End If
        End Function

        Public Function SetSignProcessField(ByVal SignProcessID As Integer, _
            ByVal SignatureFieldName As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetSignProcessField(instanceID, SignProcessID, _
                    SignatureFieldName)
            End If
        End Function

        Public Function SetSignProcessFieldBounds(ByVal SignProcessID As Integer, _
            ByVal Left As Double, ByVal Top As Double, ByVal Width As Double, ByVal Height As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetSignProcessFieldBounds(instanceID, SignProcessID, Left, _
                    Top, Width, Height)
            End If
        End Function

        Public Function SetSignProcessFieldImageFromFile(ByVal SignProcessID As Integer, _
            ByVal ImageFileName As String, ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetSignProcessFieldImageFromFile(instanceID, _
                    SignProcessID, ImageFileName, Options)
            End If
        End Function

        Public Function SetSignProcessFieldPage(ByVal SignProcessID As Integer, _
            ByVal SignaturePage As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetSignProcessFieldPage(instanceID, SignProcessID, _
                    SignaturePage)
            End If
        End Function

        Public Function SetSignProcessInfo(ByVal SignProcessID As Integer, ByVal Reason As String, _
            ByVal Location As String, ByVal ContactInfo As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetSignProcessInfo(instanceID, SignProcessID, Reason, _
                    Location, ContactInfo)
            End If
        End Function

        Public Function SetSignProcessKeyset(ByVal SignProcessID As Integer, _
            ByVal KeysetID As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetSignProcessKeyset(instanceID, SignProcessID, KeysetID)
            End If
        End Function

        Public Function SetSignProcessPFXFromFile(ByVal SignProcessID As Integer, _
            ByVal PFXFileName As String, ByVal PFXPassword As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetSignProcessPFXFromFile(instanceID, SignProcessID, _
                    PFXFileName, PFXPassword)
            End If
        End Function

        Public Function SetSignProcessPassthrough(ByVal SignProcessID As Integer, _
            ByVal SignatureLength As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetSignProcessPassthrough(instanceID, SignProcessID, _
                    SignatureLength)
            End If
        End Function

        Public Function SetSignProcessSubFilter(ByVal SignProcessID As Integer, _
            ByVal SubFilter As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetSignProcessSubFilter(instanceID, SignProcessID, _
                    SubFilter)
            End If
        End Function

        Public Function SetTabOrderMode(ByVal Mode As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetTabOrderMode(instanceID, Mode)
            End If
        End Function

        Public Function SetTableBorderColor(ByVal TableID As Integer, ByVal BorderIndex As Integer, _
            ByVal Red As Double, ByVal Green As Double, ByVal Blue As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetTableBorderColor(instanceID, TableID, BorderIndex, Red, _
                    Green, Blue)
            End If
        End Function

        Public Function SetTableBorderColorCMYK(ByVal TableID As Integer, _
            ByVal BorderIndex As Integer, ByVal C As Double, ByVal M As Double, ByVal Y As Double, _
            ByVal K As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetTableBorderColorCMYK(instanceID, TableID, BorderIndex, _
                    C, M, Y, K)
            End If
        End Function

        Public Function SetTableBorderWidth(ByVal TableID As Integer, ByVal BorderIndex As Integer, _
            ByVal NewWidth As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetTableBorderWidth(instanceID, TableID, BorderIndex, _
                    NewWidth)
            End If
        End Function

        Public Function SetTableCellAlignment(ByVal TableID As Integer, ByVal FirstRow As Integer, _
            ByVal FirstColumn As Integer, ByVal LastRow As Integer, ByVal LastColumn As Integer, _
            ByVal NewCellAlignment As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetTableCellAlignment(instanceID, TableID, FirstRow, _
                    FirstColumn, LastRow, LastColumn, NewCellAlignment)
            End If
        End Function

        Public Function SetTableCellBackgroundColor(ByVal TableID As Integer, _
            ByVal FirstRow As Integer, ByVal FirstColumn As Integer, ByVal LastRow As Integer, _
            ByVal LastColumn As Integer, ByVal Red As Double, ByVal Green As Double, _
            ByVal Blue As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetTableCellBackgroundColor(instanceID, TableID, FirstRow, _
                    FirstColumn, LastRow, LastColumn, Red, Green, Blue)
            End If
        End Function

        Public Function SetTableCellBackgroundColorCMYK(ByVal TableID As Integer, _
            ByVal FirstRow As Integer, ByVal FirstColumn As Integer, ByVal LastRow As Integer, _
            ByVal LastColumn As Integer, ByVal C As Double, ByVal M As Double, ByVal Y As Double, _
            ByVal K As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetTableCellBackgroundColorCMYK(instanceID, TableID, _
                    FirstRow, FirstColumn, LastRow, LastColumn, C, M, Y, K)
            End If
        End Function

        Public Function SetTableCellBorderColor(ByVal TableID As Integer, ByVal FirstRow As Integer, _
            ByVal FirstColumn As Integer, ByVal LastRow As Integer, ByVal LastColumn As Integer, _
            ByVal BorderIndex As Integer, ByVal Red As Double, ByVal Green As Double, _
            ByVal Blue As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetTableCellBorderColor(instanceID, TableID, FirstRow, _
                    FirstColumn, LastRow, LastColumn, BorderIndex, Red, Green, Blue)
            End If
        End Function

        Public Function SetTableCellBorderColorCMYK(ByVal TableID As Integer, _
            ByVal FirstRow As Integer, ByVal FirstColumn As Integer, ByVal LastRow As Integer, _
            ByVal LastColumn As Integer, ByVal BorderIndex As Integer, ByVal C As Double, _
            ByVal M As Double, ByVal Y As Double, ByVal K As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetTableCellBorderColorCMYK(instanceID, TableID, FirstRow, _
                    FirstColumn, LastRow, LastColumn, BorderIndex, C, M, Y, K)
            End If
        End Function

        Public Function SetTableCellBorderWidth(ByVal TableID As Integer, ByVal FirstRow As Integer, _
            ByVal FirstColumn As Integer, ByVal LastRow As Integer, ByVal LastColumn As Integer, _
            ByVal BorderIndex As Integer, ByVal NewWidth As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetTableCellBorderWidth(instanceID, TableID, FirstRow, _
                    FirstColumn, LastRow, LastColumn, BorderIndex, NewWidth)
            End If
        End Function

        Public Function SetTableCellContent(ByVal TableID As Integer, ByVal RowNumber As Integer, _
            ByVal ColumnNumber As Integer, ByVal HTMLText As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetTableCellContent(instanceID, TableID, RowNumber, _
                    ColumnNumber, HTMLText)
            End If
        End Function

        Public Function SetTableCellPadding(ByVal TableID As Integer, ByVal FirstRow As Integer, _
            ByVal FirstColumn As Integer, ByVal LastRow As Integer, ByVal LastColumn As Integer, _
            ByVal BorderIndex As Integer, ByVal NewPadding As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetTableCellPadding(instanceID, TableID, FirstRow, _
                    FirstColumn, LastRow, LastColumn, BorderIndex, NewPadding)
            End If
        End Function

        Public Function SetTableCellTextColor(ByVal TableID As Integer, ByVal FirstRow As Integer, _
            ByVal FirstColumn As Integer, ByVal LastRow As Integer, ByVal LastColumn As Integer, _
            ByVal Red As Double, ByVal Green As Double, ByVal Blue As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetTableCellTextColor(instanceID, TableID, FirstRow, _
                    FirstColumn, LastRow, LastColumn, Red, Green, Blue)
            End If
        End Function

        Public Function SetTableCellTextColorCMYK(ByVal TableID As Integer, _
            ByVal FirstRow As Integer, ByVal FirstColumn As Integer, ByVal LastRow As Integer, _
            ByVal LastColumn As Integer, ByVal C As Double, ByVal M As Double, ByVal Y As Double, _
            ByVal K As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetTableCellTextColorCMYK(instanceID, TableID, FirstRow, _
                    FirstColumn, LastRow, LastColumn, C, M, Y, K)
            End If
        End Function

        Public Function SetTableCellTextSize(ByVal TableID As Integer, ByVal FirstRow As Integer, _
            ByVal FirstColumn As Integer, ByVal LastRow As Integer, ByVal LastColumn As Integer, _
            ByVal NewTextSize As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetTableCellTextSize(instanceID, TableID, FirstRow, _
                    FirstColumn, LastRow, LastColumn, NewTextSize)
            End If
        End Function

        Public Function SetTableColumnWidth(ByVal TableID As Integer, ByVal FirstColumn As Integer, _
            ByVal LastColumn As Integer, ByVal NewWidth As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetTableColumnWidth(instanceID, TableID, FirstColumn, _
                    LastColumn, NewWidth)
            End If
        End Function

        Public Function SetTableRowHeight(ByVal TableID As Integer, ByVal FirstRow As Integer, _
            ByVal LastRow As Integer, ByVal NewHeight As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetTableRowHeight(instanceID, TableID, FirstRow, LastRow, _
                    NewHeight)
            End If
        End Function

        Public Function SetTableThinBorders(ByVal TableID As Integer, ByVal ThinBorders As Integer, _
            ByVal Red As Double, ByVal Green As Double, ByVal Blue As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetTableThinBorders(instanceID, TableID, ThinBorders, Red, _
                    Green, Blue)
            End If
        End Function

        Public Function SetTableThinBordersCMYK(ByVal TableID As Integer, _
            ByVal ThinBorders As Integer, ByVal C As Double, ByVal M As Double, ByVal Y As Double, _
            ByVal K As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetTableThinBordersCMYK(instanceID, TableID, ThinBorders, _
                    C, M, Y, K)
            End If
        End Function

        Public Function SetTempFile(ByVal FileName As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetTempFile(instanceID, FileName)
            End If
        End Function

        Public Function SetTempPath(ByVal NewPath As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetTempPath(instanceID, NewPath)
            End If
        End Function

        Public Function SetTextAlign(ByVal TextAlign As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetTextAlign(instanceID, TextAlign)
            End If
        End Function

        Public Function SetTextCharSpacing(ByVal CharSpacing As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetTextCharSpacing(instanceID, CharSpacing)
            End If
        End Function

        Public Function SetTextColor(ByVal Red As Double, ByVal Green As Double, _
            ByVal Blue As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetTextColor(instanceID, Red, Green, Blue)
            End If
        End Function

        Public Function SetTextColorCMYK(ByVal C As Double, ByVal M As Double, ByVal Y As Double, _
            ByVal K As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetTextColorCMYK(instanceID, C, M, Y, K)
            End If
        End Function

        Public Function SetTextColorSep(ByVal ColorName As String, ByVal Tint As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetTextColorSep(instanceID, ColorName, Tint)
            End If
        End Function

        Public Function SetTextExtractionArea(ByVal Left As Double, ByVal Top As Double, _
            ByVal Width As Double, ByVal Height As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetTextExtractionArea(instanceID, Left, Top, Width, _
                    Height)
            End If
        End Function

        Public Function SetTextExtractionOptions(ByVal OptionID As Integer, _
            ByVal NewValue As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetTextExtractionOptions(instanceID, OptionID, NewValue)
            End If
        End Function

        Public Function SetTextExtractionScaling(ByVal Options As Integer, _
            ByVal Horizontal As Double, ByVal Vertical As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetTextExtractionScaling(instanceID, Options, Horizontal, _
                    Vertical)
            End If
        End Function

        Public Function SetTextExtractionWordGap(ByVal NewWordGap As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetTextExtractionWordGap(instanceID, NewWordGap)
            End If
        End Function

        Public Function SetTextHighlight(ByVal Highlight As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetTextHighlight(instanceID, Highlight)
            End If
        End Function

        Public Function SetTextHighlightColor(ByVal Red As Double, ByVal Green As Double, _
            ByVal Blue As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetTextHighlightColor(instanceID, Red, Green, Blue)
            End If
        End Function

        Public Function SetTextHighlightColorCMYK(ByVal C As Double, ByVal M As Double, _
            ByVal Y As Double, ByVal K As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetTextHighlightColorCMYK(instanceID, C, M, Y, K)
            End If
        End Function

        Public Function SetTextHighlightColorSep(ByVal ColorName As String, ByVal Tint As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetTextHighlightColorSep(instanceID, ColorName, Tint)
            End If
        End Function

        Public Function SetTextMode(ByVal TextMode As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetTextMode(instanceID, TextMode)
            End If
        End Function

        Public Function SetTextRise(ByVal Rise As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetTextRise(instanceID, Rise)
            End If
        End Function

        Public Function SetTextScaling(ByVal ScalePercentage As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetTextScaling(instanceID, ScalePercentage)
            End If
        End Function

        Public Function SetTextShader(ByVal ShaderName As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetTextShader(instanceID, ShaderName)
            End If
        End Function

        Public Function SetTextSize(ByVal TextSize As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetTextSize(instanceID, TextSize)
            End If
        End Function

        Public Function SetTextSpacing(ByVal Spacing As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetTextSpacing(instanceID, Spacing)
            End If
        End Function

        Public Function SetTextUnderline(ByVal Underline As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetTextUnderline(instanceID, Underline)
            End If
        End Function

        Public Function SetTextUnderlineColor(ByVal Red As Double, ByVal Green As Double, _
            ByVal Blue As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetTextUnderlineColor(instanceID, Red, Green, Blue)
            End If
        End Function

        Public Function SetTextUnderlineColorCMYK(ByVal C As Double, ByVal M As Double, _
            ByVal Y As Double, ByVal K As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetTextUnderlineColorCMYK(instanceID, C, M, Y, K)
            End If
        End Function

        Public Function SetTextUnderlineColorSep(ByVal ColorName As String, ByVal Tint As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetTextUnderlineColorSep(instanceID, ColorName, Tint)
            End If
        End Function

        Public Function SetTextUnderlineCustomDash(ByVal DashPattern As String, _
            ByVal DashPhase As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetTextUnderlineCustomDash(instanceID, DashPattern, _
                    DashPhase)
            End If
        End Function

        Public Function SetTextUnderlineDash(ByVal DashOn As Double, ByVal DashOff As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetTextUnderlineDash(instanceID, DashOn, DashOff)
            End If
        End Function

        Public Function SetTextUnderlineDistance(ByVal UnderlineDistance As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetTextUnderlineDistance(instanceID, UnderlineDistance)
            End If
        End Function

        Public Function SetTextUnderlineWidth(ByVal UnderlineWidth As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetTextUnderlineWidth(instanceID, UnderlineWidth)
            End If
        End Function

        Public Function SetTextWordSpacing(ByVal WordSpacing As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetTextWordSpacing(instanceID, WordSpacing)
            End If
        End Function

        Public Function SetTransparency(ByVal Transparency As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetTransparency(instanceID, Transparency)
            End If
        End Function

        Public Function SetViewerPreferences(ByVal iOption As Integer, ByVal NewValue As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetViewerPreferences(instanceID, iOption, NewValue)
            End If
        End Function

        Public Function SetXFAFormFieldAccess(ByVal XFAFieldName As String, _
            ByVal NewAccess As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetXFAFormFieldAccess(instanceID, XFAFieldName, NewAccess)
            End If
        End Function

        Public Function SetXFAFormFieldBorderColor(ByVal XFAFieldName As String, ByVal Red As Double, _
            ByVal Green As Double, ByVal Blue As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetXFAFormFieldBorderColor(instanceID, XFAFieldName, Red, _
                    Green, Blue)
            End If
        End Function

        Public Function SetXFAFormFieldBorderPresence(ByVal XFAFieldName As String, _
            ByVal NewPresence As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetXFAFormFieldBorderPresence(instanceID, XFAFieldName, _
                    NewPresence)
            End If
        End Function

        Public Function SetXFAFormFieldBorderWidth(ByVal XFAFieldName As String, _
            ByVal BorderWidth As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetXFAFormFieldBorderWidth(instanceID, XFAFieldName, _
                    BorderWidth)
            End If
        End Function

        Public Function SetXFAFormFieldValue(ByVal XFAFieldName As String, ByVal NewValue As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetXFAFormFieldValue(instanceID, XFAFieldName, NewValue)
            End If
        End Function

        Public Function SetXFAFromString(ByVal Source As Byte(), ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Dim gch As GCHandle = GCHandle.Alloc(Source, GCHandleType.Pinned)
                Dim bufferID As IntPtr = dll.DebenuPDFLibraryCreateBuffer(instanceID, Source.Length)
                dll.DebenuPDFLibraryAddToBuffer(instanceID, bufferID, gch.AddrOfPinnedObject(), Source.Length)
                Dim result As Integer = dll.DebenuPDFLibrarySetXFAFromString(instanceID, bufferID, _
                    Options)
                dll.DebenuPDFLibraryReleaseBuffer(instanceID, bufferID)
                gch.Free()
                Return result
            End If
        End Function

        Public Function SetupCustomPrinter(ByVal CustomPrinterName As String, _
            ByVal Setting As Integer, ByVal NewValue As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySetupCustomPrinter(instanceID, CustomPrinterName, Setting, _
                    NewValue)
            End If
        End Function

        Public Function SignFile(ByVal InputFileName As String, ByVal OpenPassword As String, _
            ByVal SignatureFieldName As String, ByVal OutputFileName As String, _
            ByVal PFXFileName As String, ByVal PFXPassword As String, ByVal Reason As String, _
            ByVal Location As String, ByVal ContactInfo As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySignFile(instanceID, InputFileName, OpenPassword, _
                    SignatureFieldName, OutputFileName, PFXFileName, PFXPassword, Reason, Location, _
                    ContactInfo)
            End If
        End Function

        Public Function SplitPageText(ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibrarySplitPageText(instanceID, Options)
            End If
        End Function

        Public Function StartPath(ByVal StartX As Double, ByVal StartY As Double) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryStartPath(instanceID, StartX, StartY)
            End If
        End Function

        Public Function StoreCustomDataFromFile(ByVal Key As String, ByVal FileName As String, _
            ByVal Location As Integer, ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryStoreCustomDataFromFile(instanceID, Key, FileName, _
                    Location, Options)
            End If
        End Function

        Public Function StoreCustomDataFromString(ByVal Key As String, ByVal NewValue As Byte(), _
            ByVal Location As Integer, ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Dim gch As GCHandle = GCHandle.Alloc(NewValue, GCHandleType.Pinned)
                Dim bufferID As IntPtr = dll.DebenuPDFLibraryCreateBuffer(instanceID, NewValue.Length)
                dll.DebenuPDFLibraryAddToBuffer(instanceID, bufferID, gch.AddrOfPinnedObject(), NewValue.Length)
                Dim result As Integer = dll.DebenuPDFLibraryStoreCustomDataFromString(instanceID, _
                    Key, bufferID, Location, Options)
                dll.DebenuPDFLibraryReleaseBuffer(instanceID, bufferID)
                gch.Free()
                Return result
            End If
        End Function

        Public Function StringResultLength() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryStringResultLength(instanceID)
            End If
        End Function

        Public Function TestTempPath() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryTestTempPath(instanceID)
            End If
        End Function

        Public Function TransformFile(ByVal InputFileName As String, ByVal Password As String, _
            ByVal OutputFileName As String, ByVal TransformType As Integer, ByVal Options As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryTransformFile(instanceID, InputFileName, Password, _
                    OutputFileName, TransformType, Options)
            End If
        End Function

        Public Function UnlockKey(ByVal LicenseKey As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryUnlockKey(instanceID, LicenseKey)
            End If
        End Function

        Public Function Unlocked() As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryUnlocked(instanceID)
            End If
        End Function

        Public Function UpdateAndFlattenFormField(ByVal Index As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryUpdateAndFlattenFormField(instanceID, Index)
            End If
        End Function

        Public Function UpdateAppearanceStream(ByVal Index As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryUpdateAppearanceStream(instanceID, Index)
            End If
        End Function

        Public Function UpdateTrueTypeSubsettedFont(ByVal SubsetChars As String) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryUpdateTrueTypeSubsettedFont(instanceID, SubsetChars)
            End If
        End Function

        Public Function UseKerning(ByVal Kern As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryUseKerning(instanceID, Kern)
            End If
        End Function

        Public Function UseUnsafeContentStreams(ByVal SafetyLevel As Integer) As Integer
            If (dll Is Nothing) Then
                Return 0
            Else
                Return dll.DebenuPDFLibraryUseUnsafeContentStreams(instanceID, SafetyLevel)
            End If
        End Function
    End Class
End Namespace
